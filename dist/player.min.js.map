{"version":3,"sources":["webpack:///webpack/bootstrap 285aa4e18d5994eb58c5","webpack:///./src/audiocontext/decoder/global.js","webpack:///./src/common/bitstream.js","webpack:///./src/common/range.js","webpack:///./src/audiocontext/decoder/bit.js","webpack:///./src/audiocontext/decoder/bytestream.js","webpack:///./src/common/util.js","webpack:///./src/mp3info/mp3info.js","webpack:///./index.js","webpack:///./src/audiocontext/player.js","webpack:///./src/audiocontext/decoder/decoder.js","webpack:///./src/audiocontext/decoder/frame.js","webpack:///./src/audiocontext/decoder/stringstream.js","webpack:///./src/audiocontext/decoder/layer3.js","webpack:///./src/audiocontext/decoder/huffman.js","webpack:///./src/audiocontext/decoder/imdct_s.js","webpack:///./src/audiocontext/decoder/synth.js","webpack:///./src/audiocontext/decoder/stream.js","webpack:///./src/audiocontext/decoder/bufferStream.js","webpack:///./src/audiocontext/decoder/substream.js","webpack:///./src/mp3info/header.js","webpack:///./src/mp3info/id3tag.js","webpack:///./src/mediasource/player.js","webpack:///./src/audio/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Mad","NONE","BUFLEN","BUFPTR","NOMEM","LOSTSYNC","BADLAYER","BADBITRATE","BADSAMPLERATE","BADEMPHASIS","BADCRC","BADBITALLOC","BADSCALEFACTOR","BADMODE","BADFRAMELEN","BADBIGVALUES","BADBLOCKTYPE","BADSCFSI","BADDATAPTR","BADPART3LEN","BADHUFFTABLE","BADHUFFDATA","BADSTEREO","BUFFER_MDLEN","BUFFER_GUARD","Layer","I","II","III","Mode","SINGLE_CHANNEL","DUAL_CHANNEL","JOINT_STEREO","STEREO","Emphasis","_50_15_US","CCITT_J_17","RESERVED","Flag","NPRIVATE_III","INCOMPLETE","PROTECTION","COPYRIGHT","ORIGINAL","PADDING","I_STEREO","MS_STEREO","FREEFORMAT","LSF_EXT","MC_EXT","MPEG_2_5_EXT","Private","HEADER","count1table_select","scalefac_scale","preflag","mixed_block_flag","sbsampleIndex","j","k","overlapIndex","recoverable","error","mul","str","num","Math","ceil","log","LN2","res","slice","length","memcpy","dst","dstOffset","src","srcOffset","rshift","bits","floor","pow","lshiftU32","bitwiseAnd","lshift","bitwiseOr","a","b","w","__webpack_exports__","BitStream","arrayBuffer","ArrayBuffer","this","_uint8Array","Uint8Array","Error","_bytePos","_bitPos","buffer","end","_proto_","getBuffer","getBits","len","sum","getBits1","bit","getByte","byte","getBitsStr","zeroize","toString","legnth","zeros","getBytePos","pos","getBitPos","setBytePos","setBitPos","setBit","bytePos","bitPos","setByte","skipBits","skipBytes","rewindBits","rewindBytes","append","newBuffer","set","unshift","isEnd","getSize","reset","begin","byteArr","tmp","url","opt","onsuccess","onerror","onabort","ontimeout","request","XMLHttpRequest","open","responseType","onload","response","contetnRange","getResponseHeader","split","substr","console","setRequestHeader","send","__WEBPACK_IMPORTED_MODULE_0__stringstream__","__WEBPACK_IMPORTED_MODULE_1__global__","Bit","stream","offset","cache","left","clone","nextbyte","skip","getU8","read","readBig","value","ByteStream","available","absoluteAvailable","state","bigEndian","charCodeAt","getU16","bytes","reverse","getU24","getU32","getI8","getI16","getI32","getSyncInteger","peekU8","peekU16","peekU24","peekU32","peekI8","peekI16","peekI32","peekSyncInteger","readU8","result","seek","readU16","readU24","readU32","readI8","readI16","readI32","readSyncInteger","Util","bufferStr","uint8Array","frameSync","frameSize","count","flagReg","RegExp","match","toUpperCase","indexOf","seconds","noZero","date","Date","setDate","setHours","setMinutes","setSeconds","data","hours","getHours","minutes","getMinutes","getSeconds","location","href","search","apply","window","arguments","__WEBPACK_IMPORTED_MODULE_0__common_range__","__WEBPACK_IMPORTED_MODULE_1__common_bitstream__","__WEBPACK_IMPORTED_MODULE_3__header__","__WEBPACK_IMPORTED_MODULE_4__id3tag__","MP3Info","init","self","decrypt","onloadedmetadata","indexSize","audioInfo","Promise","resolve","reject","_loadHeaderInfo","then","_loadFirstFrame","header","parseHeader","toc","totalSize","totalBytes","sampleRate","duration","totalDuration","bitRate","_getFooterLength","id3tag","audioDataOffset","parseId3V2","parseApe","fileSize","parseInt","footerLength","parseId3V1","__WEBPACK_IMPORTED_MODULE_0__src_audiocontext_player__","__WEBPACK_IMPORTED_MODULE_1__src_mediasource_player__","Player","usemediasource","__WEBPACK_IMPORTED_MODULE_1__common_util__","__WEBPACK_IMPORTED_MODULE_2__common_bitstream__","__WEBPACK_IMPORTED_MODULE_3__decoder_decoder__","__WEBPACK_IMPORTED_MODULE_4__mp3info_mp3info__","emptyCb","onbeforedecode","ontimeupdate","onplay","onpause","onwaiting","onplaying","onended","isIos","navigator","userAgent","audio","timeoutIds","decodeTimeoutId","updateIntervalId","playTimoutId","reloadTimeoutId","Mp3Player","_url","player","_init","Audio","emptyUrl","bufferLength","audioContext","AudioContext","webkitAudioContext","onstatechange","isPlaying","decoder","fileBlocks","Array","cacheFrameSize","seeking","totalBuffer","nowSouceNode","loadingPromise","_decodeAudioData","index","minSize","negative","beginDecodeTime","_loadFrame","beginIndex","endIndex","ifDebug","decodeBeginTime","getTime","redoCount","_onsuccess","numberOfChannels","createBuffer","preBuffer","dataOffset","dataBegin","dataEnd","_copyPCMData","hasPlayed","pause","_play","waiting","resume","nextDecodeTime","clearTimeout","setTimeout","stopNextLoad","_nextDecode","exceed","kill","decode","_onerror","_fixFileBlock","_buffer","cData","getChannelData","startTime","offsetTime","currentTime","round","disconnect","sourceNode","createBufferSource","connect","destination","_end","start","noteOn","_startUpdateTimeoutId","clearInterval","beginTime","setInterval","suspend","finished","_clearTimeout","cached","originMinSize","_joinNextCachedFileBlock","_getRangeBeginByIndex","promise","byteLength","e","catch","arr","indexLength","joinBegin","begeinExtraLength","getLengthByFrameSync","mainDataOffset","bitstream","_getMainDataOffset","u8a","_seek","resumeTime","abort","play","clickPlayTime","hasClick","undefined","percent","destory","close","__WEBPACK_IMPORTED_MODULE_0__frame__","__WEBPACK_IMPORTED_MODULE_1__synth__","__WEBPACK_IMPORTED_MODULE_2__stream__","__WEBPACK_IMPORTED_MODULE_3__bufferStream__","__WEBPACK_IMPORTED_MODULE_4__substream__","__WEBPACK_IMPORTED_MODULE_5__global__","Decoder","decodeQue","Mp3AudioBuffer","channelCount","samples","createMpegStream","frame","mpeg","synth","nchannels","samplerate","now","_compelete","decodeTimmer","decoding","shift","push","_decode","bufend","next_frame","this_frame","ch","concat","pcm","oldBuffer","anc_ptr","ptr","channel","__WEBPACK_IMPORTED_MODULE_0__global__","__WEBPACK_IMPORTED_MODULE_1__bit__","bitrate_table","samplerate_table","decoder_table","Header","layer","mode","mode_extension","emphasis","bitrate","crc_check","crc_target","flags","private_bits","nbsamples","actually_decode","pad_slot","N","skiplen","sync","syncing","doSync","Frame","options","sbsample","grp","overlap","sb","__WEBPACK_IMPORTED_MODULE_0__bytestream__","StringStream","string","amountRead","updated","peek","__WEBPACK_IMPORTED_MODULE_0__huffman__","__WEBPACK_IMPORTED_MODULE_1__imdct_s__","__WEBPACK_IMPORTED_MODULE_2__global__","__WEBPACK_IMPORTED_MODULE_3__bit__","sfbwidth_table","pretab","root_table","cs","ca","window_l","window_s","is_table","is_lsf_table","sflen_table","slen1","slen2","Granule","Channel","table_select","scalefac","subblock_gain","III_huffdecode","xr","sfbwidth","part2_length","bits_left","cachesz","xrptr","sfbound","bitcache","exponents","Int32Array","expptr","sfbwidthptr","part2_3_length","III_exponents","rcount","region","reqcache","region0_count","entry","table","linbits","startbits","exp","reqhits","big_values","pair","clumpsz","region1_count","hlen","x_final","x","requantized","III_requantize","y_final","y","quad","v","III_scalefactors","gr0ch","scfsi","scalefac_compress","block_type","sfbi","nsfb","c0","cos","PI","c1","c2","c3","c4","c5","c6","fastsdct","a0","a1","a2","a3","a4","a5","a6","a7","a12","a18","a19","a20","a21","a22","a23","a24","a25","m0","m1","m2","m3","m4","m5","m6","m7","sdctII_scale","dctIV_scale","dctIV","X","sdctII","III_imdct_s","z","lo","yptr","Xptr","sptr","wptr","III_imdct_l","imdct36","III_freqinver","sample","gain","global_gain","scalefac_multiplier","premask","gain0","gain1","gain2","frac","III_aliasreduce","lines","xrPointer","III_overlap","output","III_overlap_z","III_reorder","sfbwidthPointer","sbw","sw","f","tmp2","III_stereo","granule","invsqrt2","modes","is_pos","lsf_scale","right_ch","right_xr","lower","max","bound","illegal_pos","opposite","nch","si_len","md_len","frame_space","frame_used","frame_free","next_md_begin","mad_bit_crc","Option","IGNORECRC","sideinfoResult","lsf","si","gr","data_bitlen","priv_bitlen","main_data_begin","ngr","III_sideinfo","old_md_len","main_data","sfreqi","sfreq","III_scalefactors_lsf","debug","huffdecode","write","iteration","toFixed","sblimit","III_decode","anc_bitlen","extra","PTR","offs","final","huffquad_V","hufftabA","hufftabB","V","hufftab0","hufftab1","hufftab2","hufftab3","hufftab5","hufftab6","hufftab7","hufftab8","hufftab9","hufftab10","hufftab11","hufftab12","hufftab13","hufftab15","hufftab16","hufftab24","Hufftable","huff_quad_table","huff_pair_table","Synth","filter","mute","phase","channels","costab8","costab16","dct32","_in","slot","hi","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50","t51","t52","t53","t54","t55","t56","t57","t58","t59","t60","t61","t62","t63","t64","t65","t66","t67","t68","t69","t70","t71","t72","t73","t74","t75","t76","t77","t78","t79","t80","t81","t82","t83","t84","t85","t86","t87","t88","t89","t90","t91","t92","t93","t94","t95","t96","t97","t98","t99","t100","t101","t102","t103","t104","t105","t106","t107","t108","t109","t110","t111","t112","t113","t114","t115","t116","t117","t118","t119","t120","t121","t122","t123","t124","t125","t126","t127","t128","t129","t130","t131","t132","t133","t134","t135","t136","t137","t138","t139","t140","t141","t142","t143","t144","t145","t146","t147","t148","t149","t150","t151","t152","t153","t154","t155","t156","t157","t158","t159","t160","t161","t162","t163","t164","t165","t166","t167","t168","t169","t170","t171","t172","t173","t174","t175","t176","D","full","ns","Dptr","_fx","_fe","_fo","pcm1Ptr","pcm2Ptr","pe","po","fe","fx","fo","fePtr","foPtr","__WEBPACK_IMPORTED_MODULE_0__bit__","Stream","freerate","fromFile","file","callback","reader","FileReader","onloadend","evt","target","readAsBinaryString","readShort","bBigEndian","readSShort","readChars","peekChars","BufferStream","tmpbuffer","String","fromCharCode","requestAbsolute","SubStream","parentStream","bitRateMap","1","10","11","100","101","110","111","1000","1001","1010","1011","1100","1101","1110","sampleRateMap","0","hasParseVbr","_bitStream","bitStream","beginPos","verID","protectionBit","bitrateIndex","sampleRateIndex","paddingBit","privateBit","channelMode","channelModeExtension","copyright","original","sideInfoSize","mainDataSize","endBytePos","parseVbr","totalFrames","tag","tocSize","__WEBPACK_IMPORTED_MODULE_0__common_bitstream__","TEXT_ENCODING","TextDecoder","gbkDecoder","utf8Decoder","Id3Tag","checkId3V1","tagSize","checkId3V2","checkApe","title","artist","album","year","comment","genre","_getItem","cont","key","strCode","charAt","itemSize","isHeader","__WEBPACK_IMPORTED_MODULE_0__audio_index__","__WEBPACK_IMPORTED_MODULE_1__common_range__","__WEBPACK_IMPORTED_MODULE_2__mp3info_mp3info__","blockSize","mimeCodec","_generateBlob","mediaSource","MediaSource","URL","createObjectURL","addEventListener","readyState","sourceBuffer","addSourceBuffer","endOfStream","_loadNext","appendBuffer","errorCb","emptyFn","onloadstart","onupdateBar","oncanplay","onseeking","playBtn","pauseBtn","forceSeek","seekTimeoutId","canUpdateTime","allListener","AudioObj","_bindAudioEvent","_bindClickEvent","destroy","_removeAllEvent","isTime","ifStop","_ifSeekable","_setNearCurrentTime","updateTime","seekable","paused","stopUpdateTime","startUpdateTime","removeAllEvent","getSource","_addEvent","time","abs","event","_stopPropagation","canSeek","bufferd","distance","preTime","ele","event_name","func","attachEvent","_removeEvent","detachEvent","removeEventListener","listener","stopPropagation","cancelBubble","_preventDefault","preventDefault","returnValue"],"mappings":"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CRM,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRN,EAAI,GAAI,GACRA,EAAI,GAAI,GACRA,EAAI,GAAI,GACRM,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRN,EAAI,GAAI,GACRM,EAAE,EAAG,EAAG,GACRN,EAAI,GAAI,GACRM,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAA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AAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRN,EAAI,GAAI,GACRM,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRN,EAAI,GAAI,GACRM,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAA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AI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRN,EAAI,IAAK,GACTM,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVN,EAAI,IAAK,GACTM,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAA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AI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,G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CTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,GAAI,GAAI,GACVN,EAAI,IAAK,GACTM,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,EAA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I,GAGVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,GAAI,GAGVA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,GAAI,GACVA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,GAAI,GACTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,GAAI,GACTA,EAAE,GAAI,EAAG,GAGTA,EAAE,GAAI,EAAG,GACTA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,EAAE,EAAG,EAAG,GAGRA,EAAE,EAAG,EAAG,GACRA,E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WACA,WACA,SACA,WACA,WAEC,UACA,UACD,YACC,WACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,WACA,WACA,SACA,WACA,aAEC,UACA,UACD,YACC,WACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,UACA,WACA,WACA,WACA,WAEC,UACA,UACD,YACC,WACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,UACA,WACA,WACA,WACA,aAEC,UACA,SACD,YACC,WACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,UACA,WAEC,UACA,SACD,YACC,WACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,UACA,aAEC,UACA,UACD,YACC,WACD,YACC,WACD,YACC,UACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEC,UACA,UACD,YACC,WACD,YACC,WACD,YACC,UACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,aAEC,UACA,UACD,YACC,WACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEC,UACA,UACD,YACC,WACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,aAEC,UACA,UACD,YACC,WACD,YACC,WACD,WACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEC,UACA,UACD,YACC,WACD,YACC,WACD,WACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,aAEC,UACA,SACD,YACC,UACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEC,UACA,SACD,YACC,UACD,YACC,WACD,YACC,WACD,YACA,WACA,WACA,WACA,WACA,WACA,WACA,aAEC,UACA,UACD,YACC,WACD,WACC,YACA,YACA,WACD,YACA,WACA,WACA,WACA,WACA,UACA,WACA,WAEC,UACA,UACD,YACC,WACD,WACC,YACA,YACA,WACD,YACA,WACA,WACA,WACA,WACA,UACA,WACA,aAEC,UACA,WACD,WACC,WACD,WACC,YACA,WACA,WACD,WACA,WACA,WACA,WACA,WACA,SACA,WACA,WAEC,UACA,WACD,WACC,WACD,WACC,YACA,WACA,WACD,WACA,WACA,WACA,WACA,WACA,SACA,WACA,aAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,WACD,YACA,WACA,WACA,WACA,YACC,UACD,WACA,WAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,WACD,YACA,WACA,WACA,WACA,YACC,UACD,WACA,aAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,WACD,YACA,WACA,WACA,WACA,WACC,UACD,UACA,UAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,WACD,YACA,WACA,WACA,WACA,WACC,UACD,UACA,YAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,UACD,YACA,WACA,UACA,WACA,WACC,WACD,WACA,WAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,UACD,YACA,WACA,UACA,WACA,WACC,WACD,WACA,aAEC,UACA,UACD,YACC,WACD,YACC,YACA,YACA,WACD,WACA,WACA,WACA,UACA,YACC,WACD,WACA,WAEC,UACA,UACD,YACC,WACD,YACC,YACA,YACA,WACD,WACA,WACA,WACA,UACA,YACC,WACD,WACA,aAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,WACD,WACA,WACA,WACA,WACA,YACC,WACD,WACA,UAEC,UACA,WACD,YACC,WACD,YACC,YACA,YACA,WACD,WACA,WACA,WACA,WACA,YACC,WACD,WACA,YAEC,UACA,WACD,YACC,YACA,WACA,YACA,YACA,WACD,WACA,WACA,WACA,UACA,YACC,WACD,WACA,UAEC,UACA,WACD,YACC,YACA,WACA,YACA,YACA,WACD,WACA,WACA,WACA,UACA,YACC,WACD,WACA,WAON5L,EAAMzqB,UAAUs2B,KAAO,SAASvc,EAAO+M,EAAKyP,GAGxC,IAFA,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","file":"player.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 285aa4e18d5994eb58c5","var Mad = {};\r\n\r\nMad.Error = {\r\n  NONE           : 0x0000,      /* no error */\r\n\r\n  BUFLEN         : 0x0001,      /* input buffer too small (or EOF) */\r\n  BUFPTR         : 0x0002,      /* invalid (null) buffer pointer */\r\n\r\n  NOMEM          : 0x0031,      /* not enough memory */\r\n\r\n  LOSTSYNC       : 0x0101,      /* lost synchronization */\r\n  BADLAYER       : 0x0102,      /* reserved header layer value */\r\n  BADBITRATE     : 0x0103,      /* forbidden bitrate value */\r\n  BADSAMPLERATE  : 0x0104,      /* reserved sample frequency value */\r\n  BADEMPHASIS    : 0x0105,      /* reserved emphasis value */\r\n\r\n  BADCRC         : 0x0201,      /* CRC check failed */\r\n  BADBITALLOC    : 0x0211,      /* forbidden bit allocation value */\r\n  BADSCALEFACTOR : 0x0221,      /* bad scalefactor index */\r\n  BADMODE        : 0x0222,      /* bad bitrate/mode combination */\r\n  BADFRAMELEN    : 0x0231,      /* bad frame length */\r\n  BADBIGVALUES   : 0x0232,      /* bad big_values count */\r\n  BADBLOCKTYPE   : 0x0233,      /* reserved block_type */\r\n  BADSCFSI       : 0x0234,      /* bad scalefactor selection info */\r\n  BADDATAPTR     : 0x0235,      /* bad main_data_begin pointer */\r\n  BADPART3LEN    : 0x0236,      /* bad audio data length */\r\n  BADHUFFTABLE   : 0x0237,      /* bad Huffman table select */\r\n  BADHUFFDATA    : 0x0238,      /* Huffman data overrun */\r\n  BADSTEREO      : 0x0239       /* incompatible block_type for JS */\r\n};\r\nMad.BUFFER_GUARD = 8;\r\nMad.BUFFER_MDLEN = (511 + 2048 + Mad.BUFFER_GUARD);\r\nMad.Layer = {\r\n    I: 1,\r\n    II: 2,\r\n    III: 3\r\n};\r\nMad.Mode = {\r\n    SINGLE_CHANNEL      : 0,\r\n    DUAL_CHANNEL        : 1,      /* dual channel */\r\n    JOINT_STEREO        : 2,      /* joint (MS/intensity) stereo */\r\n    STEREO              : 3       /* normal LR stereo */\r\n};\r\nMad.Emphasis = {\r\n    NONE       : 0,     /* no emphasis */\r\n    _50_15_US  : 1,     /* 50/15 microseconds emphasis */\r\n    CCITT_J_17 : 3,     /* CCITT J.17 emphasis */\r\n    RESERVED   : 2      /* unknown emphasis */\r\n};\r\nMad.Flag = {\r\n    NPRIVATE_III   : 0x0007,   /* number of Layer III private bits */\r\n    INCOMPLETE : 0x0008,   /* header but not data is decoded */\r\n\r\n    PROTECTION : 0x0010,   /* frame has CRC protection */\r\n    COPYRIGHT  : 0x0020,   /* frame is copyright */\r\n    ORIGINAL   : 0x0040,   /* frame is original (else copy) */\r\n    PADDING    : 0x0080,   /* frame has additional slot */\r\n\r\n    I_STEREO   : 0x0100,   /* uses intensity joint stereo */\r\n    MS_STEREO  : 0x0200,   /* uses middle/side joint stereo */\r\n    FREEFORMAT : 0x0400,   /* uses free format bitrate */\r\n\r\n    LSF_EXT    : 0x1000,   /* lower sampling freq. extension */\r\n    MC_EXT : 0x2000,   /* multichannel audio extension */\r\n    MPEG_2_5_EXT   : 0x4000    /* MPEG 2.5 (unofficial) extension */\r\n};\r\nMad.Private = {\r\n    HEADER  : 0x0100,   /* header private bit */\r\n    III : 0x001f    /* Layer III private bits (up to 5) */\r\n};\r\nMad.count1table_select = 0x01;\r\nMad.scalefac_scale     = 0x02;\r\nMad.preflag            = 0x04;\r\nMad.mixed_block_flag   = 0x08;\r\nMad.I_STEREO  = 0x1;\r\nMad.MS_STEREO = 0x2;\r\n\r\nMad.sbsampleIndex = function (i, j, k) {\r\n    return i * 36 * 32 + j * 32 + k;\r\n};\r\n\r\nMad.overlapIndex = function (i, j, k) {\r\n    return i * 32 * 18 + j * 18 + k;\r\n};\r\n\r\n\r\nMad.recoverable = function (error) {\r\n    return (error & 0xff00) != 0;\r\n};\r\n\r\n// credit: http://blog.stevenlevithan.com/archives/fast-string-multiply\r\nMad.mul = function (str, num) {\r\n        var     i = Math.ceil(Math.log(num) / Math.LN2), res = str;\r\n        do {\r\n                res += res;\r\n        } while (0 < --i);\r\n        return res.slice(0, str.length * num);\r\n};\r\n\r\nMad.memcpy = function (dst, dstOffset, src, srcOffset, length) {\r\n    // this is a pretty weird memcpy actually - it constructs a new version of dst, because we have no other way to do it\r\n    return dst.slice(0, dstOffset) + src.slice(srcOffset, srcOffset + length) + dst.slice(dstOffset + length);\r\n};\r\n\r\nMad.rshift = function (num, bits) {\r\n    return Math.floor(num / Math.pow(2, bits));\r\n};\r\n\r\nMad.lshiftU32 = function (num, bits) {\r\n    return Mad.bitwiseAnd(Mad.lshift(num, bits), 4294967295 /* 2^32 - 1 */);\r\n};\r\n\r\nMad.lshift = function (num, bits) {\r\n    return num * Math.pow(2, bits);\r\n};\r\n\r\nMad.bitwiseOr = function (a, b) {\r\n    var w = 2147483648; // 2^31\r\n\r\n    var aHI = (a / w) << 0;\r\n    var aLO = a % w;\r\n    var bHI = (b / w) << 0;\r\n    var bLO = b % w;\r\n\r\n    return ((aHI | bHI) * w + (aLO | bLO));\r\n};\r\n\r\nMad.bitwiseAnd = function (a, b) {\r\n    var w = 2147483648; // 2^31\r\n\r\n    var aHI = (a / w) << 0;\r\n    var aLO = a % w;\r\n    var bHI = (b / w) << 0;\r\n    var bLO = b % w;\r\n\r\n    return ((aHI & bHI) * w + (aLO & bLO));\r\n};\r\n\r\nexport default Mad;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/global.js","/**\r\n * bit流模块\r\n */\r\nfunction BitStream(arrayBuffer) {\r\n    if (arrayBuffer instanceof ArrayBuffer) {\r\n        this._uint8Array = new Uint8Array(arrayBuffer);\r\n    } else if (typeof arrayBuffer == 'number') {\r\n        arrayBuffer = new ArrayBuffer(arrayBuffer);\r\n        this._uint8Array = new Uint8Array(arrayBuffer);\r\n    } else {\r\n        throw Error('参数错误');\r\n    }\r\n    this._bytePos = 0; //当前bit位置\r\n    this._bitPos = 0; //当前字节位置\r\n    this.buffer = arrayBuffer;\r\n    this.end = 0;\r\n}\r\nvar _proto_ = BitStream.prototype;\r\n/**\r\n * 返回buffer\r\n * @return  arraybuffer\r\n */\r\n_proto_.getBuffer = function() {\r\n        return this._uint8Array.buffer;\r\n    },\r\n    /**\r\n     * 获取len个bit位\r\n     * @param  number len bit长度\r\n     * @return  number 整数\r\n     */\r\n    _proto_.getBits = function(len) {\r\n        var sum = 0;\r\n        var byte = 0;\r\n        if (this._bytePos >= this._uint8Array.length)\r\n            return false;\r\n        for (var i = 0; i < len && this._bytePos < this._uint8Array.length; i++) {\r\n            byte = this._uint8Array[this._bytePos];\r\n            sum = (sum << 1) | ((byte >> (7 - this._bitPos)) & 1);\r\n            this._bitPos++;\r\n            if (this._bitPos % 8 == 0) {\r\n                this._bytePos++;\r\n                this._bitPos = 0;\r\n            }\r\n        }\r\n        return sum;\r\n    }\r\n/**\r\n * 获取1个bit位\r\n * @return  number 0|1\r\n */\r\n_proto_.getBits1 = function(len) {\r\n    if (this._bytePos >= this._uint8Array.length)\r\n        return false;\r\n    var bit = (this._uint8Array[this._bytePos] >> (7 - this._bitPos)) & 1;\r\n    this._bitPos++;\r\n    if (this._bitPos % 8 == 0) {\r\n        this._bytePos++;\r\n        this._bitPos = 0;\r\n    }\r\n    return bit;\r\n}\r\n/**\r\n * 获取1个字节\r\n * @return  number 0|1\r\n */\r\n_proto_.getByte = function() {\r\n    if (this._bytePos >= this._uint8Array.length)\r\n        return false;\r\n    var byte = this._uint8Array[this._bytePos];\r\n    this._bytePos++;\r\n    return byte;\r\n}\r\n/**\r\n * 获取len个bit位二进制字符串\r\n * @param  number len bit长度\r\n * @param  boolean zeroize 头部是否补0\r\n * @return  string 二进制字符串\r\n */\r\n_proto_.getBitsStr = function(len, zeroize) {\r\n    var str = this.getBits(len).toString(2);\r\n    if (str.legnth < len) {\r\n        var zeros = '';\r\n        for (var i = 0; i < len - str.length; i++) {\r\n            zeros += '0';\r\n        }\r\n        str = zeros + str;\r\n    }\r\n    return str;\r\n}\r\n/**\r\n * 返回字节位置\r\n * @retrun  number pos 位置\r\n */\r\n_proto_.getBytePos = function(pos) {\r\n    return this._bytePos;\r\n}\r\n/**\r\n * 返回bit位置\r\n * @retrun  number pos 位置\r\n */\r\n_proto_.getBitPos = function(pos) {\r\n    return this._bitPos;\r\n}\r\n/**\r\n * 设置字节位置\r\n * @param  number pos 位置\r\n */\r\n_proto_.setBytePos = function(pos) {\r\n    if (pos > this._uint8Array.length) {\r\n        pos = this._uint8Array.length;\r\n    }\r\n    this._bytePos = pos;\r\n}\r\n/**\r\n * 设置bit位置\r\n * @param  number pos 位置\r\n */\r\n_proto_.setBitPos = function(pos) {\r\n    this._bitPos = pos % 8;\r\n}\r\n/**\r\n * 设置一位bit\r\n */\r\n_proto_.setBit = function(bytePos, bitPos, bit) {\r\n    var byte = bit << bitPos & 0xff;\r\n    if (bytePos >= this._uint8Array.length) {\r\n        return;\r\n    }\r\n    this._uint8Array[bytePos] = this._uint8Array[bytePos] & byte;\r\n}\r\n/**\r\n * 设置一位bit\r\n */\r\n_proto_.setByte = function(bytePos, byte) {\r\n    if (bytePos >= this._uint8Array.length) {\r\n        return;\r\n    }\r\n    this._uint8Array[bytePos] = byte;\r\n}\r\n/**\r\n * 跳过len个bit\r\n */\r\n_proto_.skipBits = function(len) {\r\n    this._bytePos = this._bytePos + (((this._bitPos + len) / 8) >> 0);\r\n    this._bitPos = (this._bitPos + len) % 8;\r\n    if (this._bytePos > this._uint8Array.length) {\r\n        this._bytePos = this._uint8Array.length;\r\n    }\r\n}\r\n/**\r\n * 跳过len个byte\r\n */\r\n_proto_.skipBytes = function(len) {\r\n    this._bytePos = this._bytePos + len;\r\n    if (this._bytePos > this._uint8Array.length) {\r\n        this._bytePos = this._uint8Array.length;\r\n    }\r\n}\r\n/**\r\n * 回退len个bit\r\n */\r\n_proto_.rewindBits = function(len) {\r\n    this._bitPos = this._bitPos - len;\r\n    if (this._bitPos < 0) {\r\n        this._bitPos = 0;\r\n    }\r\n}\r\n/**\r\n * 回退len个byte\r\n */\r\n_proto_.rewindBytes = function(len) {\r\n    this._bytePos = this._bytePos - len;\r\n    if (this._bytePos < 0) {\r\n        this._bytePos = 0;\r\n    }\r\n}\r\n/**\r\n * 在尾部添加字节\r\n * @return  返回新的buffer\r\n */\r\n_proto_.append = function(arrayBuffer) {\r\n    var newBuffer = new ArrayBuffer(this._uint8Array.length + arrayBuffer.length);\r\n    this._uint8Array = new Uint8Array(newBuffer);\r\n    this._uint8Array.set(arrayBuffer, this._uint8Array.length - arrayBuffer.length);\r\n    return newBuffer;\r\n}\r\n/**\r\n * 在头部添加字节\r\n * @return  返回新的buffer\r\n */\r\n_proto_.unshift = function(arrayBuffer) {\r\n    var newBuffer = new ArrayBuffer(this._uint8Array.length + arrayBuffer.length);\r\n    this._uint8Array = new Uint8Array(newBuffer);\r\n    this._uint8Array.set(arrayBuffer, 0);\r\n    return newBuffer;\r\n}\r\n/**\r\n * 是否已到达最后一个bit\r\n * @return  boolean\r\n */\r\n_proto_.isEnd = function() {\r\n    return this._bytePos >= this._uint8Array.length;\r\n}\r\n/**\r\n * 返回流字节个数\r\n * @return  number\r\n */\r\n_proto_.getSize = function() {\r\n    return this._uint8Array.length;\r\n}\r\n/**\r\n * 重头开始\r\n */\r\n_proto_.reset = function() {\r\n    this._bitPos = 0;\r\n    this._bytePos = 0;\r\n}\r\n/**\r\n * 比特流数组截取\r\n * @param  {number} begin 开始索引\r\n * @param  {number} end   结束索引\r\n * @return {arrary}       比特流数组\r\n */\r\n_proto_.slice = function(begin, end) {\r\n    return this._uint8Array.slice(begin, end);\r\n}\r\n/**\r\n * 追加数据\r\n * @param  {object} byteArr 二进制数组\r\n */\r\n_proto_.append = function(byteArr) {\r\n    var tmp = new Uint8Array(this.getSize());\r\n    if (this._bytePos > 0) {\r\n        tmp.set(this._uint8Array.slice(this._bytePos), 0);\r\n        tmp.set(byteArr, this.end);\r\n    } else {\r\n        tmp.set(byteArr, 0);\r\n    }\r\n    this.end = this._bytePos + byteArr.length; //有效数据尾\r\n    this._uint8Array = tmp;\r\n    this._bytePos = 0;\r\n}\r\n\r\nexport default BitStream;\n\n\n// WEBPACK FOOTER //\n// ./src/common/bitstream.js","/**\r\n * 分段下载\r\n * @param  {int}  begin  字节开始位置\r\n * @param  {int}  end  字节结束位置(包括)\r\n * @param  {Functio}  callback  成功回调\r\n */\r\nfunction _loadRange(url, begin, end, opt) {\r\n    var request = new XMLHttpRequest();\r\n    var emptyCb = function() {};\r\n    var onsuccess, onerror, onabort, ontimeout;\r\n    onsuccess = onerror = onabort = ontimeout = emptyCb;\r\n    begin = begin || 0;\r\n    end = end || '';\r\n    if (typeof opt == 'object') {\r\n        opt.onsuccess && (onsuccess = opt.onsuccess);\r\n        opt.onerror && (onerror = opt.onerror);\r\n        opt.onabort && (onabort = opt.onabort);\r\n        opt.ontimeout && (ontimeout = opt.ontimeout);\r\n    }\r\n    request.open('GET', url, true);\r\n    request.responseType = 'arraybuffer';\r\n    request.onload = function() {\r\n        var arrayBuffer = request.response;\r\n        var contetnRange = request.getResponseHeader('Content-Range');\r\n\r\n        if (contetnRange && contetnRange.split('/')[0].substr(6) != begin + '-' + end) {\r\n            console.log(contetnRange.split('/')[0].substr(6), begin + '-' + end)\r\n            console.error('获取头部信息出错');\r\n            onerror('获取头部信息出错');\r\n        } else {\r\n            onsuccess(request);\r\n        }\r\n    }\r\n    request.onerror = onerror;\r\n    request.onabort = onabort;\r\n    request.ontimeout = ontimeout;\r\n\r\n    request.setRequestHeader(\"Range\", 'bytes=' + begin + '-' + end);\r\n    request.send();\r\n    return request;\r\n}\r\n\r\nexport default _loadRange;\n\n\n// WEBPACK FOOTER //\n// ./src/common/range.js","import StringStream from './stringstream';\r\nimport Mad from './global';\r\n\r\n// Well duh.\r\nvar CHAR_BIT = 8;\r\n\r\n/*\r\n * NAME:    bit.init()\r\n * DESCRIPTION: initialize bit pointer struct\r\n */\r\nvar Bit = function (stream, offset) {\r\n    if (typeof(stream) == 'string') {\r\n        this.stream = new StringStream(stream);\r\n    } else {\r\n        this.stream = stream;\r\n    }\r\n    \r\n    this.offset = offset;\r\n    \r\n    this.cache = 0;\r\n    this.left = CHAR_BIT;\r\n}\r\n\r\nBit.prototype.clone = function() {\r\n    var c = new Bit(this.stream, this.offset);\r\n    \r\n    c.cache = this.cache;\r\n    c.left = this.left;\r\n    \r\n    return c;\r\n}\r\n\r\n/*\r\n * NAME:    bit.length()\r\n * DESCRIPTION: return number of bits between start and end points\r\n */\r\nBit.prototype.length = function(end) {\r\n    return this.left + CHAR_BIT * (end.offset - (this.offset + 1)) + (CHAR_BIT - end.left);\r\n}\r\n\r\n/*\r\n * NAME:    bit.nextbyte()\r\n * DESCRIPTION: return pointer to next unprocessed byte\r\n */\r\nBit.prototype.nextbyte = function() {\r\n    return this.left == CHAR_BIT ? this.offset : this.offset + 1;\r\n}\r\n\r\n/*\r\n * NAME:    bit.skip()\r\n * DESCRIPTION: advance bit pointer\r\n */\r\nBit.prototype.skip = function(len) {\r\n    this.offset += (len / CHAR_BIT) >> 0; // javascript trick to get integer divison\r\n    this.left   -= len % CHAR_BIT;\r\n    \r\n    if (this.left > CHAR_BIT) {\r\n        this.offset++;\r\n        this.left += CHAR_BIT;\r\n    }\r\n    \r\n    if (this.left < CHAR_BIT) {\r\n        this.cache = this.stream.getU8(this.offset);\r\n    }\r\n}\r\n\r\n/*\r\n * NAME:    bit.read()\r\n * DESCRIPTION: read an arbitrary number of bits and return their UIMSBF value\r\n */\r\nBit.prototype.read = function(len) {\r\n    if(len > 16) {\r\n        return this.readBig(len);\r\n    }\r\n    \r\n    var value = 0;\r\n\r\n    if (this.left == CHAR_BIT) {\r\n        this.cache = this.stream.getU8(this.offset);\r\n    }\r\n\r\n    if (len < this.left) {\r\n        value = (this.cache & ((1 << this.left) - 1)) >> (this.left - len);\r\n        this.left -= len;\r\n        \r\n        return value;\r\n    }\r\n    \r\n    /* remaining bits in current byte */\r\n    value = this.cache & ((1 << this.left) - 1);\r\n    len  -= this.left;\r\n    \r\n    this.offset++;\r\n    this.left = CHAR_BIT;\r\n    \r\n    /* more bytes */\r\n    while (len >= CHAR_BIT) {\r\n        value = (value << CHAR_BIT) | this.stream.getU8(this.offset++);\r\n        len  -= CHAR_BIT;\r\n    }\r\n    \r\n    if (len > 0) {\r\n        this.cache = this.stream.getU8(this.offset);\r\n        \r\n        value = (value << len) | (this.cache >> (CHAR_BIT - len));\r\n        this.left -= len;\r\n    }\r\n    \r\n    return value;\r\n}\r\n\r\nBit.prototype.readBig = function(len) {\r\n    var value = 0;\r\n    \r\n    if (this.left == CHAR_BIT) {\r\n        this.cache = this.stream.getU8(this.offset);\r\n    }\r\n    \r\n    if (len < this.left) {\r\n        value = (this.cache & ((1 << this.left) - 1)) >> (this.left - len);\r\n        this.left -= len;\r\n        \r\n        return value;\r\n    }\r\n    \r\n    /* remaining bits in current byte */\r\n    value = this.cache & ((1 << this.left) - 1);\r\n    len  -= this.left;\r\n    \r\n    this.offset++;\r\n    this.left = CHAR_BIT;\r\n    \r\n    /* more bytes */\r\n    while (len >= CHAR_BIT) {\r\n        value = Mad.bitwiseOr(Mad.lshift(value, CHAR_BIT), this.stream.getU8(this.offset++));\r\n        len  -= CHAR_BIT;\r\n    }\r\n    \r\n    if (len > 0) {\r\n        this.cache = this.stream.getU8(this.offset);\r\n        \r\n        value = Mad.bitwiseOr(Mad.lshift(value, len), (this.cache >> (CHAR_BIT - len)));\r\n        this.left -= len;\r\n    }\r\n    \r\n    return value;\r\n}\r\n\r\nexport default Bit;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/bit.js","var ByteStream = function(url) { }\r\n\r\nByteStream.prototype.available = function(n) {\r\n    return this.absoluteAvailable(this.state['offset'] + n);\r\n}\r\n\r\nByteStream.prototype.getU8 = function(offset, bigEndian) {\r\n    var bytes = this.get(offset, 1);\r\n    \r\n    return bytes.charCodeAt(0);\r\n}\r\n\r\nByteStream.prototype.getU16 = function(offset, bigEndian) {\r\n    var bytes = this.get(offset, 2);\r\n    \r\n    if (!bigEndian) {\r\n        bytes = bytes.reverse();\r\n    }\r\n    \r\n    return (bytes.charCodeAt(0) << 8) | bytes.charCodeAt(1);\r\n}\r\n\r\nByteStream.prototype.getU24 = function(offset, bigEndian) {\r\n    var bytes = this.get(offset, 3);\r\n    \r\n    if (!bigEndian) {\r\n        bytes = bytes.reverse();\r\n    }\r\n    \r\n    return (bytes.charCodeAt(0) << 16) | (bytes.charCodeAt(1) << 8) | bytes.charCodeAt(2);\r\n}\r\n\r\nByteStream.prototype.getU32 = function(offset, bigEndian) {\r\n    var bytes = this.get(offset, 4);\r\n    \r\n    if (!bigEndian) {\r\n        bytes = bytes.reverse();\r\n    }\r\n    \r\n    return (bytes.charCodeAt(0) << 24) | (bytes.charCodeAt(1) << 16) | (bytes.charCodeAt(2) << 8) | bytes.charCodeAt(3);\r\n}\r\n\r\nByteStream.prototype.getI8 = function(offset, bigEndian) {\r\n    return this.getU8(offset, bigEndian) - 128;            // 2 ** 7\r\n}\r\n\r\nByteStream.prototype.getI16 = function(offset, bigEndian) {\r\n    return this.getU16(offset, bigEndian) - 65536;         // 2 ** 15\r\n}\r\n\r\nByteStream.prototype.getI32 = function(offset, bigEndian) {\r\n    return this.getU32(offset, bigEndian) - 2147483648;    // 2 ** 31\r\n}\r\n\r\nByteStream.prototype.getSyncInteger = function(offset) {\r\n    var bytes = this.get(offset, 4);\r\n    \r\n    return (bytes.charCodeAt(0) << 21) | (bytes.charCodeAt(1) << 14) | (bytes.charCodeAt(2) << 7) | bytes.charCodeAt(3);\r\n}\r\n\r\nByteStream.prototype.peekU8 = function(bigEndian) {\r\n    return this.getU8(this.state['offset'], bigEndian);\r\n}\r\n\r\nByteStream.prototype.peekU16 = function(bigEndian) {\r\n    return this.getU16(this.state['offset'], bigEndian);\r\n}\r\n\r\nByteStream.prototype.peekU24 = function(bigEndian) {\r\n    return this.getU24(this.state['offset'], bigEndian);\r\n}\r\n\r\nByteStream.prototype.peekU32 = function(bigEndian) {\r\n    return this.getU32(this.state['offset'], bigEndian);\r\n}\r\n\r\nByteStream.prototype.peekI8 = function(bigEndian) {\r\n    return this.getI8(this.state['offset'], bigEndian);\r\n}\r\n\r\nByteStream.prototype.peekI16 = function(bigEndian) {\r\n    return this.getI16(this.state['offset'], bigEndian);\r\n}\r\n\r\nByteStream.prototype.peekI32 = function(bigEndian) {\r\n    return this.getI32(this.state['offset'], bigEndian);\r\n}\r\n\r\nByteStream.prototype.peekSyncInteger = function() {\r\n    return this.getSyncInteger(this.state['offset']);\r\n}\r\n\r\nByteStream.prototype.readU8 = function(bigEndian) {\r\n    var result = this.peekU8(bigEndian);\r\n    \r\n    this.seek(1);\r\n    \r\n    return result;\r\n}\r\n\r\nByteStream.prototype.readU16 = function(bigEndian) {\r\n    var result = this.peekU16(bigEndian);\r\n    \r\n    this.seek(2);\r\n    \r\n    return result;\r\n}\r\n\r\nByteStream.prototype.readU24 = function(bigEndian) {\r\n    var result = this.peekU24(bigEndian);\r\n    \r\n    this.seek(3);\r\n    \r\n    return result;\r\n}\r\n\r\nByteStream.prototype.readU32 = function(bigEndian) {\r\n    var result = this.peekU32(bigEndian);\r\n    \r\n    this.seek(4);\r\n    \r\n    return result;\r\n}\r\n\r\nByteStream.prototype.readI8 = function(bigEndian) {\r\n    var result = this.peekI8(bigEndian);\r\n    \r\n    this.seek(1);\r\n    \r\n    return result;\r\n}\r\n\r\nByteStream.prototype.readI16 = function(bigEndian) {\r\n    var result = this.peekI16(bigEndian);\r\n    \r\n    this.seek(2);\r\n    \r\n    return result;\r\n}\r\n\r\nByteStream.prototype.readI32 = function(bigEndian) {\r\n    var result = this.peekI32(bigEndian);\r\n    \r\n    this.seek(4);\r\n    \r\n    return result;\r\n}\r\n\r\nByteStream.prototype.readSyncInteger = function() {\r\n    var result = this.getSyncInteger(this.state['offset']);\r\n    \r\n    this.seek(4);\r\n    \r\n    return result;\r\n}\r\n\r\nexport default ByteStream;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/bytestream.js","var Util = {};\r\n\r\n//ArrayBuffer转16进制字符串\r\nUtil.arrayBufferToHexChar = function(arrayBuffer) {\r\n    var bufferStr = '';\r\n    var uint8Array = new Uint8Array(arrayBuffer);\r\n    for (var i = 0; i < uint8Array.length; i++) {\r\n        if (uint8Array[i] <= 15) {\r\n            bufferStr += '0' + uint8Array[i].toString(16);\r\n        } else {\r\n            bufferStr += uint8Array[i].toString(16);\r\n        }\r\n        bufferStr += ',';\r\n    }\r\n    return bufferStr.slice(0, bufferStr.length - 1);\r\n}\r\n\r\n/**\r\n * 根据同步标识返回相应数据长度\r\n * @param  {ArrayBuffer} arrayBuffer 音频源数据\r\n * @param  {String}      frameSync   16进制同步字符串标识\r\n * @param  {Number}      offset      正向查找时头部需要跳过的字节数\r\n * @param  {Boolean}     reverse     查找方向\r\n * @param  {Number}      frameSize   逆向查找时需要返回多少帧数据长度\r\n * @return {Number}                  数据长度\r\n */\r\nUtil.getLengthByFrameSync = function(arrayBuffer, frameSync, offset, reverse, frameSize) {\r\n    var i = 0;\r\n    var count = 200;\r\n    var bufferStr = '';\r\n    var uint8Array = new Uint8Array(arrayBuffer);\r\n    offset = offset || 0;\r\n    frameSize = frameSize || 1;\r\n    if (!reverse) {\r\n        while (true) {\r\n            for (; i < count && i < uint8Array.length; i++) {\r\n                if (uint8Array[i] <= 15) {\r\n                    bufferStr += '0' + uint8Array[i].toString(16);\r\n                } else {\r\n                    bufferStr += uint8Array[i].toString(16);\r\n                }\r\n                bufferStr += ',';\r\n            }\r\n            bufferStr = bufferStr.toUpperCase();\r\n            if (bufferStr.indexOf(frameSync, offset * 3) != -1) {\r\n                return bufferStr.indexOf(frameSync, offset * 3) / 3;\r\n            }\r\n            if (i >= uint8Array.length) {\r\n                return 0;\r\n            }\r\n            count += 200;\r\n        }\r\n    } else {\r\n        var flagReg = new RegExp(frameSync, 'g');\r\n        var match = null;\r\n        i = uint8Array.length - 1;\r\n        count = uint8Array.length - 200;\r\n        while (true) {\r\n            for (; i > count && i > 0; i--) {\r\n                if (uint8Array[i] <= 15) {\r\n                    bufferStr = '0' + uint8Array[i].toString(16) + ',' + bufferStr;\r\n                } else {\r\n                    bufferStr = uint8Array[i].toString(16) + ',' + bufferStr;\r\n                }\r\n            }\r\n            bufferStr = bufferStr.toUpperCase();\r\n            match = bufferStr.match(flagReg);\r\n            if (match && match.length >= frameSize) { //找出多少帧\r\n                return bufferStr.length / 3 - bufferStr.indexOf(frameSync) / 3;\r\n            }\r\n            if (i == 0) {\r\n                return 0;\r\n            }\r\n            count -= 200;\r\n        }\r\n    }\r\n}\r\n\r\nUtil.formatCountDown = function(seconds, noZero) {\r\n    var date = new Date();\r\n    date.setDate(0);\r\n    date.setHours(0);\r\n    date.setMinutes(0);\r\n    date.setSeconds(0);\r\n    date.setSeconds(seconds);\r\n    var data = {\r\n        date: Math.floor(seconds / (60 * 60 * 24)),\r\n        hours: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds()\r\n    }\r\n    if (!noZero) {\r\n        data.date = data.date >= 10 ? data.date : '0' + data.date;\r\n        data.hours = data.hours >= 10 ? data.hours : '0' + data.hours;\r\n        data.minutes = data.minutes >= 10 ? data.minutes : '0' + data.minutes;\r\n        data.seconds = data.seconds >= 10 ? data.seconds : '0' + data.seconds;\r\n    }\r\n    return data;\r\n}\r\n\r\nUtil.ifDebug = function(){\r\n    return location.href.indexOf('debug') > -1;\r\n}\r\n\r\nUtil.log = function() {\r\n    if (location.search.indexOf('audio-debug') > -1) {\r\n        console.log.apply(window, arguments);\r\n    }\r\n}\r\n\r\nexport default Util;\n\n\n// WEBPACK FOOTER //\n// ./src/common/util.js","/**\r\n * MP3音频信息解析模块\r\n * http://wiki.hydrogenaud.io/index.php?title=APEv2_specification\r\n * http://www.docin.com/p-1261649617.html\r\n * https://www.codeproject.com/Articles/8295/MPEG-Audio-Frame-Header\r\n *\r\n * audioInfo需要包括的字段:{\r\n *      fileSize: 音频文件大小(byte),\r\n *      frameSync: 同步头（16进制字符串）,\r\n *      duration: 总时长（秒）,\r\n *      sampleRate: 采样率,\r\n *      audioDataOffset: audioData开始偏移量（相对于0字节位置）,\r\n *      totalSize: audioData总大小（仅当音频码率模式为VBR时返回）,\r\n *      toc: 音频数据索引表（仅当音频码率模式为VBR时返回）   \r\n * }\r\n */\r\n\r\nimport requestRange from '../common/range';\r\nimport bitStream from '../common/bitstream';\r\nimport Util from '../common/util';\r\nimport Mp3Header from './header';\r\nimport Mp3Id3Tag from './id3tag';\r\n\r\n//MP3播放信息解析对象\r\nvar MP3Info = {\r\n    init: function(url, opt) {\r\n        var self = this;\r\n        var emptyFun = function() {};\r\n        this.url = url;\r\n        this.decrypt = this.onloadedmetadata = emptyFun;\r\n        this.indexSize = 100; //分区数，默认100\r\n        this.audioInfo = {}; //存储mp3相关的信息\r\n        if (typeof opt == 'object') {\r\n            opt.decrypt && (this.decrypt = opt.decrypt);\r\n            opt.onloadedmetadata && (this.onloadedmetadata = opt.onloadedmetadata);\r\n            opt.indexSize && (this.indexSize = opt.indexSize);\r\n        }\r\n        return new Promise(function(resolve, reject) {\r\n            self._loadHeaderInfo(resolve, reject);\r\n        }).then(function() {\r\n            return self._loadFirstFrame();\r\n        }).then(function(arrayBuffer) {\r\n            var header = new Mp3Header(new bitStream(arrayBuffer));\r\n            var result = header.parseHeader(true);\r\n            if (result) {\r\n                self.audioInfo.toc = header.toc;\r\n                self.audioInfo.totalSize = header.totalBytes;\r\n                self.audioInfo.sampleRate = header.sampleRate;\r\n                self.audioInfo.frameSync = header.frameSync;\r\n                self.audioInfo.duration = header.totalDuration;\r\n                self.audioInfo.bitRate = header.bitRate;\r\n                if (!self.audioInfo.toc) { //cbr模式\r\n                    return self._getFooterLength();\r\n                } else {\r\n                    self.onloadedmetadata(self.audioInfo.duration);\r\n                    return self.audioInfo;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n    },\r\n    //ajax获取音频头部标签头(32B)\r\n    _loadHeaderInfo: function(resolve, reject) {\r\n        var self = this;\r\n        requestRange(self.url, 0, 32 * 8 + 32 * 8 - 1, {\r\n            onsuccess: function(request) { //加载前32个字节（判断是否存在ID3V2|Ape头）\r\n                var arrayBuffer = request.response;\r\n                var contetnRange = request.getResponseHeader('Content-Range');\r\n                var length = 0;\r\n                var id3tag = null;\r\n                self.decrypt(arrayBuffer); //解密\r\n                id3tag = new Mp3Id3Tag(arrayBuffer);\r\n                self.audioInfo.audioDataOffset = id3tag.parseId3V2() + id3tag.parseApe();\r\n                self.audioInfo.fileSize = parseInt(contetnRange.substr(contetnRange.indexOf('/') + 1));\r\n                resolve();\r\n            }\r\n        });\r\n    },\r\n    //加载第一个数据帧(用来判断音频码率模式)\r\n    _loadFirstFrame: function(resolve, reject) {\r\n        var self = this;\r\n        return new Promise(function(resolve, reject) {\r\n            requestRange(self.url, self.audioInfo.audioDataOffset, self.audioInfo.audioDataOffset + 156 * 8 - 1, {\r\n                onsuccess: function(request) {\r\n                    var arrayBuffer = request.response;\r\n                    self.decrypt(arrayBuffer); //解密\r\n                    resolve(arrayBuffer);\r\n                }\r\n            })\r\n        })\r\n    },\r\n    //获取尾部额外信息长度（可能存在id3v1或者ape信息）\r\n    _getFooterLength: function() {\r\n        var self = this;\r\n        return new Promise(function(resolve, reject) {\r\n            requestRange(self.url, self.audioInfo.fileSize - (128 + 32), self.audioInfo.fileSize - 1, {\r\n                onsuccess: function(request) {\r\n                    var arrayBuffer = request.response;\r\n                    var id3tag = null;\r\n                    var length = 0;\r\n                    self.decrypt(arrayBuffer); //解密\r\n                    id3tag = new Mp3Id3Tag(arrayBuffer);\r\n                    self.audioInfo.footerLength = id3tag.parseId3V1() + id3tag.parseApe();\r\n                    self.audioInfo.totalSize = self.audioInfo.fileSize - self.audioInfo.audioDataOffset - self.audioInfo.footerLength;\r\n                    self.audioInfo.duration = self.audioInfo.totalSize * 8 / self.audioInfo.bitRate;\r\n                    self.onloadedmetadata(self.audioInfo);\r\n                    resolve(self.audioInfo);\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default MP3Info;\n\n\n// WEBPACK FOOTER //\n// ./src/mp3info/mp3info.js","import AudioContextPlayer from './src/audiocontext/player';\r\nimport MediaSourcetPlayer from './src/mediasource/player';\r\n\r\nfunction Player(url, opt){\r\n\tif(opt.usemediasource){\r\n\t\treturn new MediaSourcetPlayer(url, opt);\r\n\t}else{\r\n\t\treturn new AudioContextPlayer(url, opt);\r\n\t}\r\n}\r\n\r\nwindow.Player = Player;\r\n\r\nexport default Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 7\n// module chunks = 0","/**\r\n * 音频播放器模块\r\n * AudioContext wiki: https://developer.mozilla.org/zh-CN/docs/Web/API/AudioContext\r\n */\r\n\r\n\r\nimport requestRange from '../common/range';\r\nimport Util from '../common/util';\r\nimport BitStream from '../common/bitstream';\r\nimport Decoder from './decoder/decoder';\r\nimport MP3Info from '../mp3info/mp3info';\r\n\r\nvar indexSize = 100; //区块个数（根据时间平均分为100份,默认100）\r\nvar url = ''; //音频链接\r\nvar emptyUrl = ''; //空音频链接（用于触发IOS上音频播放）\r\nvar emptyCb = function() {};\r\nvar onbeforedecode = emptyCb;\r\nvar ontimeupdate = emptyCb;\r\nvar onplay = emptyCb;\r\nvar onpause = emptyCb;\r\nvar onwaiting = emptyCb;\r\nvar onplaying = emptyCb;\r\nvar onended = emptyCb;\r\nvar onloadedmetadata = emptyCb;\r\nvar onerror = emptyCb;\r\nvar maxDecodeSize = 0.1 * 1024 * 1024; // 最大解码字节长度(默认8M)\r\nvar isIos = navigator.userAgent.indexOf('iPhone') > -1;\r\nvar AudioInfo = null;\r\nvar audio = null;\r\nif (isIos) {\r\n    audio = new Audio();\r\n    audio.src = opt.emptyUrl;\r\n}\r\n\r\nfunction Player() {\r\n    this.timeoutIds = {\r\n        decodeTimeoutId: null, //解码计时器\r\n        updateIntervalId: null, //时间更新计时器\r\n        playTimoutId: null, //播放计时器\r\n        reloadTimeoutId: null //加载失败后重加载计时器\r\n    }\r\n}\r\n\r\nPlayer.prototype._init = function(audioInfo) {\r\n    var self = this;\r\n    this.audioInfo = audioInfo; //音频信息\r\n    this.bufferLength = 0; //音频全部解码后总大小\r\n    this.audioContext = new(window.AudioContext || window.webkitAudioContext)(); //音频上下文对象\r\n    this.audioContext.onstatechange = function() {\r\n        if (self.audioContext) {\r\n            if (self.audioContext.state != 'running') {\r\n                self.isPlaying = false;\r\n            }\r\n            Util.log(self.audioContext.state);\r\n        }\r\n\r\n    }\r\n    this.decoder = new Decoder();\r\n    this.fileBlocks = new Array(100); //音频数据分区\r\n    this.cacheFrameSize = 0; //每次加载的分区数\r\n    this.indexSize = 100; //索引个数\r\n    this.seeking = true; //是否正在索引\r\n    this.totalBuffer = null; //音频资源节点队列\r\n    this.nowSouceNode = null; //正在播放的资源节点\r\n    this.loadingPromise = null; //数据加载异步对象集合\r\n    if (audioInfo.fileSize / indexSize > 1024 * 1024) { //1/100总数据大小是否大于1M\r\n        this.cacheFrameSize = 1;\r\n    } else {\r\n        this.cacheFrameSize = Math.ceil(1024 * 1024 / (audioInfo.fileSize / indexSize));\r\n    }\r\n    if (this.audioInfo) {\r\n        this._decodeAudioData(0, this.cacheFrameSize, true, this.totalBuffer);\r\n    }\r\n}\r\n\r\n//解码\r\nPlayer.prototype._decodeAudioData = function(index, minSize, negative, beginDecodeTime) {\r\n    var self = this;\r\n    var audioInfo = this.audioInfo;\r\n    if (index >= indexSize) {\r\n        return;\r\n    }\r\n    return this._loadFrame(index, minSize, negative).then(function(result) {\r\n        if (beginDecodeTime != self.beginDecodeTime || !result) { //see时强制停止\r\n            return false;\r\n        }\r\n        Util.log('解码:' + result.beginIndex + ',' + result.endIndex);\r\n        if (Util.ifDebug()) {\r\n            var decodeBeginTime = new Date().getTime();\r\n        }\r\n        var redoCount = 0;\r\n        var arrayBuffer = result.arrayBuffer;\r\n        var beginIndex = result.beginIndex;\r\n        var endIndex = result.endIndex;\r\n        if (negative) {\r\n            self.decoder.kill();\r\n        }\r\n        self.decoder.decode({\r\n            onsuccess: _onsuccess,\r\n            onerror: _onerror,\r\n            arrayBuffer: arrayBuffer,\r\n            beginIndex: beginIndex,\r\n            endIndex: endIndex\r\n        });\r\n        /**\r\n         * 解码成功回调\r\n         * @param  {AudioBuffer} buffer PCM数据\r\n         */\r\n        function _onsuccess(buffer) {\r\n            //防止seek时，之前未完成的异步解码对新队列的影响\r\n            if (beginDecodeTime != self.beginDecodeTime) {\r\n                return;\r\n            }\r\n            if (!self.bufferLength) {\r\n                self.bufferLength = Math.ceil(audioInfo.duration * buffer.sampleRate);\r\n            }\r\n            if (!self.numberOfChannels) {\r\n                self.numberOfChannels = buffer.numberOfChannels;\r\n            }\r\n            if (!self.sampleRate) {\r\n                self.sampleRate = buffer.sampleRate;\r\n            }\r\n            if (!self.totalBuffer) {\r\n                self.totalBuffer = self.audioContext.createBuffer(self.numberOfChannels, self.bufferLength, self.sampleRate);\r\n            }\r\n            Util.log('解码完成:' + result.beginIndex + ',' + result.endIndex, 'duration:', buffer.duration);\r\n            Util.log('解码花费:', new Date().getTime() - decodeBeginTime, 'ms');\r\n            if (self.seeking) {\r\n                self.preBuffer = null;\r\n                self.seeking = false;\r\n                self.totalBuffer.dataOffset = self.totalBuffer.dataBegin = self.totalBuffer.dataEnd = (self.totalBuffer.length * result.beginIndex / indexSize) >> 0;\r\n                self._copyPCMData(buffer);\r\n                if (self.hasPlayed && !self.pause) {\r\n                    self._play(self.totalBuffer.dataBegin / self.totalBuffer.length * audioInfo.duration);\r\n                }\r\n            } else {\r\n                self._copyPCMData(buffer);\r\n                if (self.waiting) {\r\n                    self.waiting = false;\r\n                    if (!self.pause) { //从等待状态唤醒\r\n                        self.audioContext.resume();\r\n                        onplaying();\r\n                    }\r\n                }\r\n            }\r\n            self.totalBuffer.endIndex = result.endIndex;\r\n            if (result.endIndex + 1 < indexSize) {\r\n                var nextDecodeTime = buffer.duration * 1000 / 2;\r\n                if (nextDecodeTime > 10000) {\r\n                    nextDecodeTime = 10000;\r\n                }\r\n                clearTimeout(self.timeoutIds.decodeTimeoutId);\r\n                self.timeoutIds.decodeTimeoutId = setTimeout(function() {\r\n                    if (self.loadingPromise) {\r\n                        self.loadingPromise.stopNextLoad = true;\r\n                        self.loadingPromise.then(function() {\r\n                            _nextDecode(result, self.totalBuffer, minSize, audioInfo);\r\n                        })\r\n                    } else {\r\n                        _nextDecode(result, self.totalBuffer, minSize, audioInfo);\r\n                    }\r\n                }, nextDecodeTime);\r\n            }\r\n        }\r\n        //解码失败回调\r\n        function _onerror() {\r\n            if (beginDecodeTime != self.beginDecodeTime) {\r\n                return;\r\n            }\r\n            //最多重试3次\r\n            if (redoCount > 5) {\r\n                return;\r\n            }\r\n            redoCount++;\r\n            Util.log('decode fail...redo', redoCount);\r\n            arrayBuffer = arrayBuffer.slice(100);\r\n            arrayBuffer = self._fixFileBlock(arrayBuffer);\r\n            self.decoder.decode({\r\n                onsuccess: _onsuccess,\r\n                onerror: _onerror,\r\n                arrayBuffer: arrayBuffer,\r\n                beginIndex: beginIndex,\r\n                endIndex: endIndex\r\n            });\r\n        }\r\n\r\n        function _nextDecode(result, totalBuffer, minSize, audioInfo) {\r\n            if (!result.exceed) {\r\n                self._decodeAudioData(result.beginIndex, result.endIndex - result.beginIndex + 1 + self.cacheFrameSize, null, beginDecodeTime);\r\n            } else {\r\n                totalBuffer.dataOffset = totalBuffer.dataEnd;\r\n                self._decodeAudioData(result.endIndex + 1, self.cacheFrameSize, null, beginDecodeTime);\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n}\r\n\r\n//复制PCM流\r\nPlayer.prototype._copyPCMData = function(_buffer) {\r\n    var offset = this.totalBuffer.dataOffset;\r\n    for (var i = 0; i < _buffer.numberOfChannels; i++) {\r\n        var cData = _buffer.getChannelData(i);\r\n        if (cData.length + offset > this.totalBuffer.length) {\r\n            cData = cData.slice(0, cData.length + offset - this.totalBuffer.length);\r\n        }\r\n        this.totalBuffer.getChannelData(i).set(cData, offset);\r\n    }\r\n    this.totalBuffer.dataEnd = offset + _buffer.length;\r\n\r\n    //展示前后衔接处波形图，帮助分析\r\n    // if (this.preBuffer) {\r\n    //     var d1 = this.preBuffer.getChannelData(0).slice(-1152 * 2);\r\n    //     var d2 = _buffer.getChannelData(0).slice(0, 1152 * 2);\r\n    //     var ctx = document.querySelector('#canvas').getContext(\"2d\");\r\n    //     ctx.clearRect(0, 0, ctx.canvas.width, 200);\r\n    //     ctx.beginPath();\r\n    //     ctx.moveTo(0, 100);\r\n    //     for (var i = 0; i < d1.length; i++) {\r\n    //         var h = d1[i] * 100 + 100;\r\n    //         ctx.lineTo(i, h);\r\n    //     }\r\n    //     ctx.strokeStyle = 'blue';\r\n    //     ctx.stroke();\r\n    //     ctx.closePath();\r\n\r\n    //     ctx.beginPath();\r\n    //     ctx.moveTo(d1.length - 1, h);\r\n    //     for (var i = 0; i < d2.length; i++) {\r\n    //         var h = d2[i] * 100 + 100;\r\n    //         ctx.lineTo(i + d1.length, h);\r\n    //     }\r\n    //     ctx.strokeStyle = 'red';\r\n    //     ctx.stroke();\r\n    //     ctx.closePath();\r\n    // }\r\n    // this.preBuffer = _buffer;\r\n}\r\n\r\n//播放\r\nPlayer.prototype._play = function(startTime) {\r\n    var self = this;\r\n    this.offsetTime = startTime;\r\n    this.currentTime = Math.round(this.offsetTime);\r\n    if (this.audioContext.state == 'suspended') {\r\n        this.audioContext.resume();\r\n    }\r\n    if (this.nowSouceNode) {\r\n        this.nowSouceNode.disconnect();\r\n    }\r\n    var sourceNode = this.audioContext.createBufferSource();\r\n    sourceNode.buffer = this.totalBuffer;\r\n    sourceNode.connect(this.audioContext.destination);\r\n    sourceNode.onended = function() {\r\n        self._end();\r\n    }\r\n    if (sourceNode.start) {\r\n        sourceNode.start(0, startTime);\r\n    } else {\r\n        sourceNode.noteOn(0, startTime);\r\n    }\r\n    this.hasPlayed = true;\r\n    this.nowSouceNode = sourceNode;\r\n    this._startUpdateTimeoutId();\r\n    this.isPlaying = true;\r\n    Util.log('play');\r\n}\r\n\r\n//开始更新计时器\r\nPlayer.prototype._startUpdateTimeoutId = function() {\r\n    var self = this;\r\n    clearInterval(this.timeoutIds.updateIntervalId);\r\n    this.beginTime = this.audioContext.currentTime;\r\n    this.timeoutIds.updateIntervalId = setInterval(function() {\r\n        var time = self.audioContext.currentTime - self.beginTime;\r\n        var currentTime = time + self.offsetTime;\r\n        if (self.audioInfo.toc && currentTime > self.audioInfo.duration) {\r\n            self._end();\r\n        }\r\n        if (Math.round(currentTime) > self.currentTime) {\r\n            self.currentTime = Math.round(currentTime);\r\n            ontimeupdate(self.currentTime); //时间更新计时器回调\r\n        }\r\n        //等待数据解码\r\n        if (!self.waiting && self.totalBuffer.endIndex < indexSize - 1 && (currentTime + 2) * self.sampleRate > self.totalBuffer.dataEnd) {\r\n            self.waiting = true;\r\n            self.audioContext.suspend();\r\n            onwaiting();\r\n        }\r\n    }, 1000);\r\n}\r\n\r\nPlayer.prototype._end = function() {\r\n    this.nowSouceNode.disconnect();\r\n    this.finished = true; //播放结束标识\r\n    this._clearTimeout();\r\n    this.audioContext.suspend();\r\n    onended();\r\n}\r\n\r\n//获取数据帧\r\nPlayer.prototype._loadFrame = function(index, minSize, negative) {\r\n    var self = this;\r\n    var begin = 0;\r\n    var end = 0;\r\n    var cached = true;\r\n    var beginIndex = index; //避免网络加载重复数据\r\n    var endIndex = 0;\r\n    var originMinSize = minSize;\r\n    var audioInfo = this.audioInfo\r\n    index = index >= indexSize ? indexSize - 1 : index;\r\n    if (index + minSize > indexSize) {\r\n        minSize = indexSize - index;\r\n    }\r\n    //防止头部加载重复数据\r\n    for (var i = index; i < index + minSize; i++) {\r\n        if (!this.fileBlocks[i]) {\r\n            cached = false;\r\n            beginIndex = i;\r\n            minSize = minSize - (beginIndex - index);\r\n            break;\r\n        }\r\n    }\r\n    //对应索引区数据已经缓存\r\n    if (cached) {\r\n        var arr = null;\r\n        var result = null;\r\n        var length = 0;\r\n        result = this._joinNextCachedFileBlock(index, minSize, negative);\r\n        if (result.endIndex < indexSize - 1) {\r\n            this._loadFrame(result.endIndex + 1, this.cacheFrameSize);\r\n        }\r\n        return Promise.resolve(result);\r\n    }\r\n    //防止尾部加载重复数据\r\n    var i = beginIndex + minSize - 1;\r\n    i = i >= indexSize ? indexSize - 1 : i;\r\n    for (; i > beginIndex; i--) {\r\n        if (this.fileBlocks[i]) {\r\n            minSize--;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    if (beginIndex + minSize > indexSize) {\r\n        minSize = indexSize - beginIndex;\r\n    }\r\n    begin = this._getRangeBeginByIndex(beginIndex);\r\n    end = this._getRangeBeginByIndex(beginIndex + minSize) - 1;\r\n    Util.log('loading:', beginIndex, beginIndex + minSize - 1)\r\n    var promise = new Promise(function(resolve, reject) {\r\n        setTimeout(function() { //交出控制权给Player对象\r\n            promise.resolve = resolve;\r\n            promise.reject = reject;\r\n        }, 0);\r\n\r\n        self.request = requestRange(url, begin, end, {\r\n            onsuccess: function(request) {\r\n                var arrayBuffer = request.response;\r\n                var begin = 0;\r\n                var end = 0;\r\n                //数据解密\r\n                onbeforedecode(arrayBuffer);\r\n                //缓存数据块\r\n                for (var i = beginIndex; i < beginIndex + minSize && i < indexSize; i++) {\r\n                    if (audioInfo.toc) { //VBR编码模式\r\n                        if (i + 1 >= indexSize || i + 1 >= beginIndex + minSize) {\r\n                            end = arrayBuffer.byteLength;\r\n                        } else {\r\n                            end = (begin + (self._getRangeBeginByIndex(i + 1) - self._getRangeBeginByIndex(i))) >> 0;\r\n                        }\r\n                        self.fileBlocks[i] = arrayBuffer.slice(begin, end);\r\n                        begin = end;\r\n                    } else { //CBR编码模式\r\n                        if (i + 1 >= indexSize || i + 1 >= beginIndex + minSize) {\r\n                            end = arrayBuffer.byteLength;\r\n                        } else {\r\n                            end = begin + (audioInfo.fileSize - audioInfo.audioDataOffset) / indexSize;\r\n                        }\r\n                        self.fileBlocks[i] = arrayBuffer.slice(begin, end);\r\n                        begin = end;\r\n                    }\r\n                }\r\n                Util.log('load完成:', beginIndex, beginIndex + minSize - 1);\r\n                if (self.loadingPromise && !self.loadingPromise.stopNextLoad) { //seek后应该从新的位置加载后面的数据\r\n                    setTimeout(function() {\r\n                        self._loadFrame(index + originMinSize, originMinSize);\r\n                    }, 0)\r\n                }\r\n                self.loadingPromise = null;\r\n                resolve(self._joinNextCachedFileBlock(index, originMinSize, negative));\r\n            },\r\n            ontimeout: function() {\r\n                clearTimeout(self.timeoutIds.reloadTimeoutId);\r\n                self.timeoutIds.reloadTimeoutId = setTimeout(function() { //1秒后重新加载\r\n                    self.loadingPromise = self._loadFrame(index, minSize, negative);\r\n                    self.loadingPromise.then(function() {\r\n                        resolve(self._joinNextCachedFileBlock(index, originMinSize, negative));\r\n                    });\r\n                }, 1000)\r\n            },\r\n            onerror: function(e) {\r\n                clearTimeout(self.timeoutIds.reloadTimeoutId);\r\n                self.timeoutIds.reloadTimeoutId = setTimeout(function() { //1秒后重新加载\r\n                    self.loadingPromise = self._loadFrame(index, minSize, negative);\r\n                    self.loadingPromise.then(function() {\r\n                        resolve(self._joinNextCachedFileBlock(index, originMinSize, negative));\r\n                    });\r\n                }, 1000)\r\n            },\r\n            onabort: function(e) {\r\n                reject('abort');\r\n            }\r\n        })\r\n    }).catch(function(e) {\r\n        Util.log(e);\r\n        self.loadingPromise = null;\r\n        return false;\r\n    });\r\n    this.loadingPromise = promise;\r\n    return promise;\r\n}\r\n\r\n//合并index索引之后所有连续的已经缓存过的分区\r\nPlayer.prototype._joinNextCachedFileBlock = function(index, minSize, negative) {\r\n    var length = 0;\r\n    var arr = null;\r\n    var result = null;\r\n    var endIndex = index;\r\n    var indexLength = this.fileBlocks.length;\r\n    var exceed = false; //是否超过了最大解码长度\r\n    if (Util.ifDebug()) {\r\n        var joinBegin = new Date().getTime();\r\n        Util.log('join', index);\r\n    }\r\n\r\n    //开始播放或者seek时只返回minSize个数据块\r\n    if (negative) {\r\n        indexLength = index + minSize;\r\n        indexLength = indexLength > indexSize ? indexSize : indexLength;\r\n    }\r\n    for (var i = index; i < indexLength && this.fileBlocks[i]; i++) {\r\n        endIndex = i;\r\n        length += this.fileBlocks[i].byteLength;\r\n        if (length >= maxDecodeSize) {\r\n            exceed = true;\r\n            break;\r\n        }\r\n    }\r\n    result = new ArrayBuffer(length);\r\n    arr = new Uint8Array(result);\r\n    length = 0;\r\n    for (i = index; i <= endIndex; i++) {\r\n        arr.set(new Uint8Array(this.fileBlocks[i]), length);\r\n        length += this.fileBlocks[i].byteLength;\r\n    }\r\n    //删除头部和尾部损坏数据\r\n    if (negative) {\r\n        result = this._fixFileBlock(result);\r\n    }\r\n    Util.log('join花费:', new Date().getTime() - joinBegin, 'ms');\r\n    return {\r\n        exceed: exceed,\r\n        arrayBuffer: result,\r\n        beginIndex: index,\r\n        endIndex: endIndex\r\n    }\r\n}\r\n\r\n//根据索引号，找到实际的音频数据字节位置\r\nPlayer.prototype._getRangeBeginByIndex = function(index) {\r\n    var begin = 0;\r\n    var audioInfo = this.audioInfo;\r\n    if (audioInfo.toc) {\r\n        if (index >= indexSize) {\r\n            begin = audioInfo.fileSize;\r\n        } else {\r\n            begin = ((audioInfo.toc[index] / 256 * audioInfo.totalSize) >> 0) + audioInfo.audioDataOffset;\r\n        }\r\n    } else {\r\n        begin = ((audioInfo.fileSize - audioInfo.audioDataOffset) * index / indexSize + audioInfo.audioDataOffset) >> 0;\r\n    }\r\n    if (begin > audioInfo.fileSize) {\r\n        begin = audioInfo.fileSize;\r\n    }\r\n    return begin;\r\n}\r\n\r\n/**\r\n * 修复数据块头尾损坏数据（分割后，头部数据可能不是数据帧的帧头开始，需要修复）\r\n * @param  {ArrayBuffer} arrayBuffer  源数据\r\n * @return {ArrayBuffer}              修复后的数据\r\n */\r\nPlayer.prototype._fixFileBlock = function(arrayBuffer) {\r\n    var frameSync = this.audioInfo.frameSync;\r\n    //删除帧头部多余数据\r\n    var begeinExtraLength = Util.getLengthByFrameSync(arrayBuffer, frameSync, 0);\r\n    arrayBuffer = arrayBuffer.slice(begeinExtraLength);\r\n    begeinExtraLength = Util.getLengthByFrameSync(arrayBuffer, frameSync, 4);\r\n    var mainDataOffset = _getMainDataOffset(arrayBuffer)\r\n    //下一帧主数据偏移量大于上一帧总长度，说明上一帧为无效帧\r\n    if (mainDataOffset >= begeinExtraLength) {\r\n        return this._fixFileBlock(arrayBuffer.slice(begeinExtraLength));\r\n    }\r\n    var u8a = new Uint8Array(arrayBuffer);\r\n    //第一帧数据清零\r\n    for (var i = 4; i < begeinExtraLength - mainDataOffset; i++) {\r\n        u8a[i] = 0;\r\n    }\r\n    return arrayBuffer;\r\n\r\n    //获取mainData偏移量\r\n    function _getMainDataOffset(arrayBuffer) {\r\n        var mainDataOffset = 0;\r\n        //下一帧开始偏移量\r\n        var begeinExtraLength = Util.getLengthByFrameSync(arrayBuffer, frameSync, 4);\r\n        var bitstream = new BitStream(arrayBuffer.slice(begeinExtraLength));\r\n        var mainDataOffset = 0;\r\n        bitstream.skipBits(32);\r\n        //主数据负偏移量\r\n        mainDataOffset = bitstream.getBits(9);\r\n        return mainDataOffset;\r\n    }\r\n}\r\n\r\n//跳转某个索引\r\nPlayer.prototype._seek = function(index) {\r\n    var self = this;\r\n    var audioInfo = this.audioInfo;\r\n    if (index >= indexSize) {\r\n        index = indexSize - 1;\r\n    }\r\n    if (this.waiting) {\r\n        this.waiting = false;\r\n        onplaying();\r\n    }\r\n    if (this.totalBuffer) {\r\n        var begin = this.totalBuffer.length * index / indexSize;\r\n        var startTime = index / indexSize * audioInfo.duration;\r\n        if (begin > this.totalBuffer.dataBegin && begin + 5 * this.sampleRate < this.totalBuffer.dataEnd) {\r\n            if (this.pause) {\r\n                this.resumeTime = startTime;\r\n            } else {\r\n                clearInterval(this.timeoutIds.updateIntervalId);\r\n                clearTimeout(this.timeoutIds.playTimoutId);\r\n                this._play(startTime);\r\n            }\r\n            return;\r\n        } else if (this.pause) {\r\n            this.resumeTime = -1;\r\n            this.hasPlayed = false;\r\n        }\r\n        this.totalBuffer = this.audioContext.createBuffer(this.numberOfChannels, this.bufferLength, this.sampleRate);\r\n    }\r\n    this._clearTimeout();\r\n    this.seeking = true;\r\n    this.finished = false;\r\n    this.beginDecodeTime = new Date().getTime();\r\n    if (this.nowSouceNode) {\r\n        this.nowSouceNode.disconnect();\r\n    }\r\n    if (this.loadingPromise) { //是否有数据正在加载\r\n        this.loadingPromise.then(function() {\r\n            self._decodeAudioData(index, self.cacheFrameSize, true, self.beginDecodeTime);\r\n        });\r\n        this.request.abort(); //强制中断下载\r\n    } else {\r\n        this._decodeAudioData(index, this.cacheFrameSize, true, this.beginDecodeTime);\r\n    }\r\n}\r\n\r\n//清除所有计时器\r\nPlayer.prototype._clearTimeout = function() {\r\n    clearTimeout(this.timeoutIds.decodeTimeoutId);\r\n    clearInterval(this.timeoutIds.updateIntervalId);\r\n    clearTimeout(this.timeoutIds.playTimoutId);\r\n    clearTimeout(this.timeoutIds.reloadTimeoutId);\r\n}\r\n\r\nfunction Mp3Player(_url, opt) {\r\n    url = _url;\r\n    this.player = new Player();\r\n    this._init(opt);\r\n}\r\n\r\nMp3Player.prototype._init = function(opt) {\r\n    var self = this;\r\n    onbeforedecode = opt.onbeforedecode || emptyCb;\r\n    ontimeupdate = opt.ontimeupdate || emptyCb;\r\n    onplay = opt.onplay || emptyCb;\r\n    onpause = opt.onpause || emptyCb;\r\n    onwaiting = opt.onwaiting || emptyCb;\r\n    onplaying = opt.onplaying || emptyCb;\r\n    onended = opt.onended || emptyCb;\r\n    onloadedmetadata = opt.onloadedmetadata || emptyCb;\r\n    onerror = opt.onerror || emptyCb;\r\n    MP3Info.init(url, {\r\n        onbeforedecode: onbeforedecode,\r\n        onloadedmetadata: onloadedmetadata\r\n    }).then(function(audioInfo) {\r\n        self.player._init(audioInfo);\r\n        if (!audioInfo) {\r\n            onerror();\r\n            self.player.error = 'parse audioInfo failed';\r\n        }\r\n    }).catch(function(e) {\r\n        self.player.error = 'load audioInfo failed';\r\n        console.log(e);\r\n        onerror();\r\n    });\r\n}\r\n\r\nMp3Player.prototype.play = function() {\r\n    if (this.player.error) {\r\n        onerror();\r\n        return;\r\n    } else if (!this.clickPlayTime) {\r\n        this.player.waiting = false;\r\n        this.clickPlayTime = new Date().getTime();\r\n    } else if (this.player.audioInfo === false || new Date().getTime() - this.player.clickPlayTime > 5000 && !this.player.audioInfo) {\r\n        this.clickPlayTime = 0;\r\n        return;\r\n    }\r\n    var self = this;\r\n    var nowSouceNode = this.player.nowSouceNode;\r\n    var audioContext = this.player.audioContext;\r\n    var audioInfo = this.player.audioInfo;\r\n    clearTimeout(this.player.timeoutIds.playTimoutId);\r\n    //ios需要手动触发音频设备\r\n    if (isIos && !this.hasClick) {\r\n        audio.play();\r\n        this.hasClick = true;\r\n    }\r\n    if (!this.player.hasPlayed) {\r\n        if (!this.player.totalBuffer || typeof this.player.totalBuffer.dataBegin == undefined) {\r\n            if (!this.player.waiting) {\r\n                this.player.waiting = true;\r\n                onwaiting();\r\n            }\r\n            this.player.timeoutIds.playTimoutId = setTimeout(function() {\r\n                self.play();\r\n            }, 500);\r\n            return;\r\n        }\r\n        if (this.player.waiting) {\r\n            this.player.waiting = false;\r\n            onplaying();\r\n        }\r\n        this.player._play(this.player.totalBuffer.dataBegin / this.player.totalBuffer.length * audioInfo.duration);\r\n        this.player.pause = false;\r\n        onplay();\r\n    } else if ((this.player.pause == true || this.player.finished) && !this.player.waiting) {\r\n        if (this.player.finished) {\r\n            this.player._seek(0);\r\n        } else {\r\n            this.player.pause = false;\r\n            if (this.player.resumeTime != -1) {\r\n                this.player._play(this.player.resumeTime);\r\n            } else {\r\n                audioContext.resume();\r\n            }\r\n        }\r\n        onplay();\r\n    }\r\n}\r\n\r\nMp3Player.prototype.pause = function() {\r\n    onpause();\r\n    this.player.resumeTime = -1;\r\n    this.player.pause = true;\r\n    this.player.waiting = false;\r\n    if (this.player.audioContext) {\r\n        this.player.audioContext.suspend();\r\n    }\r\n    clearTimeout(this.player.timeoutIds.playTimoutId);\r\n}\r\n\r\nMp3Player.prototype.seek = function(percent) {\r\n    percent = percent >> 0;\r\n    if (!this.player.audioInfo) {\r\n        return false;\r\n    }\r\n    this.player._seek(percent);\r\n    return true;\r\n}\r\n\r\nMp3Player.prototype.destory = function() {\r\n    this.player._clearTimeout();\r\n    if (this.player.audioContext) {\r\n        this.player.audioContext.close();\r\n        this.player.audioContext = null;\r\n    }\r\n}\r\n\r\nMp3Player.prototype.isPlaying = function() {\r\n    return this.player.isPlaying;\r\n}\r\n\r\nexport default Mp3Player;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/player.js","import Frame from './frame';\r\nimport Synth from './synth';\r\nimport Stream from './stream';\r\nimport BufferStream from './bufferStream';\r\nimport SubStream from './substream';\r\nimport Mad from './global';\r\n\r\nvar Decoder = function() {\r\n    this.decodeQue = [];\r\n};\r\n/**\r\n * 重置解码器\r\n * @param           {Object}  opt   参数\r\n * opt.onsuccess    {Function}      成功回调\r\n * opt.ArrayBuffer  {ArrayBuffer}   音频数据\r\n * opt.beginIndex   {Number}        开始片段索引\r\n * opt.endIndex     {Number}        结束片段索引\r\n * @return          {Boolean}       是否重置成功\r\n */\r\nDecoder.prototype.reset = function(opt) {\r\n    this.createMpegStream(opt);\r\n    this.onsuccess = opt.onsuccess;\r\n    this.onerror = opt.onerror;\r\n    if (!this.channelCount) {\r\n        this.frame = Frame.decode(this.frame, this.mpeg);\r\n        if (this.frame == null) {\r\n            this.kill();\r\n            console.log('error_reset');\r\n            if (this.mpeg.error == Mad.Error.BUFLEN) {\r\n                this.mpeg = null;\r\n                this.stream = null;\r\n                console.log(\"End of file!\");\r\n            } else {\r\n                this.stream = null;\r\n                this.mpeg = null;\r\n                this.onerror && this.onerror();\r\n            }\r\n            return false;\r\n        }\r\n        this.synth = new Synth();\r\n        this.channelCount = this.frame.header.nchannels();\r\n        this.sampleRate = this.frame.header.samplerate;\r\n        this.synth.frame(this.frame);\r\n    }\r\n    return true;\r\n};\r\n/**\r\n * 解码音频数据\r\n * @param           {Object}  opt   参数\r\n * opt.onsuccess    {Function}      成功回调\r\n * opt.ArrayBuffer  {ArrayBuffer}   音频数据\r\n * opt.beginIndex   {Number}        开始片段索引\r\n * opt.endIndex     {Number}        结束片段索引\r\n * @return          {Array}         PCM数据\r\n */\r\nDecoder.prototype.decode = function(opt) {\r\n    var buffer = null,\r\n        startTime = Date.now(),\r\n        self = this;\r\n    if (this.decoding) {\r\n        this.decodeQue.push(opt);\r\n        return;\r\n    }\r\n    if (this.reset(opt)) {\r\n        buffer = new Mp3AudioBuffer(this.channelCount, this.sampleRate);\r\n        buffer.length = 0;\r\n        _decode();\r\n    }\r\n\r\n\r\n    function _decode() {\r\n        self.decoding = true;\r\n        //一次最多解码200帧，防止浏览器阻塞\r\n        for (var i = 0; i < 20; i++) {\r\n            if (self.mpeg.bufend - self.mpeg.next_frame <= (self.mpeg.next_frame - self.mpeg.this_frame) * 4) {\r\n                buffer.duration = buffer.length / buffer.sampleRate;\r\n                // console.log('success_decode', buffer.length);\r\n                self.onsuccess && self.onsuccess(buffer);\r\n                _compelete();\r\n                buffer = null;\r\n                return;\r\n            } else {\r\n                self.frame = Frame.decode(self.frame, self.mpeg);\r\n                if (self.frame) {\r\n                    self.synth.frame(self.frame);\r\n                    for (var ch = 0; ch < self.channelCount; ++ch) {\r\n                        buffer.samples[ch] = buffer.samples[ch].concat(self.synth.pcm.samples[ch]);\r\n                    }\r\n                    buffer.length += self.synth.pcm.samples[0].length;\r\n                } else {\r\n                    buffer = null;\r\n                    self.kill();\r\n                    console.log('error_decode');\r\n                    self.onerror && self.onerror();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        //解码剩余的数据\r\n        self.decodeTimmer = setTimeout(function() {\r\n            _decode();\r\n        }, 0);\r\n    }\r\n    //当前音频片段解码完成\r\n    function _compelete() {\r\n        clearTimeout(self.decodeTimmer);\r\n        self.decoding = false;\r\n        // console.log('cost', Date.now() - startTime, 'ms', 'duration', buffer.duration);\r\n        if (self.decodeQue.length) {\r\n            self.decode(self.decodeQue.shift());\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * 解码音频数据\r\n * @param           {Object}  opt   参数\r\n * opt.ArrayBuffer  {ArrayBuffer}   音频数据\r\n * opt.beginIndex   {Number}        开始片段索引\r\n * opt.endIndex     {Number}        结束片段索引\r\n */\r\nDecoder.prototype.createMpegStream = function(opt) {\r\n    var beginIndex = opt.beginIndex;\r\n    var endIndex = opt.endIndex;\r\n    var arrayBuffer = opt.arrayBuffer;\r\n    //接着上个片段继续解码\r\n    if (this.mpeg && this.endIndex + 1 == beginIndex) {\r\n        var oldBuffer = this.stream.state['arrayBuffer'];\r\n        var newBuffer = new ArrayBuffer(oldBuffer.byteLength + arrayBuffer.byteLength);\r\n        var uint8Array = new Uint8Array(newBuffer);\r\n        uint8Array.set(new Uint8Array(oldBuffer), 0);\r\n        uint8Array.set(new Uint8Array(arrayBuffer), oldBuffer.byteLength);\r\n        var stream = new BufferStream(newBuffer);\r\n        this.stream = stream;\r\n        stream = new SubStream(stream, 0, newBuffer.byteLength);\r\n        this.mpeg.bufend = newBuffer.byteLength;\r\n        this.mpeg.stream = stream;\r\n        this.mpeg.anc_ptr.stream = stream;\r\n        this.mpeg.ptr.stream = stream;\r\n    } else {\r\n        this.stream = new BufferStream(arrayBuffer);\r\n        this.mpeg = new Stream(new SubStream(this.stream, 0, this.stream.state['amountRead']));\r\n        this.frame = new Frame();\r\n        this.channelCount = 0;\r\n    }\r\n    this.endIndex = endIndex;\r\n}\r\n\r\n/**\r\n * 停止当前音频片段的解码\r\n */\r\nDecoder.prototype.kill = function() {\r\n    clearTimeout(this.decodeTimmer);\r\n    this.decoding = false;\r\n    this.decodeQue = [];\r\n}\r\n\r\n/**\r\n * 模拟AudioBuffer对象\r\n * @param {Number} channelCount 声道数量\r\n * @param {Number} sampleRate   采样率\r\n */\r\nfunction Mp3AudioBuffer(channelCount, sampleRate) {\r\n    this.samples = [];\r\n    this.numberOfChannels = channelCount;\r\n    this.sampleRate = sampleRate;\r\n    for (var i = 0; i < channelCount; i++) {\r\n        this.samples[i] = [];\r\n    }\r\n}\r\n\r\n/**\r\n * 获取单个声道PCM数据\r\n * @param  {Number}      channel  声道\r\n * @return {Float32Array}         PCM数据\r\n */\r\nMp3AudioBuffer.prototype.getChannelData = function(channel) {\r\n    return this.samples[channel];\r\n}\r\n\r\nexport default Decoder;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/decoder.js","import Mad from './global';\r\nimport Bit from './bit';\r\nimport layer_III from './layer3';\r\n\r\nvar bitrate_table /* [5][15] */ = [\r\n  /* MPEG-1 */\r\n  [ 0,  32000,  64000,  96000, 128000, 160000, 192000, 224000,  /* Layer I   */\r\n       256000, 288000, 320000, 352000, 384000, 416000, 448000 ],\r\n  [ 0,  32000,  48000,  56000,  64000,  80000,  96000, 112000,  /* Layer II  */\r\n       128000, 160000, 192000, 224000, 256000, 320000, 384000 ],\r\n  [ 0,  32000,  40000,  48000,  56000,  64000,  80000,  96000,  /* Layer III */\r\n       112000, 128000, 160000, 192000, 224000, 256000, 320000 ],\r\n\r\n  /* MPEG-2 LSF */\r\n  [ 0,  32000,  48000,  56000,  64000,  80000,  96000, 112000,  /* Layer I   */\r\n       128000, 144000, 160000, 176000, 192000, 224000, 256000 ],\r\n  [ 0,   8000,  16000,  24000,  32000,  40000,  48000,  56000,  /* Layers    */\r\n        64000,  80000,  96000, 112000, 128000, 144000, 160000 ] /* II & III  */\r\n];\r\n\r\nvar samplerate_table /* [3] */ = [ 44100, 48000, 32000 ];\r\n\r\nvar decoder_table = [\r\n    function() { console.log(\"Layer I decoding is not implemented!\"); },\r\n    function() { console.log(\"Layer II decoding is not implemented!\"); },\r\n    layer_III\r\n];\r\n\r\n\r\n\r\nvar Header = function () {\r\n    this.layer          = 0;            /* audio layer (1, 2, or 3) */\r\n    this.mode           = 0;            /* channel mode (see above) */\r\n    this.mode_extension = 0;            /* additional mode info */\r\n    this.emphasis       = 0;            /* de-emphasis to use (see above) */    \r\n\r\n    this.bitrate        = 0;            /* stream bitrate (bps) */\r\n    this.samplerate     = 0;            /* sampling frequency (Hz) */\r\n\r\n    this.crc_check      = 0;            /* frame CRC accumulator */\r\n    this.crc_target     = 0;            /* final target CRC checksum */\r\n\r\n    this.flags          = 0;            /* flags (see below) */\r\n    this.private_bits   = 0;            /* private bits (see below) */\r\n\r\n    //this.duration       = mad_timer_zero;         /* audio playing time of frame */\r\n};\r\n\r\nHeader.prototype.nchannels = function () {\r\n    return this.mode == 0 ? 1 : 2;\r\n}\r\n\r\nHeader.prototype.nbsamples = function() {\r\n    return (this.layer == Mad.Layer.I ? 12 : \r\n        ((this.layer == Mad.Layer.III && (this.flags & Mad.Flag.LSF_EXT)) ? 18 : 36));\r\n}\r\n\r\n/* libmad's decode_header */\r\nHeader.actually_decode = function(stream) {\r\n    var header = new Header();\r\n    \r\n    header.flags        = 0;\r\n    header.private_bits = 0;\r\n\r\n    /* header() */\r\n\r\n    /* syncword */\r\n    stream.ptr.skip(11);\r\n    \r\n    /* MPEG 2.5 indicator (really part of syncword) */\r\n    if (stream.ptr.read(1) == 0) {\r\n        header.flags |= Mad.Flag.MPEG_2_5_EXT;\r\n    }\r\n\r\n    /* ID */\r\n    if (stream.ptr.read(1) == 0) {\r\n        header.flags |= Mad.Flag.LSF_EXT;\r\n    } else if (header.flags & Mad.Flag.MPEG_2_5_EXT) {\r\n        stream.error = Mad.Error.LOSTSYNC;\r\n        return null;\r\n    }\r\n\r\n    /* layer */\r\n    header.layer = 4 - stream.ptr.read(2);\r\n\r\n    if (header.layer == 4) {\r\n        stream.error = Mad.Error.BADLAYER;\r\n        return header;\r\n    }\r\n\r\n    /* protection_bit */\r\n    if (stream.ptr.read(1) == 0) {\r\n        header.flags    |= Mad.Flag.PROTECTION;\r\n        // TODO: crc\r\n        //header.crc_check = mad_bit_crc(stream.ptr, 16, 0xffff);\r\n        stream.ptr.skip(16);\r\n    }\r\n\r\n    /* bitrate_index */\r\n    var index = stream.ptr.read(4);\r\n    if (index == 15) {\r\n        stream.error = Mad.Error.BADBITRATE;\r\n        return header;\r\n    }\r\n\r\n    if (header.flags & Mad.Flag.LSF_EXT) {\r\n        header.bitrate = bitrate_table[3 + (header.layer >> 1)][index];\r\n    } else {\r\n        header.bitrate = bitrate_table[header.layer - 1][index];\r\n    }\r\n\r\n    /* sampling_frequency */\r\n    index = stream.ptr.read(2);\r\n\r\n    if (index == 3) {\r\n        stream.error = Mad.Error.BADSAMPLERATE;\r\n        return header;\r\n    }\r\n\r\n    header.samplerate = samplerate_table[index];\r\n\r\n    if (header.flags & Mad.Flag.LSF_EXT) {\r\n        header.samplerate /= 2;\r\n\r\n        if (header.flags & Mad.Flag.MPEG_2_5_EXT)\r\n            header.samplerate /= 2;\r\n    }\r\n\r\n    /* padding_bit */\r\n    if (stream.ptr.read(1))\r\n        header.flags |= Mad.Flag.PADDING;\r\n\r\n    /* private_bit */\r\n    if (stream.ptr.read(1))\r\n        header.private_bits |= Mad.Private.HEADER;\r\n\r\n    /* mode */\r\n    header.mode = 3 - stream.ptr.read(2);\r\n\r\n    /* mode_extension */\r\n    header.mode_extension = stream.ptr.read(2);\r\n\r\n    /* copyright */\r\n    if (stream.ptr.read(1))\r\n        header.flags |= Mad.Flag.COPYRIGHT;\r\n\r\n    /* original/copy */\r\n    if (stream.ptr.read(1))\r\n        header.flags |= Mad.Flag.ORIGINAL;\r\n\r\n    /* emphasis */\r\n    header.emphasis = stream.ptr.read(2);\r\n    \r\n    /* error_check() */\r\n\r\n    /* crc_check */\r\n    if (header.flags & Mad.Flag.PROTECTION)\r\n        header.crc_target = stream.ptr.read(16);\r\n    \r\n    return header;\r\n}\r\n\r\n/* libmad's mad_header_decode */\r\nHeader.decode = function(stream) {\r\n    var header = null;\r\n    \r\n    // those are actually pointers. javascript powa.\r\n    var ptr = stream.next_frame;\r\n    var end = stream.bufend;\r\n    var pad_slot = 0;\r\n    var N = 0;\r\n    \r\n    /* stream skip */\r\n    if (stream.skiplen) {\r\n        if (!stream.sync)\r\n            ptr = stream.this_frame;\r\n\r\n        if (end - ptr < stream.skiplen) {\r\n            stream.skiplen   -= end - ptr;\r\n            stream.next_frame = end;\r\n\r\n            stream.error = Mad.Error.BUFLEN;\r\n            return null;\r\n        }\r\n\r\n        ptr += stream.skiplen;\r\n        stream.skiplen = 0;\r\n\r\n        stream.sync = 1;\r\n    }\r\n\r\n    // emulating goto in JS, yay! this was a 'sync:' label\r\n    var syncing = true;\r\n\r\n    while(syncing) {\r\n        syncing = false;\r\n \r\n        /* synchronize */\r\n        try {\r\n            if (stream.sync) {\r\n                if (end - ptr < Mad.BUFFER_GUARD) {\r\n                    stream.next_frame = ptr;\r\n\r\n                    stream.error = Mad.Error.BUFLEN;\r\n                    return null;\r\n                } else if (!(stream.getU8(ptr) == 0xff && (stream.getU8(ptr + 1) & 0xe0) == 0xe0)) {\r\n                    /* mark point where frame sync word was expected */\r\n                    stream.this_frame = ptr;\r\n                    stream.next_frame = ptr + 1;\r\n\r\n                    stream.error = Mad.Error.LOSTSYNC;\r\n                    return null;\r\n                }\r\n            } else {\r\n                stream.ptr = new Bit(stream.stream, ptr);\r\n\r\n                if (stream.doSync() == -1) {\r\n                    if (end - stream.next_frame >= Mad.BUFFER_GUARD)\r\n                        stream.next_frame = end - Mad.BUFFER_GUARD;\r\n                    stream.error = Mad.Error.BUFLEN;\r\n                    return null;\r\n                }\r\n\r\n                ptr = stream.ptr.nextbyte();\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Synchronization error: \" + e);\r\n            \r\n            stream.error = Mad.Error.BUFLEN;\r\n            \r\n            return null;\r\n        }\r\n\r\n        /* begin processing */\r\n        stream.this_frame = ptr;\r\n        stream.next_frame = ptr + 1;  /* possibly bogus sync word */\r\n\r\n        stream.ptr = new Bit(stream.stream, stream.this_frame);\r\n        \r\n        header = Header.actually_decode(stream);\r\n        if(header == null) return null; // well Duh^2\r\n\r\n        // console.log(\"============= Decoding layer \" + header.layer + \" audio mode \" +\r\n        //     header.mode + \" with \" + header.bitrate +\r\n        //     \" bps and a samplerate of \" + header.samplerate);\r\n\r\n        /* calculate frame duration */\r\n        //mad_timer_set(&header.duration, 0, 32 * MAD_NSBSAMPLES(header), header.samplerate);\r\n\r\n        /* calculate free bit rate */\r\n        if (header.bitrate == 0) {\r\n            console.log(\"Uh oh, a free bitrate stream. We're fucked.\");\r\n            stream.error = Mad.Error.BADDATAPTR; // best guess\r\n            return null;\r\n            \r\n    //        if ((stream.freerate == 0 || !stream.sync ||\r\n    //                        (header.layer == Mad.Layer.III && stream.freerate > 640000)) &&\r\n    //                free_bitrate(stream, header) == -1)\r\n    //            return null;\r\n    //\r\n    //        header.bitrate = stream.freerate;\r\n    //        header.flags  |= Mad.Flag.FREEFORMAT;\r\n        }\r\n\r\n        /* calculate beginning of next frame */\r\n        pad_slot = (header.flags & Mad.Flag.PADDING) ? 1 : 0;\r\n\r\n        if (header.layer == Mad.Layer.I) {\r\n            N = (((12 * header.bitrate / header.samplerate) << 0) + pad_slot) * 4;\r\n        } else {\r\n            var slots_per_frame = (header.layer == Mad.Layer.III &&\r\n                   (header.flags & Mad.Flag.LSF_EXT)) ? 72 : 144;\r\n            //console.log(\"slots_per_frame = \" + slots_per_frame + \", bitrate = \" + header.bitrate + \", samplerate = \" + header.samplerate);\r\n\r\n            N = ((slots_per_frame * header.bitrate / header.samplerate) << 0) + pad_slot;\r\n        }\r\n            \r\n\r\n        /* verify there is enough data left in buffer to decode this frame */\r\n        if (N + Mad.BUFFER_GUARD > end - stream.this_frame) {\r\n            stream.next_frame = stream.this_frame;\r\n\r\n            stream.error = Mad.Error.BUFLEN;\r\n            return null;\r\n        }\r\n\r\n        stream.next_frame = stream.this_frame + N;\r\n\r\n        // console.log(\"N = \" + N + \", pad_slot = \" + pad_slot + \", next_frame = \" + stream.next_frame);\r\n\r\n        if (!stream.sync) {\r\n            /* check that a valid frame header follows this frame */\r\n            ptr = stream.next_frame;\r\n            if (!(stream.getU8(ptr) == 0xff && (stream.getU8(ptr + 1) & 0xe0) == 0xe0)) {\r\n                ptr = stream.next_frame = stream.this_frame + 1;\r\n          \r\n                // emulating 'goto sync'\r\n                syncing = true;\r\n                continue;\r\n            }\r\n            stream.sync = 1;\r\n        }\r\n    } // end of goto emulation (label 'sync')\r\n    \r\n    header.flags |= Mad.Flag.INCOMPLETE;\r\n    return header;\r\n}\r\n\r\nvar Frame = function () {\r\n    this.header = new Header();     /* MPEG audio header */\r\n    \r\n    this.options = 0;                   /* decoding options (from stream) */\r\n\r\n    // sbsample[2][36][32]\r\n    this.sbsample = [];   /* synthesis subband filter samples */\r\n    for(var ch = 0; ch < 2; ch++) {\r\n        this.sbsample[ch] = [];\r\n        for(var grp = 0; grp < 36; grp++) {\r\n            // this.sbsample[ch][grp] = new Float64Array(new ArrayBuffer(8 * 32));\r\n            this.sbsample[ch][grp] = [];\r\n            for(var i = 0; i < 32; i++) {\r\n                this.sbsample[ch][grp][i] = 0;\r\n            }\r\n        }\r\n    }\r\n    \r\n    // overlap[2][32][18]\r\n    this.overlap = []; /* Layer III block overlap data */\r\n    for(var ch = 0; ch < 2; ch++) {\r\n        this.overlap[ch] = [];\r\n        for(var sb = 0; sb < 32; sb++) {\r\n            // this.overlap[ch][sb] = new Float64Array(new ArrayBuffer(8 * 18));\r\n            this.overlap[ch][sb] = [];\r\n            for(var i = 0; i < 18; i++) {\r\n                this.overlap[ch][sb][i] = 0;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nFrame.decode = function(frame, stream) {\r\n    frame.options = stream.options;\r\n    \r\n    /* header() */\r\n    /* error_check() */\r\n\r\n    if (!(frame.header.flags & Mad.Flag.INCOMPLETE)) {\r\n        frame.header = Header.decode(stream);\r\n        if(frame.header == null) {\r\n            // something went wrong\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /* audio_data() */\r\n\r\n    frame.header.flags &= ~Mad.Flag.INCOMPLETE;\r\n\r\n    // TODO: actually decode the data :)\r\n    if (decoder_table[frame.header.layer - 1](stream, frame) == -1) {\r\n    \r\n        if (!Mad.recoverable(stream.error))\r\n            stream.next_frame = stream.this_frame;\r\n        return null;\r\n    }\r\n    \r\n    return frame;\r\n};\r\n\r\nexport default Frame;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/frame.js","import ByteStream from './bytestream';\r\n\r\nvar StringStream = function(string) {\r\n    this.state = { offset: 0, buffer: string, amountRead: string.length, length: string.length };\r\n}\r\n\r\nStringStream.prototype = new ByteStream();\r\n\r\nStringStream.prototype.absoluteAvailable = function(n, updated) {\r\n    return n < this.state['amountRead'];\r\n}\r\n\r\nStringStream.prototype.seek = function(n) {\r\n    this.state['offset'] += n;\r\n}\r\n\r\nStringStream.prototype.read = function(n) {\r\n    var result = this.peek(n);\r\n    \r\n    this.seek(n);\r\n    \r\n    return result;\r\n}\r\n\r\nStringStream.prototype.peek = function(n) {\r\n    if (this.available(n)) {\r\n        var offset = this.state['offset'];\r\n        \r\n        var result = this.get(offset, n);\r\n        \r\n        return result;\r\n    } else {\r\n        throw 'TODO: THROW PEEK ERROR!';\r\n    }\r\n}\r\n\r\nStringStream.prototype.get = function(offset, length) {\r\n    if (this.absoluteAvailable(offset + length)) {\r\n        return this.state['buffer'].slice(offset, offset + length);\r\n    } else {\r\n        throw 'TODO: THROW GET ERROR!';\r\n    }\r\n}\r\n\r\nexport default StringStream;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/stringstream.js","import {huff_quad_table,huff_pair_table} from './huffman';\r\nimport imdct_s from './imdct_s';\r\nimport Mad from './global';\r\nimport Bit from './bit';\r\n/*\r\n * MPEG-1 scalefactor band widths\r\n * derived from Table B.8 of ISO/IEC 11172-3\r\n */\r\nvar sfb_48000_long = [\r\n    4,  4,  4,  4,  4,  4,  6,  6,  6,   8,  10,\r\n    12, 16, 18, 22, 28, 34, 40, 46, 54,  54, 192\r\n];\r\n\r\nvar sfb_44100_long = [\r\n    4,  4,  4,  4,  4,  4,  6,  6,  8,   8,  10,\r\n    12, 16, 20, 24, 28, 34, 42, 50, 54,  76, 158\r\n];\r\n\r\nvar sfb_32000_long = [\r\n    4,  4,  4,  4,  4,  4,  6,  6,  8,  10,  12,\r\n    16, 20, 24, 30, 38, 46, 56, 68, 84, 102,  26\r\n];\r\n\r\nvar sfb_48000_short = [\r\n    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  6,\r\n    6,  6,  6,  6,  6, 10, 10, 10, 12, 12, 12, 14, 14,\r\n    14, 16, 16, 16, 20, 20, 20, 26, 26, 26, 66, 66, 66\r\n];\r\n\r\nvar sfb_44100_short = [\r\n    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  6,\r\n    6,  6,  8,  8,  8, 10, 10, 10, 12, 12, 12, 14, 14,\r\n    14, 18, 18, 18, 22, 22, 22, 30, 30, 30, 56, 56, 56\r\n];\r\n\r\nvar sfb_32000_short = [\r\n    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  6,\r\n    6,  6,  8,  8,  8, 12, 12, 12, 16, 16, 16, 20, 20,\r\n    20, 26, 26, 26, 34, 34, 34, 42, 42, 42, 12, 12, 12\r\n];\r\n\r\nvar sfb_48000_mixed = [\r\n    /* long */   4,  4,  4,  4,  4,  4,  6,  6,\r\n    /* short */  4,  4,  4,  6,  6,  6,  6,  6,  6, 10,\r\n    10, 10, 12, 12, 12, 14, 14, 14, 16, 16,\r\n    16, 20, 20, 20, 26, 26, 26, 66, 66, 66\r\n];\r\n\r\nvar sfb_44100_mixed = [\r\n    /* long */   4,  4,  4,  4,  4,  4,  6,  6,\r\n    /* short */  4,  4,  4,  6,  6,  6,  8,  8,  8, 10,\r\n    10, 10, 12, 12, 12, 14, 14, 14, 18, 18,\r\n    18, 22, 22, 22, 30, 30, 30, 56, 56, 56\r\n];\r\n\r\nvar sfb_32000_mixed = [\r\n    /* long */   4,  4,  4,  4,  4,  4,  6,  6,\r\n    /* short */  4,  4,  4,  6,  6,  6,  8,  8,  8, 12,\r\n    12, 12, 16, 16, 16, 20, 20, 20, 26, 26,\r\n    26, 34, 34, 34, 42, 42, 42, 12, 12, 12\r\n];\r\n\r\nvar sfbwidth_table = [\r\n    { l: sfb_48000_long, s: sfb_48000_short, m: sfb_48000_mixed },\r\n    { l: sfb_44100_long, s: sfb_44100_short, m: sfb_44100_mixed },\r\n    { l: sfb_32000_long, s: sfb_32000_short, m: sfb_32000_mixed } /*, // fuck MPEG 2.5\r\n                                                                    { l: sfb_24000_long, s: sfb_24000_short, m: sfb_24000_mixed },\r\n                                                                    { l: sfb_22050_long, s: sfb_22050_short, m: sfb_22050_mixed },\r\n                                                                    { l: sfb_16000_long, s: sfb_16000_short, m: sfb_16000_mixed },\r\n                                                                    { l: sfb_12000_long, s: sfb_12000_short, m: sfb_12000_mixed },\r\n                                                                    { l: sfb_11025_long, s: sfb_11025_short, m: sfb_11025_mixed },\r\n                                                                    { l:  sfb_8000_long, s:  sfb_8000_short, m:  sfb_8000_mixed }*/\r\n];\r\n\r\nvar pretab /* [22] */ = [\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0\r\n];\r\n\r\n/*\r\n * fractional powers of two\r\n * used for requantization and joint stereo decoding\r\n *\r\n * root_table[3 + x] = 2^(x/4)\r\n */\r\nvar root_table /* 7 */ = [\r\n    /* 2^(-3/4) */ 0.59460355750136,\r\n    /* 2^(-2/4) */ 0.70710678118655,\r\n    /* 2^(-1/4) */ 0.84089641525371,\r\n    /* 2^( 0/4) */ 1.00000000000000,\r\n    /* 2^(+1/4) */ 1.18920711500272,\r\n    /* 2^(+2/4) */ 1.41421356237310,\r\n    /* 2^(+3/4) */ 1.68179283050743\r\n];\r\n\r\nvar cs = [\r\n        +0.857492926 , +0.881741997,\r\n        +0.949628649 , +0.983314592,\r\n        +0.995517816 , +0.999160558,\r\n        +0.999899195 , +0.999993155\r\n];\r\n\r\nvar ca = [\r\n        -0.514495755, -0.471731969,\r\n        -0.313377454, -0.181913200,\r\n        -0.094574193, -0.040965583,\r\n        -0.014198569, -0.003699975\r\n];\r\n\r\n/*\r\n * windowing coefficients for long blocks\r\n * derived from section 2.4.3.4.10.3 of ISO/IEC 11172-3\r\n *\r\n * window_l[i] = sin((PI / 36) * (i + 1/2))\r\n */\r\nvar window_l /* [36] */ = [\r\n    0.043619387, 0.130526192,\r\n    0.216439614, 0.300705800,\r\n    0.382683432, 0.461748613,\r\n    0.537299608, 0.608761429,\r\n    0.675590208, 0.737277337,\r\n    0.793353340, 0.843391446,\r\n\r\n    0.887010833, 0.923879533,\r\n    0.953716951, 0.976296007,\r\n    0.991444861, 0.999048222,\r\n    0.999048222, 0.991444861,\r\n    0.976296007, 0.953716951,\r\n    0.923879533, 0.887010833,\r\n\r\n    0.843391446, 0.793353340,\r\n    0.737277337, 0.675590208,\r\n    0.608761429, 0.537299608,\r\n    0.461748613, 0.382683432,\r\n    0.300705800, 0.216439614,\r\n    0.130526192, 0.043619387\r\n];\r\n\r\n/*\r\n * windowing coefficients for short blocks\r\n * derived from section 2.4.3.4.10.3 of ISO/IEC 11172-3\r\n *\r\n * window_s[i] = sin((PI / 12) * (i + 1/2))\r\n */\r\nvar window_s /* [12] */ = [\r\n    0.130526192, 0.382683432,\r\n    0.608761429, 0.793353340,\r\n    0.923879533, 0.991444861,\r\n    0.991444861, 0.923879533,\r\n    0.793353340, 0.608761429,\r\n    0.382683432, 0.130526192\r\n];\r\n\r\n/*\r\n * coefficients for intensity stereo processing\r\n * derived from section 2.4.3.4.9.3 of ISO/IEC 11172-3\r\n *\r\n * is_ratio[i] = tan(i * (PI / 12))\r\n * is_table[i] = is_ratio[i] / (1 + is_ratio[i])\r\n */\r\nvar is_table /* [7] */ = [\r\n    0.000000000,\r\n    0.211324865,\r\n    0.366025404,\r\n    0.500000000,\r\n    0.633974596,\r\n    0.788675135,\r\n    1.000000000\r\n];\r\n\r\n/*\r\n * coefficients for LSF intensity stereo processing\r\n * derived from section 2.4.3.2 of ISO/IEC 13818-3\r\n *\r\n * is_lsf_table[0][i] = (1 / sqrt(sqrt(2)))^(i + 1)\r\n * is_lsf_table[1][i] = (1 /      sqrt(2)) ^(i + 1)\r\n */\r\nvar is_lsf_table /* [2][15] */ = [\r\n    [\r\n        0.840896415,\r\n        0.707106781,\r\n        0.594603558,\r\n        0.500000000,\r\n        0.420448208,\r\n        0.353553391,\r\n        0.297301779,\r\n        0.250000000,\r\n        0.210224104,\r\n        0.176776695,\r\n        0.148650889,\r\n        0.125000000,\r\n        0.105112052,\r\n        0.088388348,\r\n        0.074325445\r\n    ], [\r\n        0.707106781,\r\n        0.500000000,\r\n        0.353553391,\r\n        0.250000000,\r\n        0.176776695,\r\n        0.125000000,\r\n        0.088388348,\r\n        0.062500000,\r\n        0.044194174,\r\n        0.031250000,\r\n        0.022097087,\r\n        0.015625000,\r\n        0.011048543,\r\n        0.007812500,\r\n        0.005524272\r\n    ]\r\n];\r\n\r\nvar CHAR_BIT = 8;\r\n\r\nvar SideInfo = function() {\r\n    this.gr = []; // array of Mad.Granule\r\n    this.scfsi = []; // array of ints\r\n};\r\n\r\n/*\r\n * scalefactor bit lengths\r\n * derived from section 2.4.2.7 of ISO/IEC 11172-3\r\n */\r\nvar sflen_table = [\r\n    { slen1: 0, slen2: 0 }, { slen1: 0, slen2: 1 }, { slen1: 0, slen2: 2 }, { slen1: 0, slen2: 3 },\r\n    { slen1: 3, slen2: 0 }, { slen1: 1, slen2: 1 }, { slen1: 1, slen2: 2 }, { slen1: 1, slen2: 3 },\r\n    { slen1: 2, slen2: 1 }, { slen1: 2, slen2: 2 }, { slen1: 2, slen2: 3 }, { slen1: 3, slen2: 1 },\r\n    { slen1: 3, slen2: 2 }, { slen1: 3, slen2: 3 }, { slen1: 4, slen2: 2 }, { slen1: 4, slen2: 3 }    \r\n];\r\n\r\nvar Granule = function() {\r\n    this.ch = []; // list of Channel \r\n}\r\n\r\nvar Channel = function() {\r\n    this.table_select = []; // list of Numbers (I guess)\r\n    this.scalefac = []; // list of integers\r\n    this.subblock_gain = [];\r\n}\r\n\r\n\r\n/* we must take care that sz >= bits and sz < sizeof(long) lest bits == 0 */\r\nvar MASK = function (cache, sz, bits) {\r\n    // return Mad.bitwiseAnd(Mad.rshift(cache, sz - bits), Mad.lshift(1, bits) - 1);\r\n    return (((cache) >> ((sz) - (bits))) & ((1 << (bits)) - 1));\r\n}\r\n\r\nvar MASK1BIT = function (cache, sz) {\r\n    // return Mad.bitwiseAnd(cache, Mad.lshift(1, sz - 1));\r\n    return ((cache) & (1 << ((sz) - 1)));\r\n}\r\n\r\n/*\r\n * NAME:    III_huffdecode()\r\n * DESCRIPTION: decode Huffman code words of one channel of one granule\r\n */\r\nvar III_huffdecode = function(ptr, xr /* Float64Array(576) */, channel, sfbwidth, part2_length) {\r\n    var exponents = new Int32Array(new ArrayBuffer(4 * 39));\r\n    var expptr = 0;\r\n    var bits_left, cachesz;\r\n    var xrptr;\r\n    var sfbound;\r\n    var bitcache;\r\n    var sfbwidthptr = 0;\r\n    \r\n    bits_left = channel.part2_3_length - part2_length;\r\n    \r\n    if (bits_left < 0)\r\n        return Mad.Error.BADPART3LEN;\r\n\r\n    III_exponents(channel, sfbwidth, exponents);\r\n\r\n    var peek = ptr.clone();\r\n    ptr.skip(bits_left);\r\n    \r\n    /* align bit reads to byte boundaries */\r\n    cachesz  = peek.left;\r\n    cachesz += ((32 - 1 - 24) + (24 - cachesz)) & ~7;\r\n    \r\n    bitcache   = peek.read(cachesz);\r\n    //console.log(\"bitcache peek.read = \" + bitcache);\r\n    bits_left -= cachesz;\r\n\r\n    xrptr = 0;\r\n\r\n    /* big_values */\r\n    {\r\n        var region = 0, rcount;\r\n        \r\n        // var reqcache = new Float64Array(new ArrayBuffer(8 * 16));\r\n        var reqcache = [];\r\n\r\n        sfbound = xrptr + sfbwidth[sfbwidthptr++];\r\n        rcount  = channel.region0_count + 1;\r\n\r\n        var entry = huff_pair_table[channel.table_select[region]];\r\n        var table     = entry.table;\r\n        var linbits   = entry.linbits;\r\n        var startbits = entry.startbits;\r\n\r\n        if (typeof(table) == 'undefined')\r\n            return Mad.Error.BADHUFFTABLE;\r\n\r\n        expptr = 0;\r\n        var exp     = exponents[expptr++];\r\n        var reqhits = 0;\r\n        var big_values = channel.big_values;\r\n\r\n        while (big_values-- && cachesz + bits_left > 0) {\r\n            var pair;\r\n            var clumpsz, value;\r\n            var requantized;\r\n\r\n            //console.log(\"big_values = \" + big_values + \", cachesz = \" + cachesz + \", bits_left = \" + bits_left);\r\n\r\n            if (xrptr == sfbound) {\r\n                sfbound += sfbwidth[sfbwidthptr++];\r\n\r\n                /* change table if region boundary */\r\n                if (--rcount == 0) {\r\n                    if (region == 0)\r\n                        rcount = channel.region1_count + 1;\r\n                    else\r\n                        rcount = 0;  /* all remaining */\r\n\r\n                    entry     = huff_pair_table[channel.table_select[++region]];\r\n                    table     = entry.table;\r\n                    linbits   = entry.linbits;\r\n                    startbits = entry.startbits;\r\n\r\n                    if (typeof(table) == 'undefined')\r\n                        return Mad.Error.BADHUFFTABLE;\r\n                }\r\n\r\n                if (exp != exponents[expptr]) {\r\n                    exp = exponents[expptr];\r\n                    reqhits = 0;\r\n                }\r\n\r\n                ++expptr;\r\n            }\r\n            \r\n\r\n            if (cachesz < 21) {\r\n                var bits       = ((32 - 1 - 21) + (21 - cachesz)) & ~7;\r\n                bitcache   = (bitcache << bits) | peek.read(bits);\r\n                cachesz   += bits;\r\n                bits_left -= bits;\r\n            }\r\n\r\n            /* hcod (0..19) */\r\n            clumpsz = startbits;\r\n            pair    = table[ (((bitcache) >> ((cachesz) - (clumpsz))) & ((1 << (clumpsz)) - 1))];\r\n            \r\n            while (!pair['final']) {\r\n                cachesz -= clumpsz;\r\n\r\n                clumpsz = pair.ptr.bits;\r\n                pair    = table[pair.ptr.offset +  (((bitcache) >> ((cachesz) - (clumpsz))) & ((1 << (clumpsz)) - 1))];\r\n            }\r\n\r\n            cachesz -= pair.value.hlen;\r\n\r\n            if (linbits) {\r\n                /* x (0..14) */\r\n                value = pair.value.x;\r\n                var x_final = false;\r\n\r\n                switch (value) {\r\n                case 0:\r\n                    xr[xrptr] = 0;\r\n                    break;\r\n\r\n                case 15:\r\n                    if (cachesz < linbits + 2) {\r\n                        bitcache   = (bitcache << 16) | peek.read(16);\r\n                        cachesz   += 16;\r\n                        bits_left -= 16;\r\n                    }\r\n\r\n                    value +=  (((bitcache) >> ((cachesz) - (linbits))) & ((1 << (linbits)) - 1));\r\n                    cachesz -= linbits;\r\n\r\n                    requantized = III_requantize(value, exp);\r\n                    x_final = true; // simulating goto, yay\r\n                    break;\r\n\r\n                default:\r\n                    if (reqhits & (1 << value))\r\n                        requantized = reqcache[value];\r\n                    else {\r\n                        reqhits |= (1 << value);\r\n                        requantized = reqcache[value] = III_requantize(value, exp);\r\n                    }\r\n                    x_final = true;\r\n                }\r\n                \r\n                if(x_final) {\r\n                    xr[xrptr] = ((bitcache) & (1 << ((cachesz--) - 1))) ?\r\n                        -requantized : requantized;\r\n                }\r\n\r\n                /* y (0..14) */\r\n                value = pair.value.y;\r\n                var y_final = false;\r\n\r\n                switch (value) {\r\n                case 0:\r\n                    xr[xrptr + 1] = 0;\r\n                    break;\r\n\r\n                case 15:\r\n                    if (cachesz < linbits + 1) {\r\n                        bitcache   = (bitcache << 16) | peek.read(16);\r\n                        cachesz   += 16;\r\n                        bits_left -= 16;\r\n                    }\r\n\r\n                    value +=  (((bitcache) >> ((cachesz) - (linbits))) & ((1 << (linbits)) - 1));\r\n                    cachesz -= linbits;\r\n\r\n                    requantized = III_requantize(value, exp);\r\n                    y_final = true;\r\n                    break; // simulating goto, yayzor\r\n\r\n                default:\r\n                    if (reqhits & (1 << value))\r\n                        requantized = reqcache[value];\r\n                    else {\r\n                        reqhits |= (1 << value);\r\n                        reqcache[value] = III_requantize(value, exp);\r\n                        requantized = reqcache[value];\r\n                    }\r\n                    y_final = true;\r\n                }\r\n                \r\n                if(y_final) {\r\n                    xr[xrptr + 1] = ((bitcache) & (1 << ((cachesz--) - 1))) ?\r\n                        -requantized : requantized;\r\n                }\r\n            } else {\r\n                /* x (0..1) */\r\n                value = pair.value.x;\r\n\r\n                if (value == 0) {\r\n                    xr[xrptr] = 0;\r\n                } else {\r\n                    if (reqhits & (1 << value))\r\n                        requantized = reqcache[value];\r\n                    else {\r\n                        reqhits |= (1 << value);\r\n                        requantized = reqcache[value] = III_requantize(value, exp);\r\n                    }\r\n\r\n                    xr[xrptr] = ((bitcache) & (1 << ((cachesz--) - 1))) ?\r\n                        -requantized : requantized;\r\n                }\r\n\r\n                /* y (0..1) */\r\n                value = pair.value.y;\r\n\r\n                if (value == 0)\r\n                    xr[xrptr + 1] = 0;\r\n                else {\r\n                    if (reqhits & (1 << value))\r\n                        requantized = reqcache[value];\r\n                    else {\r\n                        reqhits |= (1 << value);\r\n                        requantized = reqcache[value] = III_requantize(value, exp);\r\n                    }\r\n\r\n                    xr[xrptr + 1] = ((bitcache) & (1 << ((cachesz--) - 1))) ?\r\n                        -requantized : requantized;\r\n                }\r\n            }\r\n\r\n            xrptr += 2;\r\n            //console.log(\"big_values = \" + big_values + \", cachesz = \" + cachesz +\r\n            //  \", bits_left = \" + bits_left + \", xrptr = \" + xrptr);\r\n        }\r\n    }\r\n\r\n    //console.log(\"bits_left (before big_values overrun) = \" + bits_left);\r\n\r\n    if (cachesz + bits_left < 0)\r\n        return Mad.Error.BADHUFFDATA;  /* big_values overrun */\r\n\r\n    /* count1 */\r\n    {\r\n        var table = huff_quad_table[channel.flags & Mad.count1table_select];\r\n        var requantized = III_requantize(1, exp);\r\n\r\n        while (cachesz + bits_left > 0 && xrptr <= 572) {\r\n            /* hcod (1..6) */\r\n            if (cachesz < 10) {\r\n                bitcache   = (bitcache << 16) | peek.read(16);\r\n                cachesz   += 16;\r\n                bits_left -= 16;\r\n            }\r\n            \r\n            var quad = table[ (((bitcache) >> ((cachesz) - (4))) & ((1 << (4)) - 1))];\r\n\r\n            /* quad tables guaranteed to have at most one extra lookup */\r\n            if (!quad['final']) {\r\n                cachesz -= 4;\r\n\r\n                quad = table[quad.ptr.offset +\r\n                              (((bitcache) >> ((cachesz) - (quad.ptr.bits))) & ((1 << (quad.ptr.bits)) - 1))];\r\n            }\r\n\r\n            cachesz -= quad.value.hlen;\r\n\r\n            if (xrptr == sfbound) {\r\n                sfbound += sfbwidth[sfbwidthptr++];\r\n\r\n                if (exp != exponents[expptr]) {\r\n                    exp = exponents[expptr];\r\n                    requantized = III_requantize(1, exp);\r\n                }\r\n\r\n                ++expptr;\r\n            }\r\n\r\n            /* v (0..1) */\r\n            xr[xrptr] = quad.value.v ?\r\n                (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\r\n\r\n            /* w (0..1) */\r\n            xr[xrptr + 1] = quad.value.w ?\r\n                (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\r\n\r\n            xrptr += 2;\r\n\r\n            if (xrptr == sfbound) {\r\n                sfbound += sfbwidth[sfbwidthptr++];\r\n\r\n                if (exp != exponents[expptr]) {\r\n                    exp = exponents[expptr];\r\n                    requantized = III_requantize(1, exp);\r\n                }\r\n\r\n                ++expptr;\r\n            }\r\n\r\n            /* x (0..1) */\r\n            xr[xrptr] = quad.value.x ?\r\n                (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\r\n\r\n            /* y (0..1) */\r\n            xr[xrptr + 1] = quad.value.y ?\r\n                (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\r\n\r\n            xrptr += 2;\r\n        }\r\n\r\n        if (cachesz + bits_left < 0) {\r\n            //# if 0 && defined(DEBUG)\r\n            //console.log(\"huffman count1 overrun (\" + (-(cachesz + bits_left)) + \" bits)\");\r\n            //# endif\r\n\r\n            /* technically the bitstream is misformatted, but apparently\r\n               some encoders are just a bit sloppy with stuffing bits */\r\n            xrptr -= 4;\r\n        }\r\n    }\r\n\r\n    if (!(-bits_left <= Mad.BUFFER_GUARD * CHAR_BIT)) {\r\n        throw new Error(\"assertion failed: (-bits_left <= Mad.BUFFER_GUARD * CHAR_BIT)\");\r\n    }\r\n\r\n    /*\r\n      # if 0 && defined(DEBUG)\r\n      if (bits_left < 0)\r\n      console.log(\"read \" + (-bits_left) + \" bits too many\");\r\n      else if (cachesz + bits_left > 0)\r\n      console.log((cachesz + bits_left) + \" stuffing bits\");\r\n      else\r\n      console.log(\"bits_left \" + bits_left);\r\n      # endif\r\n    */\r\n\r\n    /* rzero */\r\n    while (xrptr < 576) {\r\n        xr[xrptr]     = 0;\r\n        xr[xrptr + 1] = 0;\r\n\r\n        xrptr += 2;\r\n    }\r\n\r\n    return Mad.Error.NONE;\r\n}\r\n\r\n/*\r\n * NAME:    III_sideinfo()\r\n * DESCRIPTION: decode frame side information from a bitstream\r\n * \r\n * Since several values are passed by reference to this function, instead\r\n * we're just returning a hash containing:\r\n * {\r\n *   ptr (Bit)\r\n *   sideinfo (Mad.Sideinfo) \r\n *   data_bitlen (Number)\r\n *   priv_bitlen (Number)\r\n * }\r\n */\r\nvar III_sideinfo = function (ptr, nch, lsf) {\r\n    \r\n    var si = new SideInfo();\r\n    var result = Mad.Error.NONE;\r\n\r\n    var data_bitlen = 0;\r\n    var priv_bitlen = lsf ? ((nch == 1) ? 1 : 2) : ((nch == 1) ? 5 : 3);\r\n    \r\n    si.main_data_begin = ptr.read(lsf ? 8 : 9);\r\n    si.private_bits    = ptr.read(priv_bitlen);\r\n\r\n    var ngr = 1;\r\n    if (!lsf) {\r\n        ngr = 2;\r\n\r\n        for (var ch = 0; ch < nch; ++ch)\r\n            si.scfsi[ch] = ptr.read(4);\r\n    }\r\n\r\n    for (var gr = 0; gr < ngr; ++gr) {\r\n        var granule = new Granule();\r\n        si.gr[gr] = granule;\r\n        \r\n        for (var ch = 0; ch < nch; ++ch) {\r\n            var channel = new Channel();\r\n            granule.ch[ch] = channel;\r\n            \r\n            channel.part2_3_length    = ptr.read(12);\r\n            channel.big_values        = ptr.read(9);\r\n            channel.global_gain       = ptr.read(8);\r\n            channel.scalefac_compress = ptr.read(lsf ? 9 : 4);\r\n\r\n            data_bitlen += channel.part2_3_length;\r\n\r\n            if (channel.big_values > 288 && result == 0)\r\n                result = Mad.Error.BADBIGVALUES;\r\n\r\n            channel.flags = 0;\r\n\r\n            /* window_switching_flag */\r\n            if (ptr.read(1)) {\r\n                channel.block_type = ptr.read(2);\r\n\r\n                if (channel.block_type == 0 && result == 0)\r\n                    result = Mad.Error.BADBLOCKTYPE;\r\n\r\n                if (!lsf && channel.block_type == 2 && si.scfsi[ch] && result == 0)\r\n                    result = Mad.Error.BADSCFSI;\r\n\r\n                channel.region0_count = 7;\r\n                channel.region1_count = 36;\r\n\r\n                if (ptr.read(1))\r\n                    channel.flags |= Mad.mixed_block_flag;\r\n                else if (channel.block_type == 2)\r\n                    channel.region0_count = 8;\r\n\r\n                for (var i = 0; i < 2; ++i)\r\n                    channel.table_select[i] = ptr.read(5);\r\n\r\n                for (var i = 0; i < 3; ++i)\r\n                    channel.subblock_gain[i] = ptr.read(3);\r\n            } else {\r\n                channel.block_type = 0;\r\n\r\n                for (var i = 0; i < 3; ++i)\r\n                    channel.table_select[i] = ptr.read(5);\r\n\r\n                channel.region0_count = ptr.read(4);\r\n                channel.region1_count = ptr.read(3);\r\n            }\r\n\r\n            /* [preflag,] scalefac_scale, count1table_select */\r\n            channel.flags |= ptr.read(lsf ? 2 : 3);\r\n        }\r\n    }\r\n\r\n    return {\r\n        ptr: ptr,\r\n        si: si,\r\n        data_bitlen: data_bitlen,\r\n        priv_bitlen: priv_bitlen\r\n    };\r\n}\r\n\r\n/*\r\n * NAME:    III_scalefactors()\r\n * DESCRIPTION: decode channel scalefactors of one granule from a bitstream\r\n */\r\nvar III_scalefactors = function (ptr, channel, gr0ch, scfsi) {\r\n    var start; /* Bit */\r\n    var slen1, slen2, sfbi;\r\n\r\n    var start = ptr.clone();\r\n\r\n    var slen1 = sflen_table[channel.scalefac_compress].slen1;\r\n    var slen2 = sflen_table[channel.scalefac_compress].slen2;\r\n\r\n    if (channel.block_type == 2) {\r\n        sfbi = 0;\r\n\r\n        var nsfb = (channel.flags & Mad.mixed_block_flag) ? 8 + 3 * 3 : 6 * 3;\r\n        while (nsfb--)\r\n            channel.scalefac[sfbi++] = ptr.read(slen1);\r\n\r\n        nsfb = 6 * 3;\r\n        while (nsfb--)\r\n            channel.scalefac[sfbi++] = ptr.read(slen2);\r\n\r\n        nsfb = 1 * 3;\r\n        while (nsfb--)\r\n            channel.scalefac[sfbi++] = 0;\r\n    }\r\n    else {  /* channel.block_type != 2 */\r\n        if (scfsi & 0x8) {\r\n            for (var sfbi = 0; sfbi < 6; ++sfbi)\r\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\r\n        }\r\n        else {\r\n            for (var sfbi = 0; sfbi < 6; ++sfbi)\r\n                channel.scalefac[sfbi] = ptr.read(slen1);\r\n        }\r\n\r\n        if (scfsi & 0x4) {\r\n            for (var sfbi = 6; sfbi < 11; ++sfbi)\r\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\r\n        }\r\n        else {\r\n            for (var sfbi = 6; sfbi < 11; ++sfbi)\r\n                channel.scalefac[sfbi] = ptr.read(slen1);\r\n        }\r\n\r\n        if (scfsi & 0x2) {\r\n            for (var sfbi = 11; sfbi < 16; ++sfbi)\r\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\r\n        }\r\n        else {\r\n            for (var sfbi = 11; sfbi < 16; ++sfbi)\r\n                channel.scalefac[sfbi] = ptr.read(slen2);\r\n        }\r\n\r\n        if (scfsi & 0x1) {\r\n            for (var sfbi = 16; sfbi < 21; ++sfbi)\r\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\r\n        }\r\n        else {\r\n            for (var sfbi = 16; sfbi < 21; ++sfbi)\r\n                channel.scalefac[sfbi] = ptr.read(slen2);\r\n        }\r\n\r\n        channel.scalefac[21] = 0;\r\n    }\r\n\r\n    return start.length(ptr);\r\n}\r\n\r\nvar c0 = 2 * Math.cos( 1 * Math.PI / 18);\r\nvar c1 = 2 * Math.cos( 3 * Math.PI / 18);\r\nvar c2 = 2 * Math.cos( 4 * Math.PI / 18);\r\nvar c3 = 2 * Math.cos( 5 * Math.PI / 18);\r\nvar c4 = 2 * Math.cos( 7 * Math.PI / 18);\r\nvar c5 = 2 * Math.cos( 8 * Math.PI / 18);\r\nvar c6 = 2 * Math.cos(16 * Math.PI / 18);\r\n\r\nvar fastsdct = function (x /* [9] */, y /* [18] */, offset) {\r\n    var a0,  a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10, a11, a12;\r\n    var a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25;\r\n    var m0,  m1,  m2,  m3,  m4,  m5,  m6,  m7;\r\n\r\n    a0 = x[3] + x[5];\r\n    a1 = x[3] - x[5];\r\n    a2 = x[6] + x[2];\r\n    a3 = x[6] - x[2];\r\n    a4 = x[1] + x[7];\r\n    a5 = x[1] - x[7];\r\n    a6 = x[8] + x[0];\r\n    a7 = x[8] - x[0];\r\n\r\n    a8  = a0  + a2;\r\n    a9  = a0  - a2;\r\n    a10 = a0  - a6;\r\n    a11 = a2  - a6;\r\n    a12 = a8  + a6;\r\n    a13 = a1  - a3;\r\n    a14 = a13 + a7;\r\n    a15 = a3  + a7;\r\n    a16 = a1  - a7;\r\n    a17 = a1  + a3;\r\n\r\n    m0 = a17 * -c3;\r\n    m1 = a16 * -c0;\r\n    m2 = a15 * -c4;\r\n    m3 = a14 * -c1;\r\n    m4 = a5  * -c1;\r\n    m5 = a11 * -c6;\r\n    m6 = a10 * -c5;\r\n    m7 = a9  * -c2;\r\n\r\n    a18 =     x[4] + a4;\r\n    a19 = 2 * x[4] - a4;\r\n    a20 = a19 + m5;\r\n    a21 = a19 - m5;\r\n    a22 = a19 + m6;\r\n    a23 = m4  + m2;\r\n    a24 = m4  - m2;\r\n    a25 = m4  + m1;\r\n\r\n    /* output to every other slot for convenience */\r\n    y[offset +  0] = a18 + a12;\r\n    y[offset +  2] = m0  - a25;\r\n    y[offset +  4] = m7  - a20;\r\n    y[offset +  6] = m3;\r\n    y[offset +  8] = a21 - m6;\r\n    y[offset + 10] = a24 - m1;\r\n    y[offset + 12] = a12 - 2 * a18;\r\n    y[offset + 14] = a23 + m0;\r\n    y[offset + 16] = a22 + m7;\r\n}\r\n\r\n/* sdctII_scale[i] = 2 * cos(PI * (2 * i + 1) / (2 * 18)) */\r\nvar sdctII_scale = [];\r\nfor(var i = 0; i < 9; ++i) {\r\n    sdctII_scale[i] = 2 * Math.cos(Math.PI * (2 * i + 1) / (2 * 18));\r\n}\r\n\r\n\r\nvar sdctII = function (x /* [18] */, X /* [18] */) {\r\n    /* divide the 18-point SDCT-II into two 9-point SDCT-IIs */\r\n\r\n    // var tmp = new Float64Array(new ArrayBuffer(8 * 9));\r\n\r\n    var tmp = [];\r\n\r\n    /* even input butterfly */\r\n\r\n    for (var i = 0; i < 9; ++i) {\r\n        tmp[i] = x[i] + x[18 - i - 1];\r\n    }\r\n\r\n    fastsdct(tmp, X, 0);\r\n\r\n    /* odd input butterfly and scaling */\r\n\r\n    for (var i = 0; i < 9; ++i) {\r\n        tmp[i] = (x[i] - x[18 - i - 1]) * sdctII_scale[i];\r\n    }\r\n\r\n    fastsdct(tmp, X, 1);\r\n\r\n    /* output accumulation */\r\n    \r\n    for (var i = 3; i < 18; i += 2) {\r\n        X[i] -= X[i - 2];\r\n    }\r\n}\r\n\r\n/* dctIV_scale[i] = 2 * cos(PI * (2 * i + 1) / (4 * 18)) */  \r\nvar dctIV_scale = [];\r\nfor(i = 0; i < 18; i++) {\r\n    dctIV_scale[i] = 2 * Math.cos(Math.PI * (2 * i + 1) / (4 * 18));\r\n}\r\n\r\nvar dctIV = function (y /* [18] */, X /* [18] */) {\r\n    // var tmp = new Float64Array(new ArrayBuffer(8 * 18));\r\n    var tmp = [];\r\n\r\n    /* scaling */\r\n\r\n    for (var i = 0; i < 18; ++i) {\r\n        tmp[i] = y[i] * dctIV_scale[i];\r\n    }\r\n\r\n    /* SDCT-II */\r\n\r\n    sdctII(tmp, X);\r\n\r\n    /* scale reduction and output accumulation */\r\n\r\n    X[0] /= 2;\r\n    for (var i = 1; i < 18; ++i) {\r\n        X[i] = X[i] / 2 - X[i - 1];\r\n    }\r\n}\r\n\r\n/*\r\n * NAME:    imdct36\r\n * DESCRIPTION: perform X[18]->x[36] IMDCT using Szu-Wei Lee's fast algorithm\r\n */\r\nvar imdct36 = function (x /* [18] */, y /* [36] */) {\r\n    // var tmp = new Float64Array(new ArrayBuffer(8 * 18));\r\n    var tmp = [];\r\n\r\n    /* DCT-IV */\r\n    dctIV(x, tmp);\r\n\r\n    /* convert 18-point DCT-IV to 36-point IMDCT */\r\n\r\n    for (var i =  0; i <  9; ++i) {\r\n        y[i] =  tmp[9 + i];\r\n    }\r\n    for (var i =  9; i < 27; ++i) {\r\n        y[i] = -tmp[36 - (9 + i) - 1];\r\n    }\r\n    for (var i = 27; i < 36; ++i) {\r\n        y[i] = -tmp[i - 27];\r\n    }\r\n}\r\n\r\n/*\r\n * NAME:    III_imdct_s()\r\n * DESCRIPTION: perform IMDCT and windowing for short blocks\r\n */\r\nvar III_imdct_s = function (X /* [18] */, z /* [36] */)\r\n{\r\n    var yptr = 0;\r\n    var wptr;\r\n    var Xptr = 0;\r\n    \r\n    // var imdct_s_y = new Float64Array(new ArrayBuffer(8 * 36));\r\n    var y = [];\r\n    var hi, lo;\r\n\r\n    /* IMDCT */\r\n    for (var w = 0; w < 3; ++w) {\r\n        var s = imdct_s;\r\n        var sptr = 0;\r\n\r\n        for (var i = 0; i < 3; ++i) {\r\n            lo =  X[Xptr + 0] * s[sptr][0] +\r\n                X[Xptr + 1] * s[sptr][1] +\r\n                X[Xptr + 2] * s[sptr][2] +\r\n                X[Xptr + 3] * s[sptr][3] +\r\n                X[Xptr + 4] * s[sptr][4] +\r\n                X[Xptr + 5] * s[sptr][5];\r\n\r\n\r\n            y[yptr + i + 0] = lo;\r\n            y[yptr + 5 - i] = -y[yptr + i + 0];\r\n\r\n            ++sptr;\r\n\r\n            lo =  X[Xptr + 0] * s[sptr][0] +\r\n                X[Xptr + 1] * s[sptr][1] +\r\n                X[Xptr + 2] * s[sptr][2] +\r\n                X[Xptr + 3] * s[sptr][3] +\r\n                X[Xptr + 4] * s[sptr][4] +\r\n                X[Xptr + 5] * s[sptr][5];\r\n\r\n            y[yptr +  i + 6] = lo;\r\n            y[yptr + 11 - i] = y[yptr + i + 6];\r\n\r\n            ++sptr;\r\n        }\r\n\r\n        yptr += 12;\r\n        Xptr += 6;\r\n    }\r\n\r\n    /* windowing, overlapping and concatenation */\r\n\r\n    yptr = 0;\r\n    var wptr = 0;\r\n\r\n    for (var i = 0; i < 6; ++i) {\r\n        z[i +  0] = 0;\r\n        z[i +  6] = y[yptr +  0 + 0] * window_s[wptr + 0];\r\n\r\n        lo = y[yptr +  0 + 6] * window_s[wptr + 6] +\r\n            y[yptr + 12 + 0] * window_s[wptr + 0];\r\n\r\n        z[i + 12] = lo;\r\n\r\n        lo = y[yptr + 12 + 6] * window_s[wptr + 6] +\r\n            y[yptr + 24 + 0] * window_s[wptr + 0];\r\n\r\n        z[i + 18] = lo;\r\n\r\n        z[i + 24] = y[yptr + 24 + 6] * window_s[wptr + 6];\r\n        z[i + 30] = 0;\r\n\r\n        ++yptr;\r\n        ++wptr;\r\n    }\r\n}\r\n\r\n/*\r\n * NAME:    III_imdct_l()\r\n * DESCRIPTION: perform IMDCT and windowing for long blocks\r\n */\r\nMad.III_imdct_l = function (X /* 18 */, z /* 36 */, block_type) {\r\n    /* IMDCT */\r\n    imdct36(X, z);\r\n\r\n    /* windowing */\r\n\r\n    switch (block_type) {\r\n    case 0:  /* normal window */\r\n        for (var i = 0; i < 36; ++i) z[i] = z[i] * window_l[i];\r\n        break;\r\n\r\n    case 1:  /* start block */\r\n        for (var i =  0; i < 18; ++i) z[i] = z[i] * window_l[i];\r\n        /*  (var i = 18; i < 24; ++i) z[i] unchanged */\r\n        for (var i = 24; i < 30; ++i) z[i] = z[i] * window_s[i - 18];\r\n        for (var i = 30; i < 36; ++i) z[i] = 0;\r\n        break;\r\n\r\n    case 3:  /* stop block */\r\n        for (var i =  0; i <  6; ++i) z[i] = 0;\r\n        for (var i =  6; i < 12; ++i) z[i] = z[i] * window_s[i - 6];\r\n        /*  (var i = 12; i < 18; ++i) z[i] unchanged */\r\n        for (var i = 18; i < 36; ++i) z[i] = z[i] * window_l[i];\r\n        break;\r\n    }\r\n}\r\n\r\n\r\n/*\r\n * NAME:III_freqinver()\r\n * DESCRIPTION: perform subband frequency inversion for odd sample lines\r\n */\r\nvar III_freqinver = function (sample /* [18][32] */, sb)\r\n{\r\n    for (var i = 1; i < 18; i += 2)\r\n        sample[i][sb] = -sample[i][sb];\r\n}\r\n\r\n/*\r\n * NAME:    III_decode()\r\n * DESCRIPTION: decode frame main_data\r\n * \r\n * result struct:\r\n */\r\nvar III_decode = function (ptr, frame, si, nch) {\r\n    var header = frame.header;\r\n    var sfreqi;\r\n    \r\n    {\r\n        var sfreq = header.samplerate;\r\n\r\n        if (header.flags & Mad.Flag.MPEG_2_5_EXT)\r\n            sfreq *= 2;\r\n\r\n        /* 48000 => 0, 44100 => 1, 32000 => 2,\r\n           24000 => 3, 22050 => 4, 16000 => 5 */\r\n        sfreqi = ((sfreq >>  7) & 0x000f) +\r\n            ((sfreq >> 15) & 0x0001) - 8;\r\n\r\n        if (header.flags & Mad.Flag.MPEG_2_5_EXT)\r\n            sfreqi += 3;\r\n    }\r\n    \r\n    /* scalefactors, Huffman decoding, requantization */\r\n    var ngr = (header.flags & Mad.Flag.LSF_EXT) ? 1 : 2;\r\n    \r\n    for (var gr = 0; gr < ngr; ++gr) {\r\n        var granule = si.gr[gr];\r\n        var sfbwidth = [];\r\n        /* unsigned char const *sfbwidth[2]; */\r\n        var l = 0;\r\n        // var xr = [ new Float64Array(new ArrayBuffer(8 * 576)), new Float64Array(new ArrayBuffer(8 * 576)) ];\r\n        var xr = [[], []];\r\n        var error;\r\n\r\n        for (var ch = 0; ch < nch; ++ch) {\r\n            var channel = granule.ch[ch];\r\n            var part2_length;\r\n\r\n            sfbwidth[ch] = sfbwidth_table[sfreqi].l;\r\n\r\n            if (channel.block_type == 2) {\r\n                sfbwidth[ch] = (channel.flags & Mad.mixed_block_flag) ?\r\n                    sfbwidth_table[sfreqi].m : sfbwidth_table[sfreqi].s;\r\n            }\r\n\r\n            if (header.flags & Mad.Flag.LSF_EXT) {\r\n                part2_length = Mad.III_scalefactors_lsf(ptr, channel,\r\n                                                        ch == 0 ? 0 : si.gr[1].ch[1], header.mode_extension);\r\n            } else {\r\n                part2_length = III_scalefactors(ptr, channel, si.gr[0].ch[ch],\r\n                                                    gr == 0 ? 0 : si.scfsi[ch]);\r\n            }\r\n\r\n            error = III_huffdecode(ptr, xr[ch], channel, sfbwidth[ch], part2_length);\r\n            \r\n            if (error)\r\n                return error;\r\n        }\r\n\r\n        if (Mad.debug) {\r\n            Mad.debug.huffdecode.write(Mad.debug.iteration + \"\\t\");\r\n\r\n            for (var i = 0; i < 576; i++) {\r\n                Mad.debug.huffdecode.write(xr[0][i].toFixed(8) + \"\\t\");\r\n            }\r\n            Mad.debug.huffdecode.write(\"\\n\");\r\n        }\r\n\r\n        /* joint stereo processing */\r\n        if ((header.mode == Mad.Mode.JOINT_STEREO) && (header.mode_extension != 0)) {\r\n            error = III_stereo(xr, granule, header, sfbwidth[0]);\r\n            \r\n            if (error)\r\n                return error;\r\n        }\r\n\r\n        /* reordering, alias reduction, IMDCT, overlap-add, frequency inversion */\r\n        for (var ch = 0; ch < nch; ++ch) {\r\n            var channel = granule.ch[ch];\r\n            var sample = frame.sbsample[ch].slice(18 * gr);\r\n            \r\n            var sb, l = 0, i, sblimit;\r\n            // var output = new Float64Array(new ArrayBuffer(8 * 36));\r\n            var output = [];\r\n\r\n            if (channel.block_type == 2) {\r\n                III_reorder(xr[ch], channel, sfbwidth[ch]);\r\n\r\n                /*\r\n                 * According to ISO/IEC 11172-3, \"Alias reduction is not applied for\r\n                 * granules with block_type == 2 (short block).\" However, other\r\n                 * sources suggest alias reduction should indeed be performed on the\r\n                 * lower two subbands of mixed blocks. Most other implementations do\r\n                 * this, so by default we will too.\r\n                 */\r\n                if (channel.flags & Mad.mixed_block_flag)\r\n                    III_aliasreduce(xr[ch], 36);\r\n            } else {\r\n                III_aliasreduce(xr[ch], 576);\r\n            }\r\n\r\n            /* subbands 0-1 */\r\n            if (channel.block_type != 2 || (channel.flags & Mad.mixed_block_flag)) {\r\n                var block_type = channel.block_type;\r\n                if (channel.flags & Mad.mixed_block_flag)\r\n                    block_type = 0;\r\n\r\n                /* long blocks */\r\n                for (var sb = 0; sb < 2; ++sb, l += 18) {\r\n                    Mad.III_imdct_l(xr[ch].slice(l, l + 18), output, block_type);\r\n                    III_overlap(output, frame.overlap[ch][sb], sample, sb);\r\n\r\n                    // var sys = require('sys');\r\n                    // sys.print(\"\\nblocktype: \" + block_type + \" sb: \" + sb + \"\\n\");\r\n                    // for (var i = 0; i < 18; i++) {\r\n                    //     sys.print(output[i].toFixed(8) + \"\\t\");\r\n                    //     if (i % 8 == 7) sys.print(\"\\n\");\r\n                    // }\r\n\r\n                }\r\n            } else {\r\n                /* short blocks */\r\n                for (var sb = 0; sb < 2; ++sb, l += 18) {\r\n                    III_imdct_s(xr[ch].slice(l, l + 18), output);\r\n                    III_overlap(output, frame.overlap[ch][sb], sample, sb);\r\n                }\r\n            }\r\n\r\n            III_freqinver(sample, 1);\r\n\r\n            /* (nonzero) subbands 2-31 */\r\n            i = 576;\r\n            while (i > 36 && xr[ch][i - 1] == 0)\r\n                --i;\r\n\r\n            sblimit = 32 - (((576 - i) / 18) << 0);\r\n\r\n            if (channel.block_type != 2) {\r\n                /* long blocks */\r\n                for (var sb = 2; sb < sblimit; ++sb, l += 18) {\r\n                    Mad.III_imdct_l(xr[ch].slice(l, l + 18), output, channel.block_type);\r\n                    III_overlap(output, frame.overlap[ch][sb], sample, sb);\r\n\r\n                    if (sb & 1)\r\n                        III_freqinver(sample, sb);\r\n                }\r\n            } else {\r\n                /* short blocks */\r\n                for (var sb = 2; sb < sblimit; ++sb, l += 18) {\r\n                    III_imdct_s(xr[ch].slice(l, l + 18), output);\r\n                    III_overlap(output, frame.overlap[ch][sb], sample, sb);\r\n\r\n                    if (sb & 1)\r\n                        III_freqinver(sample, sb);\r\n                }\r\n            }\r\n\r\n            // remaining (zero) subbands\r\n            for (var sb = sblimit; sb < 32; ++sb) {\r\n                III_overlap_z(frame.overlap[ch][sb], sample, sb);\r\n\r\n                if (sb & 1)\r\n                    III_freqinver(sample, sb);\r\n            }\r\n\r\n            if (Mad.debug) {\r\n                for (var i = 0; i < 18; i++) {\r\n                    Mad.debug.sample.write(Mad.debug.iteration * 18 + i + \"\\t\");\r\n                    for (var j = 0; j < 32; j++) {\r\n                        Mad.debug.sample.write(sample[i][j].toFixed(8) + \"\\t\");\r\n                    }\r\n                    Mad.debug.sample.write(\"\\n\");\r\n                }\r\n                Mad.debug.iteration += 1;\r\n            }       \r\n        }\r\n    }\r\n\r\n    return Mad.Error.NONE;\r\n}\r\n\r\n\r\n/*\r\n * NAME:    layer.III()\r\n * DESCRIPTION: decode a single Layer III frame\r\n */\r\nvar layer_III = function (stream, frame) {\r\n    var header = frame.header;\r\n    var nch, next_md_begin = 0;\r\n    var si_len, data_bitlen, md_len = 0;\r\n    var frame_space, frame_used, frame_free;\r\n    var /* Mad.Error */ error;\r\n    var ptr;\r\n    var result = 0;\r\n\r\n    /* allocate Layer III dynamic structures */\r\n    nch = header.nchannels();\r\n    si_len = (header.flags & Mad.Flag.LSF_EXT) ?\r\n        (nch == 1 ? 9 : 17) : (nch == 1 ? 17 : 32);\r\n\r\n    /* check frame sanity */\r\n    if (stream.next_frame - stream.ptr.nextbyte() < si_len) {\r\n        stream.error = Mad.Error.BADFRAMELEN;\r\n        stream.md_len = 0;\r\n        return -1;\r\n    }\r\n\r\n    /* check CRC word */\r\n    if (header.flags & Mad.Flag.PROTECTION) {\r\n        header.crc_check = mad_bit_crc(stream.ptr, si_len * CHAR_BIT, header.crc_check);\r\n\r\n        if (header.crc_check != header.crc_target &&\r\n            !(frame.options & Mad.Option.IGNORECRC)) {\r\n            stream.error = Mad.Error.BADCRC;\r\n            result = -1;\r\n        }\r\n    }\r\n\r\n    /* decode frame side information */\r\n    var sideinfoResult = III_sideinfo(stream.ptr, nch, header.flags & Mad.Flag.LSF_EXT);\r\n    \r\n    stream.ptr = sideinfoResult.ptr;\r\n    var si = sideinfoResult.si;\r\n    var data_bitlen = sideinfoResult.data_bitlen;\r\n    var priv_bitlen = sideinfoResult.priv_bitlen;\r\n    \r\n    //console.log(\"We're at \" + stream.ptr.offset + \", data_bitlen = \" + data_bitlen + \", priv_bitlen = \" + priv_bitlen);\r\n    \r\n    if (error && result == 0) {\r\n        stream.error = error;\r\n        result = -1;\r\n    }\r\n\r\n    header.flags        |= priv_bitlen;\r\n    header.private_bits |= si.private_bits;\r\n\r\n    /* find main_data of next frame */\r\n    {\r\n        var peek = new Bit(stream.stream, stream.next_frame);\r\n\r\n        header = peek.read(32);\r\n        \r\n        if (Mad.bitwiseAnd(header, 0xffe60000) /* syncword | layer */ == 0xffe20000) { \r\n            if (!(Mad.bitwiseAnd(header, 0x00010000)))  /* protection_bit */\r\n                peek.skip(16);  /* crc_check */\r\n\r\n            next_md_begin = peek.read(Mad.bitwiseAnd(header, 0x00080000) /* ID */ ? 9 : 8);\r\n        }\r\n    }\r\n\r\n    /* find main_data of this frame */\r\n    frame_space = stream.next_frame - stream.ptr.nextbyte();\r\n\r\n    //console.log(\"next_frame = \" + stream.next_frame + \", nextbyte = \" + stream.ptr.nextbyte() + \", frame_space = \" + frame_space);\r\n\r\n    //console.log(\"before, next_md_begin = \" + next_md_begin);\r\n\r\n    if (next_md_begin > si.main_data_begin + frame_space)\r\n        next_md_begin = 0;\r\n\r\n    //console.log(\"so far, md_len = \" + md_len + \", si.main_data_begin = \" + si.main_data_begin + \", frame_space = \" + frame_space + \", next_md_begin = \" + next_md_begin);\r\n    \r\n    md_len = si.main_data_begin + frame_space - next_md_begin;\r\n\r\n    frame_used = 0;\r\n    \r\n    if (si.main_data_begin == 0) {\r\n        ptr = stream.ptr;\r\n        stream.md_len = 0;\r\n\r\n        frame_used = md_len;\r\n    } else {\r\n        //console.log(\"si.main_data_begin = \" + si.main_data_begin + \", stream.md_len = \" + stream.md_len);\r\n        if (si.main_data_begin > stream.md_len) {\r\n            if (result == 0) {\r\n                stream.error = Mad.Error.BADDATAPTR;\r\n                result = -1;\r\n            }\r\n        } else {\r\n            var old_md_len = stream.md_len;\r\n            \r\n            if (md_len > si.main_data_begin) {\r\n                if(!(stream.md_len + md_len - si.main_data_begin <= Mad.BUFFER_MDLEN)) {\r\n                    throw new Error(\"Assertion failed: (stream.md_len + md_len - si.main_data_begin <= MAD_BUFFER_MDLEN)\");\r\n                }\r\n                \r\n                frame_used = md_len - si.main_data_begin;\r\n                \r\n                /* memcpy(dst, dstOffset, src, srcOffset, length) - returns a copy of dst with modified bytes */\r\n                stream.main_data = Mad.memcpy(stream.main_data, stream.md_len, stream.ptr.stream, stream.ptr.nextbyte(), frame_used);\r\n                \r\n                /*\r\n                // Keeping this here as a handy little reference\r\n                memcpy(*stream.main_data + stream.md_len,\r\n                mad_bit_nextbyte(&stream.ptr),\r\n                frame_used = md_len - si.main_data_begin\r\n                );\r\n                */\r\n                stream.md_len += frame_used;\r\n            }\r\n            \r\n            ptr = new Bit(stream.main_data, old_md_len - si.main_data_begin);\r\n        }\r\n    }\r\n\r\n    frame_free = frame_space - frame_used;\r\n\r\n    /* decode main_data */\r\n    if (result == 0) {\r\n        error = III_decode(ptr, frame, si, nch);\r\n        \r\n        if (error) {\r\n            stream.error = error;\r\n            result = -1;\r\n        }\r\n        \r\n        /* designate ancillary bits */\r\n        stream.anc_ptr    = ptr;\r\n        stream.anc_bitlen = md_len * CHAR_BIT - data_bitlen;\r\n    }\r\n    \r\n    // DEBUG\r\n    /*\r\n      console.log(\r\n      \"main_data_begin:\" + si.main_data_begin +\r\n      \", md_len:\" + md_len +\r\n      \", frame_free:\" + frame_free +\r\n      \", data_bitlen:\" + data_bitlen +\r\n      \", anc_bitlen: \" + stream.anc_bitlen);\r\n    */\r\n\r\n    /* preload main_data buffer with up to 511 bytes for next frame(s) */\r\n    if (frame_free >= next_md_begin) {\r\n        stream.main_data = Mad.memcpy(stream.main_data, 0, stream.stream, stream.next_frame - next_md_begin, next_md_begin);\r\n        /*\r\n        // Keeping here for reference\r\n        memcpy(*stream.main_data, stream.next_frame - next_md_begin, next_md_begin);\r\n        */\r\n        stream.md_len = next_md_begin;\r\n    } else {\r\n        if (md_len < si.main_data_begin) {\r\n            var extra = si.main_data_begin - md_len;\r\n            if (extra + frame_free > next_md_begin)\r\n                extra = next_md_begin - frame_free;\r\n\r\n            if (extra < stream.md_len) {\r\n                stream.main_data = Mad.memcpy(stream.main_data, 0, stream.main_data, stream.md_len - extra, extra);\r\n                /*\r\n                // Keeping here for reference\r\n                memmove(*stream.main_data, *stream.main_data + stream.md_len - extra, extra);\r\n                */\r\n                stream.md_len = extra;\r\n            }\r\n        } else {\r\n            stream.md_len = 0;\r\n        }\r\n\r\n        stream.main_data = Mad.memcpy(stream.main_data, stream.md_len, stream.stream, stream.next_frame - frame_free, frame_free);\r\n        /*\r\n        // Keeping here for reference\r\n        memcpy(*stream.main_data + stream.md_len, stream.next_frame - frame_free, frame_free);\r\n        */\r\n        stream.md_len += frame_free;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nvar III_exponents = function(channel, sfbwidth, exponents) {\r\n    var gain = channel.global_gain - 210;\r\n    var scalefac_multiplier = (channel.flags & Mad.scalefac_scale) ? 2 : 1;\r\n    \r\n    if (channel.block_type == 2) {\r\n        var sfbi = 0, l = 0;\r\n        \r\n        if (channel.flags & Mad.mixed_block_flag) {\r\n            var premask = (channel.flags & Mad.preflag) ? ~0 : 0;\r\n            \r\n            /* long block subbands 0-1 */\r\n            \r\n            while (l < 36) {\r\n                exponents[sfbi] = gain - ((channel.scalefac[sfbi] + (pretab[sfbi] & premask)) << scalefac_multiplier);\r\n                \r\n                l += sfbwidth[sfbi++]\r\n            }\r\n        }\r\n        \r\n        /* this is probably wrong for 8000 Hz short/mixed blocks */\r\n        \r\n        var gain0 = gain - 8 * channel.subblock_gain[0];\r\n        var gain1 = gain - 8 * channel.subblock_gain[1];\r\n        var gain2 = gain - 8 * channel.subblock_gain[2];\r\n        \r\n        while (l < 576) {\r\n            exponents[sfbi + 0] = gain0 - (channel.scalefac[sfbi + 0] << scalefac_multiplier);\r\n            exponents[sfbi + 1] = gain1 - (channel.scalefac[sfbi + 1] << scalefac_multiplier);\r\n            exponents[sfbi + 2] = gain2 - (channel.scalefac[sfbi + 2] << scalefac_multiplier);\r\n            \r\n            l    += 3 * sfbwidth[sfbi];\r\n            sfbi += 3;\r\n        }\r\n    } else { /* channel.block_type != 2 */\r\n        if (channel.flags & Mad.preflag) {\r\n            for (var sfbi = 0; sfbi < 22; ++sfbi) {\r\n                exponents[sfbi] = gain - ((channel.scalefac[sfbi] + pretab[sfbi]) << scalefac_multiplier);\r\n            }\r\n        } else {\r\n            for (var sfbi = 0; sfbi < 22; ++sfbi) {\r\n                exponents[sfbi] = gain - (channel.scalefac[sfbi] << scalefac_multiplier);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar III_requantize = function(value, exp) {\r\n    // usual (x >> 0) tricks to make sure frac and exp stay integers\r\n    var frac = (exp % 4) >> 0;  /* assumes sign(frac) == sign(exp) */\r\n    exp = (exp / 4) >> 0;\r\n\r\n    var requantized = Math.pow(value, 4.0 / 3.0);\r\n    requantized *= Math.pow(2.0, (exp / 4.0));\r\n    \r\n    if(frac) {\r\n        requantized *= Math.pow(2.0, (frac / 4.0));\r\n    }\r\n    \r\n    if(exp < 0) {\r\n        requantized /= Math.pow(2.0, -exp * (3.0 / 4.0));\r\n    }\r\n\r\n    return requantized;\r\n}\r\n\r\nvar III_aliasreduce = function(xr, lines) {\r\n    var xrPointer = 0;\r\n    \r\n    for (xrPointer += 18; xrPointer < lines; xrPointer += 18) {\r\n        for (var i = 0; i < 8; ++i) {\r\n            var a = xr[xrPointer - i - 1];\r\n            var b = xr[xrPointer + i];\r\n\r\n            var lo =  a * cs[i] - b * ca[i];\r\n\r\n            xr[xrPointer - i - 1] = lo;\r\n\r\n            lo =  b * cs[i] + a * ca[i];\r\n\r\n            xr[xrPointer + i] = lo\r\n        }\r\n    }\r\n}\r\n\r\nvar III_overlap = function (output /* [36] */, overlap /* [18] */, sample /* [18][32] */, sb) {\r\n    for (var i = 0; i < 18; ++i) {\r\n        sample[i][sb] = output[i +  0] + overlap[i];\r\n        overlap[i]    = output[i + 18];\r\n    }\r\n}\r\n\r\nvar III_overlap_z = function (overlap /* [18] */, sample /* [18][32] */, sb) {\r\n    for (var i = 0; i < 18; ++i) {\r\n        sample[i][sb] = overlap[i];\r\n        overlap[i]    = 0;\r\n    }\r\n}\r\n\r\n// allocating typed arrays once and for all, outside the function\r\n// var reorder_tmp = new Float64Array(new ArrayBuffer(8 * 32 * 3 * 6));\r\n// var reorder_sbw = new Float64Array(new ArrayBuffer(8 * 3));\r\n// var reorder_sw  = new Float64Array(new ArrayBuffer(8 * 3));\r\n\r\nvar III_reorder = function (xr /* [576] */, channel, sfbwidth /* [39] */) {\r\n    var sfbwidthPointer = 0;\r\n    var tmp = [];\r\n\r\n    for (var i = 0; i < 32; i++) {\r\n        tmp[i] = [];\r\n        for (var j = 0; j < 3; j++) {\r\n            tmp[i][j] = [];\r\n            for (var k = 0; k < 6; k++) {\r\n                tmp[i][j][k] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    var sbw = [];\r\n    var sw  = [];\r\n    \r\n    /* this is probably wrong for 8000 Hz mixed blocks */\r\n\r\n    var sb = 0;\r\n    if (channel.flags & Mad.mixed_block_flag) {\r\n        var sb = 2;\r\n\r\n        var l = 0;\r\n        while (l < 36)\r\n            l += sfbwidth[sfbwidthPointer++];\r\n    }\r\n\r\n    for (var w = 0; w < 3; ++w) {\r\n        sbw[w] = sb;\r\n        sw[w]  = 0;\r\n    }\r\n\r\n    var f = sfbwidth[sfbwidthPointer++];\r\n    var w = 0;\r\n\r\n    for (var l = 18 * sb; l < 576; ++l) {\r\n        if (f-- == 0) {\r\n            f = sfbwidth[sfbwidthPointer++] - 1;\r\n            w = (w + 1) % 3;\r\n        }\r\n        \r\n        tmp[sbw[w]][w][sw[w]++] = xr[l];\r\n\r\n        if (sw[w] == 6) {\r\n            sw[w] = 0;\r\n            ++sbw[w];\r\n        }\r\n    }\r\n\r\n    var tmp2 = [];\r\n    var ptr = 0;\r\n\r\n    for (var i = 0; i < 32; i++) {\r\n        for (var j = 0; j < 3; j++) {\r\n            for (var k = 0; k < 6; k++) {\r\n                tmp2[ptr++] = tmp[i][j][k];\r\n            }\r\n        }\r\n    }\r\n    \r\n    var len = (576 - 18 * sb);\r\n\r\n    for (var i = 0; i < len; i++) {\r\n        xr[18 * sb + i] = tmp2[sb + i];\r\n    }\r\n}\r\n\r\nvar III_stereo = function(xr /* [2][576] */, granule, header, sfbwidth) {\r\n    var modes = [];\r\n    var sfbi, l, n, i;\r\n\r\n    if (granule.ch[0].block_type !=\r\n        granule.ch[1].block_type ||\r\n        (granule.ch[0].flags & Mad.mixed_block_flag) !=\r\n        (granule.ch[1].flags & Mad.mixed_block_flag))\r\n        return Mad.Error.BADSTEREO;\r\n\r\n    for (i = 0; i < 39; ++i)\r\n        modes[i] = header.mode_extension;\r\n\r\n    /* intensity stereo */\r\n\r\n    if (header.mode_extension & Mad.I_STEREO) {\r\n        var right_ch = granule.ch[1];\r\n        var right_xr = xr[1];\r\n        var is_pos;\r\n\r\n        header.flags |= Mad.Flag.I_STEREO;\r\n\r\n        /* first determine which scalefactor bands are to be processed */\r\n\r\n        if (right_ch.block_type == 2) {\r\n            var lower, start, max, bound = [], w;\r\n\r\n            lower = start = max = bound[0] = bound[1] = bound[2] = 0;\r\n\r\n            sfbi = l = 0;\r\n\r\n            if (right_ch.flags & Mad.mixed_block_flag) {\r\n                while (l < 36) {\r\n                    n = sfbwidth[sfbi++];\r\n\r\n                    for (i = 0; i < n; ++i) {\r\n                        if (right_xr[i]) {\r\n                            lower = sfbi;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    right_xr += n;\r\n                    l += n;\r\n                }\r\n\r\n                start = sfbi;\r\n            }\r\n\r\n            w = 0;\r\n            while (l < 576) {\r\n                n = sfbwidth[sfbi++];\r\n\r\n                for (i = 0; i < n; ++i) {\r\n                    if (right_xr[i]) {\r\n                        max = bound[w] = sfbi;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                right_xr += n;\r\n                l += n;\r\n                w = (w + 1) % 3;\r\n            }\r\n\r\n            if (max)\r\n                lower = start;\r\n\r\n            /* long blocks */\r\n\r\n            for (i = 0; i < lower; ++i)\r\n                modes[i] = header.mode_extension & ~Mad.I_STEREO;\r\n\r\n            /* short blocks */\r\n\r\n            w = 0;\r\n            for (i = start; i < max; ++i) {\r\n                if (i < bound[w])\r\n                    modes[i] = header.mode_extension & ~Mad.I_STEREO;\r\n\r\n                w = (w + 1) % 3;\r\n            }\r\n        }\r\n        else {  /* right_ch.block_type != 2 */\r\n            var bound;\r\n\r\n            bound = 0;\r\n            for (sfbi = l = 0; l < 576; l += n) {\r\n                n = sfbwidth[sfbi++];\r\n\r\n                for (i = 0; i < n; ++i) {\r\n                    if (right_xr[i]) {\r\n                        bound = sfbi;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                right_xr += n;\r\n            }\r\n\r\n            for (i = 0; i < bound; ++i)\r\n                modes[i] = header.mode_extension & ~Mad.I_STEREO;\r\n        }\r\n\r\n        /* now do the actual processing */\r\n\r\n        if (header.flags & Mad.Flag.LSF_EXT) {\r\n            illegal_pos = granule[1].ch[1].scalefac;\r\n            var lsf_scale;\r\n\r\n            /* intensity_scale */\r\n            lsf_scale = is_lsf_table[right_ch.scalefac_compress & 0x1];\r\n\r\n            for (sfbi = l = 0; l < 576; ++sfbi, l += n) {\r\n                n = sfbwidth[sfbi];\r\n\r\n                if (!(modes[sfbi] & Mad.I_STEREO))\r\n                    continue;\r\n\r\n                if (illegal_pos[sfbi]) {\r\n                    modes[sfbi] &= ~Mad.I_STEREO;\r\n                    continue;\r\n                }\r\n\r\n                is_pos = right_ch.scalefac[sfbi];\r\n\r\n                for (i = 0; i < n; ++i) {\r\n                    var left;\r\n\r\n                    left = xr[0][l + i];\r\n\r\n                    if (is_pos == 0)\r\n                        xr[1][l + i] = left;\r\n                    else {\r\n                        var opposite;\r\n\r\n                        opposite = left * lsf_scale[(is_pos - 1) / 2];\r\n\r\n                        if (is_pos & 1) {\r\n                            xr[0][l + i] = opposite;\r\n                            xr[1][l + i] = left;\r\n                        }\r\n                        else\r\n                            xr[1][l + i] = opposite;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {  /* !(header.flags & MAD_FLAG_LSF_EXT) */\r\n            for (sfbi = l = 0; l < 576; ++sfbi, l += n) {\r\n                n = sfbwidth[sfbi];\r\n\r\n                if (!(modes[sfbi] & Mad.I_STEREO))\r\n                    continue;\r\n\r\n                is_pos = right_ch.scalefac[sfbi];\r\n\r\n                if (is_pos >= 7) {  /* illegal intensity position */\r\n                    modes[sfbi] &= ~Mad.I_STEREO;\r\n                    continue;\r\n                }\r\n\r\n                for (i = 0; i < n; ++i) {\r\n                    var left;\r\n\r\n                    left = xr[0][l + i];\r\n\r\n                    xr[0][l + i] = left * is_table[    is_pos];\r\n                    xr[1][l + i] = left * is_table[6 - is_pos];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /* middle/side stereo */\r\n\r\n    if (header.mode_extension & Mad.MS_STEREO) {\r\n        var invsqrt2;\r\n\r\n        header.flags |= Mad.Flag.MS_STEREO;\r\n\r\n        invsqrt2 = root_table[3 + -2];\r\n\r\n        for (sfbi = l = 0; l < 576; ++sfbi, l += n) {\r\n            n = sfbwidth[sfbi];\r\n\r\n            if (modes[sfbi] != Mad.MS_STEREO)\r\n                continue;\r\n\r\n            for (i = 0; i < n; ++i) {\r\n                var m, s;\r\n\r\n                m = xr[0][l + i];\r\n                s = xr[1][l + i];\r\n\r\n                xr[0][l + i] = (m + s) * invsqrt2;  /* l = (m + s) / sqrt(2) */\r\n                xr[1][l + i] = (m - s) * invsqrt2;  /* r = (m - s) / sqrt(2) */\r\n            }\r\n        }\r\n    }\r\n\r\n    return Mad.Error.NONE;    \r\n};\r\n\r\nexport default layer_III;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/layer3.js","\r\n/*\r\n * These are the Huffman code words for Layer III.\r\n * The data for these tables are derived from Table B.7 of ISO/IEC 11172-3.\r\n *\r\n * These tables support decoding up to 4 Huffman code bits at a time.\r\n */\r\n\r\n/*\r\nunion huffquad {\r\n  struct {\r\n    unsigned short final  :  1;\r\n    unsigned short bits   :  3;\r\n    unsigned short offset : 12;\r\n  } ptr;\r\n  struct {\r\n    unsigned short final  :  1;\r\n    unsigned short hlen   :  3;\r\n    unsigned short v      :  1;\r\n    unsigned short w      :  1;\r\n    unsigned short x      :  1;\r\n    unsigned short y      :  1;\r\n  } value;\r\n  unsigned short final    :  1;\r\n};\r\n\r\nunion huffpair {\r\n  struct {\r\n    unsigned short final  :  1;\r\n    unsigned short bits   :  3;\r\n    unsigned short offset : 12;\r\n  } ptr;\r\n  struct {\r\n    unsigned short final  :  1;\r\n    unsigned short hlen   :  3;\r\n    unsigned short x      :  4;\r\n    unsigned short y      :  4;\r\n  } value;\r\n  unsigned short final    :  1;\r\n};\r\n\r\nstruct hufftable {\r\n  union huffpair const *table;\r\n  unsigned short linbits;\r\n  unsigned short startbits;\r\n};\r\n*/\r\n\r\n//extern union huffquad const *const mad_huff_quad_table[2];\r\n//extern struct hufftable const mad_huff_pair_table[32];\r\n\r\nvar PTR = function(offs, bits) {\r\n    return {\r\n        'final':  0, // final is a reserved word in JavaScript and GSC will complain about it.\r\n        ptr: {\r\n            bits:   bits,\r\n            offset: offs\r\n        }\r\n    };\r\n};\r\n\r\nvar huffquad_V = function (v, w, x, y, hlen) {\r\n    return {\r\n        'final':  1, // final is a reserved word in JavaScript and GSC will complain about it.\r\n        value: {\r\n            v: v,\r\n            w: w,\r\n            x: x,\r\n            y: y\r\n        }\r\n    };\r\n};\r\n\r\n/*\r\n# if defined(__GNUC__) ||  \\\r\n    (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901)\r\n#  define PTR(offs, bits)\t{ .ptr   = { 0, bits, offs       } }\r\n#  define V(v, w, x, y, hlen)\t{ .value = { 1, hlen, v, w, x, y } }\r\n# else\r\n#  define PTR(offs, bits)\t{ { 0, bits, offs } }\r\n#  if defined(WORDS_BIGENDIAN)\r\n#   define V(v, w, x, y, hlen)\t{ { 1, hlen, (v << 11) | (w << 10) | (x <<  9) | (y <<  8) } }\r\n#  else\r\n#   define V(v, w, x, y, hlen)\t{ { 1, hlen, (v <<  0) | (w <<  1) | (x <<  2) | (y <<  3) } }\r\n#  endif\r\n# endif\r\n*/\r\n\r\n/* huffquad */ var hufftabA = [\r\n  /* 0000 */ PTR(16, 2),\r\n  /* 0001 */ PTR(20, 2),\r\n  /* 0010 */ PTR(24, 1),\r\n  /* 0011 */ PTR(26, 1),\r\n  /* 0100 */ huffquad_V(0, 0, 1, 0, 4),\r\n  /* 0101 */ huffquad_V(0, 0, 0, 1, 4),\r\n  /* 0110 */ huffquad_V(0, 1, 0, 0, 4),\r\n  /* 0111 */ huffquad_V(1, 0, 0, 0, 4),\r\n  /* 1000 */ huffquad_V(0, 0, 0, 0, 1),\r\n  /* 1001 */ huffquad_V(0, 0, 0, 0, 1),\r\n  /* 1010 */ huffquad_V(0, 0, 0, 0, 1),\r\n  /* 1011 */ huffquad_V(0, 0, 0, 0, 1),\r\n  /* 1100 */ huffquad_V(0, 0, 0, 0, 1),\r\n  /* 1101 */ huffquad_V(0, 0, 0, 0, 1),\r\n  /* 1110 */ huffquad_V(0, 0, 0, 0, 1),\r\n  /* 1111 */ huffquad_V(0, 0, 0, 0, 1),\r\n\r\n  /* 0000 ... */\r\n  /* 00   */ huffquad_V(1, 0, 1, 1, 2),\t/* 16 */\r\n  /* 01   */ huffquad_V(1, 1, 1, 1, 2),\r\n  /* 10   */ huffquad_V(1, 1, 0, 1, 2),\r\n  /* 11   */ huffquad_V(1, 1, 1, 0, 2),\r\n\r\n  /* 0001 ... */\r\n  /* 00   */ huffquad_V(0, 1, 1, 1, 2),\t/* 20 */\r\n  /* 01   */ huffquad_V(0, 1, 0, 1, 2),\r\n  /* 10   */ huffquad_V(1, 0, 0, 1, 1),\r\n  /* 11   */ huffquad_V(1, 0, 0, 1, 1),\r\n\r\n  /* 0010 ... */\r\n  /* 0    */ huffquad_V(0, 1, 1, 0, 1),\t/* 24 */\r\n  /* 1    */ huffquad_V(0, 0, 1, 1, 1),\r\n\r\n  /* 0011 ... */\r\n  /* 0    */ huffquad_V(1, 0, 1, 0, 1),\t/* 26 */\r\n  /* 1    */ huffquad_V(1, 1, 0, 0, 1)\r\n];\r\n\r\n/* huffquad */ var hufftabB = [\r\n  /* 0000 */ huffquad_V(1, 1, 1, 1, 4),\r\n  /* 0001 */ huffquad_V(1, 1, 1, 0, 4),\r\n  /* 0010 */ huffquad_V(1, 1, 0, 1, 4),\r\n  /* 0011 */ huffquad_V(1, 1, 0, 0, 4),\r\n  /* 0100 */ huffquad_V(1, 0, 1, 1, 4),\r\n  /* 0101 */ huffquad_V(1, 0, 1, 0, 4),\r\n  /* 0110 */ huffquad_V(1, 0, 0, 1, 4),\r\n  /* 0111 */ huffquad_V(1, 0, 0, 0, 4),\r\n  /* 1000 */ huffquad_V(0, 1, 1, 1, 4),\r\n  /* 1001 */ huffquad_V(0, 1, 1, 0, 4),\r\n  /* 1010 */ huffquad_V(0, 1, 0, 1, 4),\r\n  /* 1011 */ huffquad_V(0, 1, 0, 0, 4),\r\n  /* 1100 */ huffquad_V(0, 0, 1, 1, 4),\r\n  /* 1101 */ huffquad_V(0, 0, 1, 0, 4),\r\n  /* 1110 */ huffquad_V(0, 0, 0, 1, 4),\r\n  /* 1111 */ huffquad_V(0, 0, 0, 0, 4)\r\n];\r\n\r\n/*\r\n# undef V\r\n# undef PTR\r\n\r\n# if defined(__GNUC__) ||  \\\r\n    (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901)\r\n#  define PTR(offs, bits)\t{ .ptr   = { 0, bits, offs } }\r\n#  define V(x, y, hlen)\t\t{ .value = { 1, hlen, x, y } }\r\n# else\r\n#  define PTR(offs, bits)\t{ { 0, bits, offs } }\r\n#  if defined(WORDS_BIGENDIAN)\r\n#   define V(x, y, hlen)\t{ { 1, hlen, (x << 8) | (y << 4) } }\r\n#  else\r\n#   define V(x, y, hlen)\t{ { 1, hlen, (x << 0) | (y << 4) } }\r\n#  endif\r\n# endif\r\n*/\r\n\r\nvar V = function (x, y, hlen) {\r\n    return {\r\n        'final':  1, // final is a reserved word in JavaScript and GSC will complain about it.\r\n        value: {\r\n            x: x,\r\n            y: y,\r\n            hlen: hlen\r\n        }\r\n    };\r\n};\r\n\r\nvar hufftab0 = [\r\n  /*      */ V(0, 0, 0)\r\n];\r\n\r\nvar hufftab1 = [\r\n  /* 000  */ V(1, 1, 3),\r\n  /* 001  */ V(0, 1, 3),\r\n  /* 010  */ V(1, 0, 2),\r\n  /* 011  */ V(1, 0, 2),\r\n  /* 100  */ V(0, 0, 1),\r\n  /* 101  */ V(0, 0, 1),\r\n  /* 110  */ V(0, 0, 1),\r\n  /* 111  */ V(0, 0, 1)\r\n];\r\n\r\nvar hufftab2 = [\r\n  /* 000  */ PTR(8, 3),\r\n  /* 001  */ V(1, 1, 3),\r\n  /* 010  */ V(0, 1, 3),\r\n  /* 011  */ V(1, 0, 3),\r\n  /* 100  */ V(0, 0, 1),\r\n  /* 101  */ V(0, 0, 1),\r\n  /* 110  */ V(0, 0, 1),\r\n  /* 111  */ V(0, 0, 1),\r\n\r\n  /* 000 ... */\r\n  /* 000  */ V(2, 2, 3),\t/* 8 */\r\n  /* 001  */ V(0, 2, 3),\r\n  /* 010  */ V(1, 2, 2),\r\n  /* 011  */ V(1, 2, 2),\r\n  /* 100  */ V(2, 1, 2),\r\n  /* 101  */ V(2, 1, 2),\r\n  /* 110  */ V(2, 0, 2),\r\n  /* 111  */ V(2, 0, 2)\r\n];\r\n\r\nvar hufftab3 = [\r\n  /* 000  */ PTR(8, 3),\r\n  /* 001  */ V(1, 0, 3),\r\n  /* 010  */ V(1, 1, 2),\r\n  /* 011  */ V(1, 1, 2),\r\n  /* 100  */ V(0, 1, 2),\r\n  /* 101  */ V(0, 1, 2),\r\n  /* 110  */ V(0, 0, 2),\r\n  /* 111  */ V(0, 0, 2),\r\n\r\n  /* 000 ... */\r\n  /* 000  */ V(2, 2, 3),\t/* 8 */\r\n  /* 001  */ V(0, 2, 3),\r\n  /* 010  */ V(1, 2, 2),\r\n  /* 011  */ V(1, 2, 2),\r\n  /* 100  */ V(2, 1, 2),\r\n  /* 101  */ V(2, 1, 2),\r\n  /* 110  */ V(2, 0, 2),\r\n  /* 111  */ V(2, 0, 2)\r\n];\r\n\r\nvar hufftab5 = [\r\n  /* 000  */ PTR(8, 4),\r\n  /* 001  */ V(1, 1, 3),\r\n  /* 010  */ V(0, 1, 3),\r\n  /* 011  */ V(1, 0, 3),\r\n  /* 100  */ V(0, 0, 1),\r\n  /* 101  */ V(0, 0, 1),\r\n  /* 110  */ V(0, 0, 1),\r\n  /* 111  */ V(0, 0, 1),\r\n\r\n  /* 000 ... */\r\n  /* 0000 */ PTR(24, 1),\t/* 8 */\r\n  /* 0001 */ V(3, 2, 4),\r\n  /* 0010 */ V(3, 1, 3),\r\n  /* 0011 */ V(3, 1, 3),\r\n  /* 0100 */ V(1, 3, 4),\r\n  /* 0101 */ V(0, 3, 4),\r\n  /* 0110 */ V(3, 0, 4),\r\n  /* 0111 */ V(2, 2, 4),\r\n  /* 1000 */ V(1, 2, 3),\r\n  /* 1001 */ V(1, 2, 3),\r\n  /* 1010 */ V(2, 1, 3),\r\n  /* 1011 */ V(2, 1, 3),\r\n  /* 1100 */ V(0, 2, 3),\r\n  /* 1101 */ V(0, 2, 3),\r\n  /* 1110 */ V(2, 0, 3),\r\n  /* 1111 */ V(2, 0, 3),\r\n\r\n  /* 000 0000 ... */\r\n  /* 0    */ V(3, 3, 1),\t/* 24 */\r\n  /* 1    */ V(2, 3, 1)\r\n];\r\n\r\nvar hufftab6 = [\r\n  /* 0000 */ PTR(16, 3),\r\n  /* 0001 */ PTR(24, 1),\r\n  /* 0010 */ PTR(26, 1),\r\n  /* 0011 */ V(1, 2, 4),\r\n  /* 0100 */ V(2, 1, 4),\r\n  /* 0101 */ V(2, 0, 4),\r\n  /* 0110 */ V(0, 1, 3),\r\n  /* 0111 */ V(0, 1, 3),\r\n  /* 1000 */ V(1, 1, 2),\r\n  /* 1001 */ V(1, 1, 2),\r\n  /* 1010 */ V(1, 1, 2),\r\n  /* 1011 */ V(1, 1, 2),\r\n  /* 1100 */ V(1, 0, 3),\r\n  /* 1101 */ V(1, 0, 3),\r\n  /* 1110 */ V(0, 0, 3),\r\n  /* 1111 */ V(0, 0, 3),\r\n\r\n  /* 0000 ... */\r\n  /* 000  */ V(3, 3, 3),\t/* 16 */\r\n  /* 001  */ V(0, 3, 3),\r\n  /* 010  */ V(2, 3, 2),\r\n  /* 011  */ V(2, 3, 2),\r\n  /* 100  */ V(3, 2, 2),\r\n  /* 101  */ V(3, 2, 2),\r\n  /* 110  */ V(3, 0, 2),\r\n  /* 111  */ V(3, 0, 2),\r\n\r\n  /* 0001 ... */\r\n  /* 0    */ V(1, 3, 1),\t/* 24 */\r\n  /* 1    */ V(3, 1, 1),\r\n\r\n  /* 0010 ... */\r\n  /* 0    */ V(2, 2, 1),\t/* 26 */\r\n  /* 1    */ V(0, 2, 1)\r\n];\r\n\r\nvar hufftab7 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 2),\r\n  /* 0011 */ V(1, 1, 4),\r\n  /* 0100 */ V(0, 1, 3),\r\n  /* 0101 */ V(0, 1, 3),\r\n  /* 0110 */ V(1, 0, 3),\r\n  /* 0111 */ V(1, 0, 3),\r\n  /* 1000 */ V(0, 0, 1),\r\n  /* 1001 */ V(0, 0, 1),\r\n  /* 1010 */ V(0, 0, 1),\r\n  /* 1011 */ V(0, 0, 1),\r\n  /* 1100 */ V(0, 0, 1),\r\n  /* 1101 */ V(0, 0, 1),\r\n  /* 1110 */ V(0, 0, 1),\r\n  /* 1111 */ V(0, 0, 1),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(52, 2),\t/* 16 */\r\n  /* 0001 */ PTR(56, 1),\r\n  /* 0010 */ PTR(58, 1),\r\n  /* 0011 */ V(1, 5, 4),\r\n  /* 0100 */ V(5, 1, 4),\r\n  /* 0101 */ PTR(60, 1),\r\n  /* 0110 */ V(5, 0, 4),\r\n  /* 0111 */ PTR(62, 1),\r\n  /* 1000 */ V(2, 4, 4),\r\n  /* 1001 */ V(4, 2, 4),\r\n  /* 1010 */ V(1, 4, 3),\r\n  /* 1011 */ V(1, 4, 3),\r\n  /* 1100 */ V(4, 1, 3),\r\n  /* 1101 */ V(4, 1, 3),\r\n  /* 1110 */ V(4, 0, 3),\r\n  /* 1111 */ V(4, 0, 3),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ V(0, 4, 4),\t/* 32 */\r\n  /* 0001 */ V(2, 3, 4),\r\n  /* 0010 */ V(3, 2, 4),\r\n  /* 0011 */ V(0, 3, 4),\r\n  /* 0100 */ V(1, 3, 3),\r\n  /* 0101 */ V(1, 3, 3),\r\n  /* 0110 */ V(3, 1, 3),\r\n  /* 0111 */ V(3, 1, 3),\r\n  /* 1000 */ V(3, 0, 3),\r\n  /* 1001 */ V(3, 0, 3),\r\n  /* 1010 */ V(2, 2, 3),\r\n  /* 1011 */ V(2, 2, 3),\r\n  /* 1100 */ V(1, 2, 2),\r\n  /* 1101 */ V(1, 2, 2),\r\n  /* 1110 */ V(1, 2, 2),\r\n  /* 1111 */ V(1, 2, 2),\r\n\r\n  /* 0010 ... */\r\n  /* 00   */ V(2, 1, 1),\t/* 48 */\r\n  /* 01   */ V(2, 1, 1),\r\n  /* 10   */ V(0, 2, 2),\r\n  /* 11   */ V(2, 0, 2),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 00   */ V(5, 5, 2),\t/* 52 */\r\n  /* 01   */ V(4, 5, 2),\r\n  /* 10   */ V(5, 4, 2),\r\n  /* 11   */ V(5, 3, 2),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 0    */ V(3, 5, 1),\t/* 56 */\r\n  /* 1    */ V(4, 4, 1),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 0    */ V(2, 5, 1),\t/* 58 */\r\n  /* 1    */ V(5, 2, 1),\r\n\r\n  /* 0000 0101 ... */\r\n  /* 0    */ V(0, 5, 1),\t/* 60 */\r\n  /* 1    */ V(3, 4, 1),\r\n\r\n  /* 0000 0111 ... */\r\n  /* 0    */ V(4, 3, 1),\t/* 62 */\r\n  /* 1    */ V(3, 3, 1)\r\n];\r\n\r\nvar hufftab8 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ V(1, 2, 4),\r\n  /* 0011 */ V(2, 1, 4),\r\n  /* 0100 */ V(1, 1, 2),\r\n  /* 0101 */ V(1, 1, 2),\r\n  /* 0110 */ V(1, 1, 2),\r\n  /* 0111 */ V(1, 1, 2),\r\n  /* 1000 */ V(0, 1, 3),\r\n  /* 1001 */ V(0, 1, 3),\r\n  /* 1010 */ V(1, 0, 3),\r\n  /* 1011 */ V(1, 0, 3),\r\n  /* 1100 */ V(0, 0, 2),\r\n  /* 1101 */ V(0, 0, 2),\r\n  /* 1110 */ V(0, 0, 2),\r\n  /* 1111 */ V(0, 0, 2),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(48, 3),\t/* 16 */\r\n  /* 0001 */ PTR(56, 2),\r\n  /* 0010 */ PTR(60, 1),\r\n  /* 0011 */ V(1, 5, 4),\r\n  /* 0100 */ V(5, 1, 4),\r\n  /* 0101 */ PTR(62, 1),\r\n  /* 0110 */ PTR(64, 1),\r\n  /* 0111 */ V(2, 4, 4),\r\n  /* 1000 */ V(4, 2, 4),\r\n  /* 1001 */ V(1, 4, 4),\r\n  /* 1010 */ V(4, 1, 3),\r\n  /* 1011 */ V(4, 1, 3),\r\n  /* 1100 */ V(0, 4, 4),\r\n  /* 1101 */ V(4, 0, 4),\r\n  /* 1110 */ V(2, 3, 4),\r\n  /* 1111 */ V(3, 2, 4),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ V(1, 3, 4),\t/* 32 */\r\n  /* 0001 */ V(3, 1, 4),\r\n  /* 0010 */ V(0, 3, 4),\r\n  /* 0011 */ V(3, 0, 4),\r\n  /* 0100 */ V(2, 2, 2),\r\n  /* 0101 */ V(2, 2, 2),\r\n  /* 0110 */ V(2, 2, 2),\r\n  /* 0111 */ V(2, 2, 2),\r\n  /* 1000 */ V(0, 2, 2),\r\n  /* 1001 */ V(0, 2, 2),\r\n  /* 1010 */ V(0, 2, 2),\r\n  /* 1011 */ V(0, 2, 2),\r\n  /* 1100 */ V(2, 0, 2),\r\n  /* 1101 */ V(2, 0, 2),\r\n  /* 1110 */ V(2, 0, 2),\r\n  /* 1111 */ V(2, 0, 2),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 000  */ V(5, 5, 3),\t/* 48 */\r\n  /* 001  */ V(5, 4, 3),\r\n  /* 010  */ V(4, 5, 2),\r\n  /* 011  */ V(4, 5, 2),\r\n  /* 100  */ V(5, 3, 1),\r\n  /* 101  */ V(5, 3, 1),\r\n  /* 110  */ V(5, 3, 1),\r\n  /* 111  */ V(5, 3, 1),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 00   */ V(3, 5, 2),\t/* 56 */\r\n  /* 01   */ V(4, 4, 2),\r\n  /* 10   */ V(2, 5, 1),\r\n  /* 11   */ V(2, 5, 1),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 0    */ V(5, 2, 1),\t/* 60 */\r\n  /* 1    */ V(0, 5, 1),\r\n\r\n  /* 0000 0101 ... */\r\n  /* 0    */ V(3, 4, 1),\t/* 62 */\r\n  /* 1    */ V(4, 3, 1),\r\n\r\n  /* 0000 0110 ... */\r\n  /* 0    */ V(5, 0, 1),\t/* 64 */\r\n  /* 1    */ V(3, 3, 1)\r\n];\r\n\r\nvar hufftab9 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 3),\r\n  /* 0010 */ PTR(40, 2),\r\n  /* 0011 */ PTR(44, 2),\r\n  /* 0100 */ PTR(48, 1),\r\n  /* 0101 */ V(1, 2, 4),\r\n  /* 0110 */ V(2, 1, 4),\r\n  /* 0111 */ V(2, 0, 4),\r\n  /* 1000 */ V(1, 1, 3),\r\n  /* 1001 */ V(1, 1, 3),\r\n  /* 1010 */ V(0, 1, 3),\r\n  /* 1011 */ V(0, 1, 3),\r\n  /* 1100 */ V(1, 0, 3),\r\n  /* 1101 */ V(1, 0, 3),\r\n  /* 1110 */ V(0, 0, 3),\r\n  /* 1111 */ V(0, 0, 3),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(50, 1),\t/* 16 */\r\n  /* 0001 */ V(3, 5, 4),\r\n  /* 0010 */ V(5, 3, 4),\r\n  /* 0011 */ PTR(52, 1),\r\n  /* 0100 */ V(4, 4, 4),\r\n  /* 0101 */ V(2, 5, 4),\r\n  /* 0110 */ V(5, 2, 4),\r\n  /* 0111 */ V(1, 5, 4),\r\n  /* 1000 */ V(5, 1, 3),\r\n  /* 1001 */ V(5, 1, 3),\r\n  /* 1010 */ V(3, 4, 3),\r\n  /* 1011 */ V(3, 4, 3),\r\n  /* 1100 */ V(4, 3, 3),\r\n  /* 1101 */ V(4, 3, 3),\r\n  /* 1110 */ V(5, 0, 4),\r\n  /* 1111 */ V(0, 4, 4),\r\n\r\n  /* 0001 ... */\r\n  /* 000  */ V(2, 4, 3),\t/* 32 */\r\n  /* 001  */ V(4, 2, 3),\r\n  /* 010  */ V(3, 3, 3),\r\n  /* 011  */ V(4, 0, 3),\r\n  /* 100  */ V(1, 4, 2),\r\n  /* 101  */ V(1, 4, 2),\r\n  /* 110  */ V(4, 1, 2),\r\n  /* 111  */ V(4, 1, 2),\r\n\r\n  /* 0010 ... */\r\n  /* 00   */ V(2, 3, 2),\t/* 40 */\r\n  /* 01   */ V(3, 2, 2),\r\n  /* 10   */ V(1, 3, 1),\r\n  /* 11   */ V(1, 3, 1),\r\n\r\n  /* 0011 ... */\r\n  /* 00   */ V(3, 1, 1),\t/* 44 */\r\n  /* 01   */ V(3, 1, 1),\r\n  /* 10   */ V(0, 3, 2),\r\n  /* 11   */ V(3, 0, 2),\r\n\r\n  /* 0100 ... */\r\n  /* 0    */ V(2, 2, 1),\t/* 48 */\r\n  /* 1    */ V(0, 2, 1),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 0    */ V(5, 5, 1),\t/* 50 */\r\n  /* 1    */ V(4, 5, 1),\r\n\r\n  /* 0000 0011 ... */\r\n  /* 0    */ V(5, 4, 1),\t/* 52 */\r\n  /* 1    */ V(0, 5, 1)\r\n];\r\n\r\nvar hufftab10 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 2),\r\n  /* 0011 */ V(1, 1, 4),\r\n  /* 0100 */ V(0, 1, 3),\r\n  /* 0101 */ V(0, 1, 3),\r\n  /* 0110 */ V(1, 0, 3),\r\n  /* 0111 */ V(1, 0, 3),\r\n  /* 1000 */ V(0, 0, 1),\r\n  /* 1001 */ V(0, 0, 1),\r\n  /* 1010 */ V(0, 0, 1),\r\n  /* 1011 */ V(0, 0, 1),\r\n  /* 1100 */ V(0, 0, 1),\r\n  /* 1101 */ V(0, 0, 1),\r\n  /* 1110 */ V(0, 0, 1),\r\n  /* 1111 */ V(0, 0, 1),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(52, 3),\t/* 16 */\r\n  /* 0001 */ PTR(60, 2),\r\n  /* 0010 */ PTR(64, 3),\r\n  /* 0011 */ PTR(72, 1),\r\n  /* 0100 */ PTR(74, 2),\r\n  /* 0101 */ PTR(78, 2),\r\n  /* 0110 */ PTR(82, 2),\r\n  /* 0111 */ V(1, 7, 4),\r\n  /* 1000 */ V(7, 1, 4),\r\n  /* 1001 */ PTR(86, 1),\r\n  /* 1010 */ PTR(88, 2),\r\n  /* 1011 */ PTR(92, 2),\r\n  /* 1100 */ V(1, 6, 4),\r\n  /* 1101 */ V(6, 1, 4),\r\n  /* 1110 */ V(6, 0, 4),\r\n  /* 1111 */ PTR(96, 1),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ PTR(98, 1),\t/* 32 */\r\n  /* 0001 */ PTR(100, 1),\r\n  /* 0010 */ V(1, 4, 4),\r\n  /* 0011 */ V(4, 1, 4),\r\n  /* 0100 */ V(4, 0, 4),\r\n  /* 0101 */ V(2, 3, 4),\r\n  /* 0110 */ V(3, 2, 4),\r\n  /* 0111 */ V(0, 3, 4),\r\n  /* 1000 */ V(1, 3, 3),\r\n  /* 1001 */ V(1, 3, 3),\r\n  /* 1010 */ V(3, 1, 3),\r\n  /* 1011 */ V(3, 1, 3),\r\n  /* 1100 */ V(3, 0, 3),\r\n  /* 1101 */ V(3, 0, 3),\r\n  /* 1110 */ V(2, 2, 3),\r\n  /* 1111 */ V(2, 2, 3),\r\n\r\n  /* 0010 ... */\r\n  /* 00   */ V(1, 2, 2),\t/* 48 */\r\n  /* 01   */ V(2, 1, 2),\r\n  /* 10   */ V(0, 2, 2),\r\n  /* 11   */ V(2, 0, 2),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 000  */ V(7, 7, 3),\t/* 52 */\r\n  /* 001  */ V(6, 7, 3),\r\n  /* 010  */ V(7, 6, 3),\r\n  /* 011  */ V(5, 7, 3),\r\n  /* 100  */ V(7, 5, 3),\r\n  /* 101  */ V(6, 6, 3),\r\n  /* 110  */ V(4, 7, 2),\r\n  /* 111  */ V(4, 7, 2),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 00   */ V(7, 4, 2),\t/* 60 */\r\n  /* 01   */ V(5, 6, 2),\r\n  /* 10   */ V(6, 5, 2),\r\n  /* 11   */ V(3, 7, 2),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 000  */ V(7, 3, 2),\t/* 64 */\r\n  /* 001  */ V(7, 3, 2),\r\n  /* 010  */ V(4, 6, 2),\r\n  /* 011  */ V(4, 6, 2),\r\n  /* 100  */ V(5, 5, 3),\r\n  /* 101  */ V(5, 4, 3),\r\n  /* 110  */ V(6, 3, 2),\r\n  /* 111  */ V(6, 3, 2),\r\n\r\n  /* 0000 0011 ... */\r\n  /* 0    */ V(2, 7, 1),\t/* 72 */\r\n  /* 1    */ V(7, 2, 1),\r\n\r\n  /* 0000 0100 ... */\r\n  /* 00   */ V(6, 4, 2),\t/* 74 */\r\n  /* 01   */ V(0, 7, 2),\r\n  /* 10   */ V(7, 0, 1),\r\n  /* 11   */ V(7, 0, 1),\r\n\r\n  /* 0000 0101 ... */\r\n  /* 00   */ V(6, 2, 1),\t/* 78 */\r\n  /* 01   */ V(6, 2, 1),\r\n  /* 10   */ V(4, 5, 2),\r\n  /* 11   */ V(3, 5, 2),\r\n\r\n  /* 0000 0110 ... */\r\n  /* 00   */ V(0, 6, 1),\t/* 82 */\r\n  /* 01   */ V(0, 6, 1),\r\n  /* 10   */ V(5, 3, 2),\r\n  /* 11   */ V(4, 4, 2),\r\n\r\n  /* 0000 1001 ... */\r\n  /* 0    */ V(3, 6, 1),\t/* 86 */\r\n  /* 1    */ V(2, 6, 1),\r\n\r\n  /* 0000 1010 ... */\r\n  /* 00   */ V(2, 5, 2),\t/* 88 */\r\n  /* 01   */ V(5, 2, 2),\r\n  /* 10   */ V(1, 5, 1),\r\n  /* 11   */ V(1, 5, 1),\r\n\r\n  /* 0000 1011 ... */\r\n  /* 00   */ V(5, 1, 1),\t/* 92 */\r\n  /* 01   */ V(5, 1, 1),\r\n  /* 10   */ V(3, 4, 2),\r\n  /* 11   */ V(4, 3, 2),\r\n\r\n  /* 0000 1111 ... */\r\n  /* 0    */ V(0, 5, 1),\t/* 96 */\r\n  /* 1    */ V(5, 0, 1),\r\n\r\n  /* 0001 0000 ... */\r\n  /* 0    */ V(2, 4, 1),\t/* 98 */\r\n  /* 1    */ V(4, 2, 1),\r\n\r\n  /* 0001 0001 ... */\r\n  /* 0    */ V(3, 3, 1),\t/* 100 */\r\n  /* 1    */ V(0, 4, 1)\r\n];\r\n\r\nvar hufftab11 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 4),\r\n  /* 0011 */ PTR(64, 3),\r\n  /* 0100 */ V(1, 2, 4),\r\n  /* 0101 */ PTR(72, 1),\r\n  /* 0110 */ V(1, 1, 3),\r\n  /* 0111 */ V(1, 1, 3),\r\n  /* 1000 */ V(0, 1, 3),\r\n  /* 1001 */ V(0, 1, 3),\r\n  /* 1010 */ V(1, 0, 3),\r\n  /* 1011 */ V(1, 0, 3),\r\n  /* 1100 */ V(0, 0, 2),\r\n  /* 1101 */ V(0, 0, 2),\r\n  /* 1110 */ V(0, 0, 2),\r\n  /* 1111 */ V(0, 0, 2),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(74, 2),\t/* 16 */\r\n  /* 0001 */ PTR(78, 3),\r\n  /* 0010 */ PTR(86, 2),\r\n  /* 0011 */ PTR(90, 1),\r\n  /* 0100 */ PTR(92, 2),\r\n  /* 0101 */ V(2, 7, 4),\r\n  /* 0110 */ V(7, 2, 4),\r\n  /* 0111 */ PTR(96, 1),\r\n  /* 1000 */ V(7, 1, 3),\r\n  /* 1001 */ V(7, 1, 3),\r\n  /* 1010 */ V(1, 7, 4),\r\n  /* 1011 */ V(7, 0, 4),\r\n  /* 1100 */ V(3, 6, 4),\r\n  /* 1101 */ V(6, 3, 4),\r\n  /* 1110 */ V(6, 0, 4),\r\n  /* 1111 */ PTR(98, 1),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ PTR(100, 1),\t/* 32 */\r\n  /* 0001 */ V(1, 5, 4),\r\n  /* 0010 */ V(6, 2, 3),\r\n  /* 0011 */ V(6, 2, 3),\r\n  /* 0100 */ V(2, 6, 4),\r\n  /* 0101 */ V(0, 6, 4),\r\n  /* 0110 */ V(1, 6, 3),\r\n  /* 0111 */ V(1, 6, 3),\r\n  /* 1000 */ V(6, 1, 3),\r\n  /* 1001 */ V(6, 1, 3),\r\n  /* 1010 */ V(5, 1, 4),\r\n  /* 1011 */ V(3, 4, 4),\r\n  /* 1100 */ V(5, 0, 4),\r\n  /* 1101 */ PTR(102, 1),\r\n  /* 1110 */ V(2, 4, 4),\r\n  /* 1111 */ V(4, 2, 4),\r\n\r\n  /* 0010 ... */\r\n  /* 0000 */ V(1, 4, 4),\t/* 48 */\r\n  /* 0001 */ V(4, 1, 4),\r\n  /* 0010 */ V(0, 4, 4),\r\n  /* 0011 */ V(4, 0, 4),\r\n  /* 0100 */ V(2, 3, 3),\r\n  /* 0101 */ V(2, 3, 3),\r\n  /* 0110 */ V(3, 2, 3),\r\n  /* 0111 */ V(3, 2, 3),\r\n  /* 1000 */ V(1, 3, 2),\r\n  /* 1001 */ V(1, 3, 2),\r\n  /* 1010 */ V(1, 3, 2),\r\n  /* 1011 */ V(1, 3, 2),\r\n  /* 1100 */ V(3, 1, 2),\r\n  /* 1101 */ V(3, 1, 2),\r\n  /* 1110 */ V(3, 1, 2),\r\n  /* 1111 */ V(3, 1, 2),\r\n\r\n  /* 0011 ... */\r\n  /* 000  */ V(0, 3, 3),\t/* 64 */\r\n  /* 001  */ V(3, 0, 3),\r\n  /* 010  */ V(2, 2, 2),\r\n  /* 011  */ V(2, 2, 2),\r\n  /* 100  */ V(2, 1, 1),\r\n  /* 101  */ V(2, 1, 1),\r\n  /* 110  */ V(2, 1, 1),\r\n  /* 111  */ V(2, 1, 1),\r\n\r\n  /* 0101 ... */\r\n  /* 0    */ V(0, 2, 1),\t/* 72 */\r\n  /* 1    */ V(2, 0, 1),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 00   */ V(7, 7, 2),\t/* 74 */\r\n  /* 01   */ V(6, 7, 2),\r\n  /* 10   */ V(7, 6, 2),\r\n  /* 11   */ V(7, 5, 2),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 000  */ V(6, 6, 2),\t/* 78 */\r\n  /* 001  */ V(6, 6, 2),\r\n  /* 010  */ V(4, 7, 2),\r\n  /* 011  */ V(4, 7, 2),\r\n  /* 100  */ V(7, 4, 2),\r\n  /* 101  */ V(7, 4, 2),\r\n  /* 110  */ V(5, 7, 3),\r\n  /* 111  */ V(5, 5, 3),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 00   */ V(5, 6, 2),\t/* 86 */\r\n  /* 01   */ V(6, 5, 2),\r\n  /* 10   */ V(3, 7, 1),\r\n  /* 11   */ V(3, 7, 1),\r\n\r\n  /* 0000 0011 ... */\r\n  /* 0    */ V(7, 3, 1),\t/* 90 */\r\n  /* 1    */ V(4, 6, 1),\r\n\r\n  /* 0000 0100 ... */\r\n  /* 00   */ V(4, 5, 2),\t/* 92 */\r\n  /* 01   */ V(5, 4, 2),\r\n  /* 10   */ V(3, 5, 2),\r\n  /* 11   */ V(5, 3, 2),\r\n\r\n  /* 0000 0111 ... */\r\n  /* 0    */ V(6, 4, 1),\t/* 96 */\r\n  /* 1    */ V(0, 7, 1),\r\n\r\n  /* 0000 1111 ... */\r\n  /* 0    */ V(4, 4, 1),\t/* 98 */\r\n  /* 1    */ V(2, 5, 1),\r\n\r\n  /* 0001 0000 ... */\r\n  /* 0    */ V(5, 2, 1),\t/* 100 */\r\n  /* 1    */ V(0, 5, 1),\r\n\r\n  /* 0001 1101 ... */\r\n  /* 0    */ V(4, 3, 1),\t/* 102 */\r\n  /* 1    */ V(3, 3, 1)\r\n];\r\n\r\nvar hufftab12 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 4),\r\n  /* 0011 */ PTR(64, 2),\r\n  /* 0100 */ PTR(68, 3),\r\n  /* 0101 */ PTR(76, 1),\r\n  /* 0110 */ V(1, 2, 4),\r\n  /* 0111 */ V(2, 1, 4),\r\n  /* 1000 */ PTR(78, 1),\r\n  /* 1001 */ V(0, 0, 4),\r\n  /* 1010 */ V(1, 1, 3),\r\n  /* 1011 */ V(1, 1, 3),\r\n  /* 1100 */ V(0, 1, 3),\r\n  /* 1101 */ V(0, 1, 3),\r\n  /* 1110 */ V(1, 0, 3),\r\n  /* 1111 */ V(1, 0, 3),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(80, 2),\t/* 16 */\r\n  /* 0001 */ PTR(84, 1),\r\n  /* 0010 */ PTR(86, 1),\r\n  /* 0011 */ PTR(88, 1),\r\n  /* 0100 */ V(5, 6, 4),\r\n  /* 0101 */ V(3, 7, 4),\r\n  /* 0110 */ PTR(90, 1),\r\n  /* 0111 */ V(2, 7, 4),\r\n  /* 1000 */ V(7, 2, 4),\r\n  /* 1001 */ V(4, 6, 4),\r\n  /* 1010 */ V(6, 4, 4),\r\n  /* 1011 */ V(1, 7, 4),\r\n  /* 1100 */ V(7, 1, 4),\r\n  /* 1101 */ PTR(92, 1),\r\n  /* 1110 */ V(3, 6, 4),\r\n  /* 1111 */ V(6, 3, 4),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ V(4, 5, 4),\t/* 32 */\r\n  /* 0001 */ V(5, 4, 4),\r\n  /* 0010 */ V(4, 4, 4),\r\n  /* 0011 */ PTR(94, 1),\r\n  /* 0100 */ V(2, 6, 3),\r\n  /* 0101 */ V(2, 6, 3),\r\n  /* 0110 */ V(6, 2, 3),\r\n  /* 0111 */ V(6, 2, 3),\r\n  /* 1000 */ V(6, 1, 3),\r\n  /* 1001 */ V(6, 1, 3),\r\n  /* 1010 */ V(1, 6, 4),\r\n  /* 1011 */ V(6, 0, 4),\r\n  /* 1100 */ V(3, 5, 4),\r\n  /* 1101 */ V(5, 3, 4),\r\n  /* 1110 */ V(2, 5, 4),\r\n  /* 1111 */ V(5, 2, 4),\r\n\r\n  /* 0010 ... */\r\n  /* 0000 */ V(1, 5, 3),\t/* 48 */\r\n  /* 0001 */ V(1, 5, 3),\r\n  /* 0010 */ V(5, 1, 3),\r\n  /* 0011 */ V(5, 1, 3),\r\n  /* 0100 */ V(3, 4, 3),\r\n  /* 0101 */ V(3, 4, 3),\r\n  /* 0110 */ V(4, 3, 3),\r\n  /* 0111 */ V(4, 3, 3),\r\n  /* 1000 */ V(5, 0, 4),\r\n  /* 1001 */ V(0, 4, 4),\r\n  /* 1010 */ V(2, 4, 3),\r\n  /* 1011 */ V(2, 4, 3),\r\n  /* 1100 */ V(4, 2, 3),\r\n  /* 1101 */ V(4, 2, 3),\r\n  /* 1110 */ V(1, 4, 3),\r\n  /* 1111 */ V(1, 4, 3),\r\n\r\n  /* 0011 ... */\r\n  /* 00   */ V(3, 3, 2),\t/* 64 */\r\n  /* 01   */ V(4, 1, 2),\r\n  /* 10   */ V(2, 3, 2),\r\n  /* 11   */ V(3, 2, 2),\r\n\r\n  /* 0100 ... */\r\n  /* 000  */ V(4, 0, 3),\t/* 68 */\r\n  /* 001  */ V(0, 3, 3),\r\n  /* 010  */ V(3, 0, 2),\r\n  /* 011  */ V(3, 0, 2),\r\n  /* 100  */ V(1, 3, 1),\r\n  /* 101  */ V(1, 3, 1),\r\n  /* 110  */ V(1, 3, 1),\r\n  /* 111  */ V(1, 3, 1),\r\n\r\n  /* 0101 ... */\r\n  /* 0    */ V(3, 1, 1),\t/* 76 */\r\n  /* 1    */ V(2, 2, 1),\r\n\r\n  /* 1000 ... */\r\n  /* 0    */ V(0, 2, 1),\t/* 78 */\r\n  /* 1    */ V(2, 0, 1),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 00   */ V(7, 7, 2),\t/* 80 */\r\n  /* 01   */ V(6, 7, 2),\r\n  /* 10   */ V(7, 6, 1),\r\n  /* 11   */ V(7, 6, 1),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 0    */ V(5, 7, 1),\t/* 84 */\r\n  /* 1    */ V(7, 5, 1),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 0    */ V(6, 6, 1),\t/* 86 */\r\n  /* 1    */ V(4, 7, 1),\r\n\r\n  /* 0000 0011 ... */\r\n  /* 0    */ V(7, 4, 1),\t/* 88 */\r\n  /* 1    */ V(6, 5, 1),\r\n\r\n  /* 0000 0110 ... */\r\n  /* 0    */ V(7, 3, 1),\t/* 90 */\r\n  /* 1    */ V(5, 5, 1),\r\n\r\n  /* 0000 1101 ... */\r\n  /* 0    */ V(0, 7, 1),\t/* 92 */\r\n  /* 1    */ V(7, 0, 1),\r\n\r\n  /* 0001 0011 ... */\r\n  /* 0    */ V(0, 6, 1),\t/* 94 */\r\n  /* 1    */ V(0, 5, 1)\r\n];\r\n\r\nvar hufftab13 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 4),\r\n  /* 0011 */ PTR(64, 2),\r\n  /* 0100 */ V(1, 1, 4),\r\n  /* 0101 */ V(0, 1, 4),\r\n  /* 0110 */ V(1, 0, 3),\r\n  /* 0111 */ V(1, 0, 3),\r\n  /* 1000 */ V(0, 0, 1),\r\n  /* 1001 */ V(0, 0, 1),\r\n  /* 1010 */ V(0, 0, 1),\r\n  /* 1011 */ V(0, 0, 1),\r\n  /* 1100 */ V(0, 0, 1),\r\n  /* 1101 */ V(0, 0, 1),\r\n  /* 1110 */ V(0, 0, 1),\r\n  /* 1111 */ V(0, 0, 1),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(68, 4),\t/* 16 */\r\n  /* 0001 */ PTR(84, 4),\r\n  /* 0010 */ PTR(100, 4),\r\n  /* 0011 */ PTR(116, 4),\r\n  /* 0100 */ PTR(132, 4),\r\n  /* 0101 */ PTR(148, 4),\r\n  /* 0110 */ PTR(164, 3),\r\n  /* 0111 */ PTR(172, 3),\r\n  /* 1000 */ PTR(180, 3),\r\n  /* 1001 */ PTR(188, 3),\r\n  /* 1010 */ PTR(196, 3),\r\n  /* 1011 */ PTR(204, 3),\r\n  /* 1100 */ PTR(212, 1),\r\n  /* 1101 */ PTR(214, 2),\r\n  /* 1110 */ PTR(218, 3),\r\n  /* 1111 */ PTR(226, 1),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ PTR(228, 2),\t/* 32 */\r\n  /* 0001 */ PTR(232, 2),\r\n  /* 0010 */ PTR(236, 2),\r\n  /* 0011 */ PTR(240, 2),\r\n  /* 0100 */ V(8, 1, 4),\r\n  /* 0101 */ PTR(244, 1),\r\n  /* 0110 */ PTR(246, 1),\r\n  /* 0111 */ PTR(248, 1),\r\n  /* 1000 */ PTR(250, 2),\r\n  /* 1001 */ PTR(254, 1),\r\n  /* 1010 */ V(1, 5, 4),\r\n  /* 1011 */ V(5, 1, 4),\r\n  /* 1100 */ PTR(256, 1),\r\n  /* 1101 */ PTR(258, 1),\r\n  /* 1110 */ PTR(260, 1),\r\n  /* 1111 */ V(1, 4, 4),\r\n\r\n  /* 0010 ... */\r\n  /* 0000 */ V(4, 1, 3),\t/* 48 */\r\n  /* 0001 */ V(4, 1, 3),\r\n  /* 0010 */ V(0, 4, 4),\r\n  /* 0011 */ V(4, 0, 4),\r\n  /* 0100 */ V(2, 3, 4),\r\n  /* 0101 */ V(3, 2, 4),\r\n  /* 0110 */ V(1, 3, 3),\r\n  /* 0111 */ V(1, 3, 3),\r\n  /* 1000 */ V(3, 1, 3),\r\n  /* 1001 */ V(3, 1, 3),\r\n  /* 1010 */ V(0, 3, 3),\r\n  /* 1011 */ V(0, 3, 3),\r\n  /* 1100 */ V(3, 0, 3),\r\n  /* 1101 */ V(3, 0, 3),\r\n  /* 1110 */ V(2, 2, 3),\r\n  /* 1111 */ V(2, 2, 3),\r\n\r\n  /* 0011 ... */\r\n  /* 00   */ V(1, 2, 2),\t/* 64 */\r\n  /* 01   */ V(2, 1, 2),\r\n  /* 10   */ V(0, 2, 2),\r\n  /* 11   */ V(2, 0, 2),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 0000 */ PTR(262, 4),\t/* 68 */\r\n  /* 0001 */ PTR(278, 4),\r\n  /* 0010 */ PTR(294, 4),\r\n  /* 0011 */ PTR(310, 3),\r\n  /* 0100 */ PTR(318, 2),\r\n  /* 0101 */ PTR(322, 2),\r\n  /* 0110 */ PTR(326, 3),\r\n  /* 0111 */ PTR(334, 2),\r\n  /* 1000 */ PTR(338, 1),\r\n  /* 1001 */ PTR(340, 2),\r\n  /* 1010 */ PTR(344, 2),\r\n  /* 1011 */ PTR(348, 2),\r\n  /* 1100 */ PTR(352, 2),\r\n  /* 1101 */ PTR(356, 2),\r\n  /* 1110 */ V(1, 15, 4),\r\n  /* 1111 */ V(15, 1, 4),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 0000 */ V(15, 0, 4),\t/* 84 */\r\n  /* 0001 */ PTR(360, 1),\r\n  /* 0010 */ PTR(362, 1),\r\n  /* 0011 */ PTR(364, 1),\r\n  /* 0100 */ V(14, 2, 4),\r\n  /* 0101 */ PTR(366, 1),\r\n  /* 0110 */ V(1, 14, 4),\r\n  /* 0111 */ V(14, 1, 4),\r\n  /* 1000 */ PTR(368, 1),\r\n  /* 1001 */ PTR(370, 1),\r\n  /* 1010 */ PTR(372, 1),\r\n  /* 1011 */ PTR(374, 1),\r\n  /* 1100 */ PTR(376, 1),\r\n  /* 1101 */ PTR(378, 1),\r\n  /* 1110 */ V(12, 6, 4),\r\n  /* 1111 */ V(3, 13, 4),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 0000 */ PTR(380, 1),\t/* 100 */\r\n  /* 0001 */ V(2, 13, 4),\r\n  /* 0010 */ V(13, 2, 4),\r\n  /* 0011 */ V(1, 13, 4),\r\n  /* 0100 */ V(11, 7, 4),\r\n  /* 0101 */ PTR(382, 1),\r\n  /* 0110 */ PTR(384, 1),\r\n  /* 0111 */ V(12, 3, 4),\r\n  /* 1000 */ PTR(386, 1),\r\n  /* 1001 */ V(4, 11, 4),\r\n  /* 1010 */ V(13, 1, 3),\r\n  /* 1011 */ V(13, 1, 3),\r\n  /* 1100 */ V(0, 13, 4),\r\n  /* 1101 */ V(13, 0, 4),\r\n  /* 1110 */ V(8, 10, 4),\r\n  /* 1111 */ V(10, 8, 4),\r\n\r\n  /* 0000 0011 ... */\r\n  /* 0000 */ V(4, 12, 4),\t/* 116 */\r\n  /* 0001 */ V(12, 4, 4),\r\n  /* 0010 */ V(6, 11, 4),\r\n  /* 0011 */ V(11, 6, 4),\r\n  /* 0100 */ V(3, 12, 3),\r\n  /* 0101 */ V(3, 12, 3),\r\n  /* 0110 */ V(2, 12, 3),\r\n  /* 0111 */ V(2, 12, 3),\r\n  /* 1000 */ V(12, 2, 3),\r\n  /* 1001 */ V(12, 2, 3),\r\n  /* 1010 */ V(5, 11, 3),\r\n  /* 1011 */ V(5, 11, 3),\r\n  /* 1100 */ V(11, 5, 4),\r\n  /* 1101 */ V(8, 9, 4),\r\n  /* 1110 */ V(1, 12, 3),\r\n  /* 1111 */ V(1, 12, 3),\r\n\r\n  /* 0000 0100 ... */\r\n  /* 0000 */ V(12, 1, 3),\t/* 132 */\r\n  /* 0001 */ V(12, 1, 3),\r\n  /* 0010 */ V(9, 8, 4),\r\n  /* 0011 */ V(0, 12, 4),\r\n  /* 0100 */ V(12, 0, 3),\r\n  /* 0101 */ V(12, 0, 3),\r\n  /* 0110 */ V(11, 4, 4),\r\n  /* 0111 */ V(6, 10, 4),\r\n  /* 1000 */ V(10, 6, 4),\r\n  /* 1001 */ V(7, 9, 4),\r\n  /* 1010 */ V(3, 11, 3),\r\n  /* 1011 */ V(3, 11, 3),\r\n  /* 1100 */ V(11, 3, 3),\r\n  /* 1101 */ V(11, 3, 3),\r\n  /* 1110 */ V(8, 8, 4),\r\n  /* 1111 */ V(5, 10, 4),\r\n\r\n  /* 0000 0101 ... */\r\n  /* 0000 */ V(2, 11, 3),\t/* 148 */\r\n  /* 0001 */ V(2, 11, 3),\r\n  /* 0010 */ V(10, 5, 4),\r\n  /* 0011 */ V(6, 9, 4),\r\n  /* 0100 */ V(10, 4, 3),\r\n  /* 0101 */ V(10, 4, 3),\r\n  /* 0110 */ V(7, 8, 4),\r\n  /* 0111 */ V(8, 7, 4),\r\n  /* 1000 */ V(9, 4, 3),\r\n  /* 1001 */ V(9, 4, 3),\r\n  /* 1010 */ V(7, 7, 4),\r\n  /* 1011 */ V(7, 6, 4),\r\n  /* 1100 */ V(11, 2, 2),\r\n  /* 1101 */ V(11, 2, 2),\r\n  /* 1110 */ V(11, 2, 2),\r\n  /* 1111 */ V(11, 2, 2),\r\n\r\n  /* 0000 0110 ... */\r\n  /* 000  */ V(1, 11, 2),\t/* 164 */\r\n  /* 001  */ V(1, 11, 2),\r\n  /* 010  */ V(11, 1, 2),\r\n  /* 011  */ V(11, 1, 2),\r\n  /* 100  */ V(0, 11, 3),\r\n  /* 101  */ V(11, 0, 3),\r\n  /* 110  */ V(9, 6, 3),\r\n  /* 111  */ V(4, 10, 3),\r\n\r\n  /* 0000 0111 ... */\r\n  /* 000  */ V(3, 10, 3),\t/* 172 */\r\n  /* 001  */ V(10, 3, 3),\r\n  /* 010  */ V(5, 9, 3),\r\n  /* 011  */ V(9, 5, 3),\r\n  /* 100  */ V(2, 10, 2),\r\n  /* 101  */ V(2, 10, 2),\r\n  /* 110  */ V(10, 2, 2),\r\n  /* 111  */ V(10, 2, 2),\r\n\r\n  /* 0000 1000 ... */\r\n  /* 000  */ V(1, 10, 2),\t/* 180 */\r\n  /* 001  */ V(1, 10, 2),\r\n  /* 010  */ V(10, 1, 2),\r\n  /* 011  */ V(10, 1, 2),\r\n  /* 100  */ V(0, 10, 3),\r\n  /* 101  */ V(6, 8, 3),\r\n  /* 110  */ V(10, 0, 2),\r\n  /* 111  */ V(10, 0, 2),\r\n\r\n  /* 0000 1001 ... */\r\n  /* 000  */ V(8, 6, 3),\t/* 188 */\r\n  /* 001  */ V(4, 9, 3),\r\n  /* 010  */ V(9, 3, 2),\r\n  /* 011  */ V(9, 3, 2),\r\n  /* 100  */ V(3, 9, 3),\r\n  /* 101  */ V(5, 8, 3),\r\n  /* 110  */ V(8, 5, 3),\r\n  /* 111  */ V(6, 7, 3),\r\n\r\n  /* 0000 1010 ... */\r\n  /* 000  */ V(2, 9, 2),\t/* 196 */\r\n  /* 001  */ V(2, 9, 2),\r\n  /* 010  */ V(9, 2, 2),\r\n  /* 011  */ V(9, 2, 2),\r\n  /* 100  */ V(5, 7, 3),\r\n  /* 101  */ V(7, 5, 3),\r\n  /* 110  */ V(3, 8, 2),\r\n  /* 111  */ V(3, 8, 2),\r\n\r\n  /* 0000 1011 ... */\r\n  /* 000  */ V(8, 3, 2),\t/* 204 */\r\n  /* 001  */ V(8, 3, 2),\r\n  /* 010  */ V(6, 6, 3),\r\n  /* 011  */ V(4, 7, 3),\r\n  /* 100  */ V(7, 4, 3),\r\n  /* 101  */ V(5, 6, 3),\r\n  /* 110  */ V(6, 5, 3),\r\n  /* 111  */ V(7, 3, 3),\r\n\r\n  /* 0000 1100 ... */\r\n  /* 0    */ V(1, 9, 1),\t/* 212 */\r\n  /* 1    */ V(9, 1, 1),\r\n\r\n  /* 0000 1101 ... */\r\n  /* 00   */ V(0, 9, 2),\t/* 214 */\r\n  /* 01   */ V(9, 0, 2),\r\n  /* 10   */ V(4, 8, 2),\r\n  /* 11   */ V(8, 4, 2),\r\n\r\n  /* 0000 1110 ... */\r\n  /* 000  */ V(7, 2, 2),\t/* 218 */\r\n  /* 001  */ V(7, 2, 2),\r\n  /* 010  */ V(4, 6, 3),\r\n  /* 011  */ V(6, 4, 3),\r\n  /* 100  */ V(2, 8, 1),\r\n  /* 101  */ V(2, 8, 1),\r\n  /* 110  */ V(2, 8, 1),\r\n  /* 111  */ V(2, 8, 1),\r\n\r\n  /* 0000 1111 ... */\r\n  /* 0    */ V(8, 2, 1),\t/* 226 */\r\n  /* 1    */ V(1, 8, 1),\r\n\r\n  /* 0001 0000 ... */\r\n  /* 00   */ V(3, 7, 2),\t/* 228 */\r\n  /* 01   */ V(2, 7, 2),\r\n  /* 10   */ V(1, 7, 1),\r\n  /* 11   */ V(1, 7, 1),\r\n\r\n  /* 0001 0001 ... */\r\n  /* 00   */ V(7, 1, 1),\t/* 232 */\r\n  /* 01   */ V(7, 1, 1),\r\n  /* 10   */ V(5, 5, 2),\r\n  /* 11   */ V(0, 7, 2),\r\n\r\n  /* 0001 0010 ... */\r\n  /* 00   */ V(7, 0, 2),\t/* 236 */\r\n  /* 01   */ V(3, 6, 2),\r\n  /* 10   */ V(6, 3, 2),\r\n  /* 11   */ V(4, 5, 2),\r\n\r\n  /* 0001 0011 ... */\r\n  /* 00   */ V(5, 4, 2),\t/* 240 */\r\n  /* 01   */ V(2, 6, 2),\r\n  /* 10   */ V(6, 2, 2),\r\n  /* 11   */ V(3, 5, 2),\r\n\r\n  /* 0001 0101 ... */\r\n  /* 0    */ V(0, 8, 1),\t/* 244 */\r\n  /* 1    */ V(8, 0, 1),\r\n\r\n  /* 0001 0110 ... */\r\n  /* 0    */ V(1, 6, 1),\t/* 246 */\r\n  /* 1    */ V(6, 1, 1),\r\n\r\n  /* 0001 0111 ... */\r\n  /* 0    */ V(0, 6, 1),\t/* 248 */\r\n  /* 1    */ V(6, 0, 1),\r\n\r\n  /* 0001 1000 ... */\r\n  /* 00   */ V(5, 3, 2),\t/* 250 */\r\n  /* 01   */ V(4, 4, 2),\r\n  /* 10   */ V(2, 5, 1),\r\n  /* 11   */ V(2, 5, 1),\r\n\r\n  /* 0001 1001 ... */\r\n  /* 0    */ V(5, 2, 1),\t/* 254 */\r\n  /* 1    */ V(0, 5, 1),\r\n\r\n  /* 0001 1100 ... */\r\n  /* 0    */ V(3, 4, 1),\t/* 256 */\r\n  /* 1    */ V(4, 3, 1),\r\n\r\n  /* 0001 1101 ... */\r\n  /* 0    */ V(5, 0, 1),\t/* 258 */\r\n  /* 1    */ V(2, 4, 1),\r\n\r\n  /* 0001 1110 ... */\r\n  /* 0    */ V(4, 2, 1),\t/* 260 */\r\n  /* 1    */ V(3, 3, 1),\r\n\r\n  /* 0000 0000 0000 ... */\r\n  /* 0000 */ PTR(388, 3),\t/* 262 */\r\n  /* 0001 */ V(15, 15, 4),\r\n  /* 0010 */ V(14, 15, 4),\r\n  /* 0011 */ V(13, 15, 4),\r\n  /* 0100 */ V(14, 14, 4),\r\n  /* 0101 */ V(12, 15, 4),\r\n  /* 0110 */ V(13, 14, 4),\r\n  /* 0111 */ V(11, 15, 4),\r\n  /* 1000 */ V(15, 11, 4),\r\n  /* 1001 */ V(12, 14, 4),\r\n  /* 1010 */ V(13, 12, 4),\r\n  /* 1011 */ PTR(396, 1),\r\n  /* 1100 */ V(14, 12, 3),\r\n  /* 1101 */ V(14, 12, 3),\r\n  /* 1110 */ V(13, 13, 3),\r\n  /* 1111 */ V(13, 13, 3),\r\n\r\n  /* 0000 0000 0001 ... */\r\n  /* 0000 */ V(15, 10, 4),\t/* 278 */\r\n  /* 0001 */ V(12, 13, 4),\r\n  /* 0010 */ V(11, 14, 3),\r\n  /* 0011 */ V(11, 14, 3),\r\n  /* 0100 */ V(14, 11, 3),\r\n  /* 0101 */ V(14, 11, 3),\r\n  /* 0110 */ V(9, 15, 3),\r\n  /* 0111 */ V(9, 15, 3),\r\n  /* 1000 */ V(15, 9, 3),\r\n  /* 1001 */ V(15, 9, 3),\r\n  /* 1010 */ V(14, 10, 3),\r\n  /* 1011 */ V(14, 10, 3),\r\n  /* 1100 */ V(11, 13, 3),\r\n  /* 1101 */ V(11, 13, 3),\r\n  /* 1110 */ V(13, 11, 3),\r\n  /* 1111 */ V(13, 11, 3),\r\n\r\n  /* 0000 0000 0010 ... */\r\n  /* 0000 */ V(8, 15, 3),\t/* 294 */\r\n  /* 0001 */ V(8, 15, 3),\r\n  /* 0010 */ V(15, 8, 3),\r\n  /* 0011 */ V(15, 8, 3),\r\n  /* 0100 */ V(12, 12, 3),\r\n  /* 0101 */ V(12, 12, 3),\r\n  /* 0110 */ V(10, 14, 4),\r\n  /* 0111 */ V(9, 14, 4),\r\n  /* 1000 */ V(8, 14, 3),\r\n  /* 1001 */ V(8, 14, 3),\r\n  /* 1010 */ V(7, 15, 4),\r\n  /* 1011 */ V(7, 14, 4),\r\n  /* 1100 */ V(15, 7, 2),\r\n  /* 1101 */ V(15, 7, 2),\r\n  /* 1110 */ V(15, 7, 2),\r\n  /* 1111 */ V(15, 7, 2),\r\n\r\n  /* 0000 0000 0011 ... */\r\n  /* 000  */ V(13, 10, 2),\t/* 310 */\r\n  /* 001  */ V(13, 10, 2),\r\n  /* 010  */ V(10, 13, 3),\r\n  /* 011  */ V(11, 12, 3),\r\n  /* 100  */ V(12, 11, 3),\r\n  /* 101  */ V(15, 6, 3),\r\n  /* 110  */ V(6, 15, 2),\r\n  /* 111  */ V(6, 15, 2),\r\n\r\n  /* 0000 0000 0100 ... */\r\n  /* 00   */ V(14, 8, 2),\t/* 318 */\r\n  /* 01   */ V(5, 15, 2),\r\n  /* 10   */ V(9, 13, 2),\r\n  /* 11   */ V(13, 9, 2),\r\n\r\n  /* 0000 0000 0101 ... */\r\n  /* 00   */ V(15, 5, 2),\t/* 322 */\r\n  /* 01   */ V(14, 7, 2),\r\n  /* 10   */ V(10, 12, 2),\r\n  /* 11   */ V(11, 11, 2),\r\n\r\n  /* 0000 0000 0110 ... */\r\n  /* 000  */ V(4, 15, 2),\t/* 326 */\r\n  /* 001  */ V(4, 15, 2),\r\n  /* 010  */ V(15, 4, 2),\r\n  /* 011  */ V(15, 4, 2),\r\n  /* 100  */ V(12, 10, 3),\r\n  /* 101  */ V(14, 6, 3),\r\n  /* 110  */ V(15, 3, 2),\r\n  /* 111  */ V(15, 3, 2),\r\n\r\n  /* 0000 0000 0111 ... */\r\n  /* 00   */ V(3, 15, 1),\t/* 334 */\r\n  /* 01   */ V(3, 15, 1),\r\n  /* 10   */ V(8, 13, 2),\r\n  /* 11   */ V(13, 8, 2),\r\n\r\n  /* 0000 0000 1000 ... */\r\n  /* 0    */ V(2, 15, 1),\t/* 338 */\r\n  /* 1    */ V(15, 2, 1),\r\n\r\n  /* 0000 0000 1001 ... */\r\n  /* 00   */ V(6, 14, 2),\t/* 340 */\r\n  /* 01   */ V(9, 12, 2),\r\n  /* 10   */ V(0, 15, 1),\r\n  /* 11   */ V(0, 15, 1),\r\n\r\n  /* 0000 0000 1010 ... */\r\n  /* 00   */ V(12, 9, 2),\t/* 344 */\r\n  /* 01   */ V(5, 14, 2),\r\n  /* 10   */ V(10, 11, 1),\r\n  /* 11   */ V(10, 11, 1),\r\n\r\n  /* 0000 0000 1011 ... */\r\n  /* 00   */ V(7, 13, 2),\t/* 348 */\r\n  /* 01   */ V(13, 7, 2),\r\n  /* 10   */ V(4, 14, 1),\r\n  /* 11   */ V(4, 14, 1),\r\n\r\n  /* 0000 0000 1100 ... */\r\n  /* 00   */ V(12, 8, 2),\t/* 352 */\r\n  /* 01   */ V(13, 6, 2),\r\n  /* 10   */ V(3, 14, 1),\r\n  /* 11   */ V(3, 14, 1),\r\n\r\n  /* 0000 0000 1101 ... */\r\n  /* 00   */ V(11, 9, 1),\t/* 356 */\r\n  /* 01   */ V(11, 9, 1),\r\n  /* 10   */ V(9, 11, 2),\r\n  /* 11   */ V(10, 10, 2),\r\n\r\n  /* 0000 0001 0001 ... */\r\n  /* 0    */ V(11, 10, 1),\t/* 360 */\r\n  /* 1    */ V(14, 5, 1),\r\n\r\n  /* 0000 0001 0010 ... */\r\n  /* 0    */ V(14, 4, 1),\t/* 362 */\r\n  /* 1    */ V(8, 12, 1),\r\n\r\n  /* 0000 0001 0011 ... */\r\n  /* 0    */ V(6, 13, 1),\t/* 364 */\r\n  /* 1    */ V(14, 3, 1),\r\n\r\n  /* 0000 0001 0101 ... */\r\n  /* 0    */ V(2, 14, 1),\t/* 366 */\r\n  /* 1    */ V(0, 14, 1),\r\n\r\n  /* 0000 0001 1000 ... */\r\n  /* 0    */ V(14, 0, 1),\t/* 368 */\r\n  /* 1    */ V(5, 13, 1),\r\n\r\n  /* 0000 0001 1001 ... */\r\n  /* 0    */ V(13, 5, 1),\t/* 370 */\r\n  /* 1    */ V(7, 12, 1),\r\n\r\n  /* 0000 0001 1010 ... */\r\n  /* 0    */ V(12, 7, 1),\t/* 372 */\r\n  /* 1    */ V(4, 13, 1),\r\n\r\n  /* 0000 0001 1011 ... */\r\n  /* 0    */ V(8, 11, 1),\t/* 374 */\r\n  /* 1    */ V(11, 8, 1),\r\n\r\n  /* 0000 0001 1100 ... */\r\n  /* 0    */ V(13, 4, 1),\t/* 376 */\r\n  /* 1    */ V(9, 10, 1),\r\n\r\n  /* 0000 0001 1101 ... */\r\n  /* 0    */ V(10, 9, 1),\t/* 378 */\r\n  /* 1    */ V(6, 12, 1),\r\n\r\n  /* 0000 0010 0000 ... */\r\n  /* 0    */ V(13, 3, 1),\t/* 380 */\r\n  /* 1    */ V(7, 11, 1),\r\n\r\n  /* 0000 0010 0101 ... */\r\n  /* 0    */ V(5, 12, 1),\t/* 382 */\r\n  /* 1    */ V(12, 5, 1),\r\n\r\n  /* 0000 0010 0110 ... */\r\n  /* 0    */ V(9, 9, 1),\t/* 384 */\r\n  /* 1    */ V(7, 10, 1),\r\n\r\n  /* 0000 0010 1000 ... */\r\n  /* 0    */ V(10, 7, 1),\t/* 386 */\r\n  /* 1    */ V(9, 7, 1),\r\n\r\n  /* 0000 0000 0000 0000 ... */\r\n  /* 000  */ V(15, 14, 3),\t/* 388 */\r\n  /* 001  */ V(15, 12, 3),\r\n  /* 010  */ V(15, 13, 2),\r\n  /* 011  */ V(15, 13, 2),\r\n  /* 100  */ V(14, 13, 1),\r\n  /* 101  */ V(14, 13, 1),\r\n  /* 110  */ V(14, 13, 1),\r\n  /* 111  */ V(14, 13, 1),\r\n\r\n  /* 0000 0000 0000 1011 ... */\r\n  /* 0    */ V(10, 15, 1),\t/* 396 */\r\n  /* 1    */ V(14, 9, 1)\r\n];\r\n\r\nvar hufftab15 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 4),\r\n  /* 0011 */ PTR(64, 4),\r\n  /* 0100 */ PTR(80, 4),\r\n  /* 0101 */ PTR(96, 3),\r\n  /* 0110 */ PTR(104, 3),\r\n  /* 0111 */ PTR(112, 2),\r\n  /* 1000 */ PTR(116, 1),\r\n  /* 1001 */ PTR(118, 1),\r\n  /* 1010 */ V(1, 1, 3),\r\n  /* 1011 */ V(1, 1, 3),\r\n  /* 1100 */ V(0, 1, 4),\r\n  /* 1101 */ V(1, 0, 4),\r\n  /* 1110 */ V(0, 0, 3),\r\n  /* 1111 */ V(0, 0, 3),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(120, 4),\t/* 16 */\r\n  /* 0001 */ PTR(136, 4),\r\n  /* 0010 */ PTR(152, 4),\r\n  /* 0011 */ PTR(168, 4),\r\n  /* 0100 */ PTR(184, 4),\r\n  /* 0101 */ PTR(200, 3),\r\n  /* 0110 */ PTR(208, 3),\r\n  /* 0111 */ PTR(216, 4),\r\n  /* 1000 */ PTR(232, 3),\r\n  /* 1001 */ PTR(240, 3),\r\n  /* 1010 */ PTR(248, 3),\r\n  /* 1011 */ PTR(256, 3),\r\n  /* 1100 */ PTR(264, 2),\r\n  /* 1101 */ PTR(268, 3),\r\n  /* 1110 */ PTR(276, 3),\r\n  /* 1111 */ PTR(284, 2),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ PTR(288, 2),\t/* 32 */\r\n  /* 0001 */ PTR(292, 2),\r\n  /* 0010 */ PTR(296, 2),\r\n  /* 0011 */ PTR(300, 2),\r\n  /* 0100 */ PTR(304, 2),\r\n  /* 0101 */ PTR(308, 2),\r\n  /* 0110 */ PTR(312, 2),\r\n  /* 0111 */ PTR(316, 2),\r\n  /* 1000 */ PTR(320, 1),\r\n  /* 1001 */ PTR(322, 1),\r\n  /* 1010 */ PTR(324, 1),\r\n  /* 1011 */ PTR(326, 2),\r\n  /* 1100 */ PTR(330, 1),\r\n  /* 1101 */ PTR(332, 1),\r\n  /* 1110 */ PTR(334, 2),\r\n  /* 1111 */ PTR(338, 1),\r\n\r\n  /* 0010 ... */\r\n  /* 0000 */ PTR(340, 1),\t/* 48 */\r\n  /* 0001 */ PTR(342, 1),\r\n  /* 0010 */ V(9, 1, 4),\r\n  /* 0011 */ PTR(344, 1),\r\n  /* 0100 */ PTR(346, 1),\r\n  /* 0101 */ PTR(348, 1),\r\n  /* 0110 */ PTR(350, 1),\r\n  /* 0111 */ PTR(352, 1),\r\n  /* 1000 */ V(2, 8, 4),\r\n  /* 1001 */ V(8, 2, 4),\r\n  /* 1010 */ V(1, 8, 4),\r\n  /* 1011 */ V(8, 1, 4),\r\n  /* 1100 */ PTR(354, 1),\r\n  /* 1101 */ PTR(356, 1),\r\n  /* 1110 */ PTR(358, 1),\r\n  /* 1111 */ PTR(360, 1),\r\n\r\n  /* 0011 ... */\r\n  /* 0000 */ V(2, 7, 4),\t/* 64 */\r\n  /* 0001 */ V(7, 2, 4),\r\n  /* 0010 */ V(6, 4, 4),\r\n  /* 0011 */ V(1, 7, 4),\r\n  /* 0100 */ V(5, 5, 4),\r\n  /* 0101 */ V(7, 1, 4),\r\n  /* 0110 */ PTR(362, 1),\r\n  /* 0111 */ V(3, 6, 4),\r\n  /* 1000 */ V(6, 3, 4),\r\n  /* 1001 */ V(4, 5, 4),\r\n  /* 1010 */ V(5, 4, 4),\r\n  /* 1011 */ V(2, 6, 4),\r\n  /* 1100 */ V(6, 2, 4),\r\n  /* 1101 */ V(1, 6, 4),\r\n  /* 1110 */ PTR(364, 1),\r\n  /* 1111 */ V(3, 5, 4),\r\n\r\n  /* 0100 ... */\r\n  /* 0000 */ V(6, 1, 3),\t/* 80 */\r\n  /* 0001 */ V(6, 1, 3),\r\n  /* 0010 */ V(5, 3, 4),\r\n  /* 0011 */ V(4, 4, 4),\r\n  /* 0100 */ V(2, 5, 3),\r\n  /* 0101 */ V(2, 5, 3),\r\n  /* 0110 */ V(5, 2, 3),\r\n  /* 0111 */ V(5, 2, 3),\r\n  /* 1000 */ V(1, 5, 3),\r\n  /* 1001 */ V(1, 5, 3),\r\n  /* 1010 */ V(5, 1, 3),\r\n  /* 1011 */ V(5, 1, 3),\r\n  /* 1100 */ V(0, 5, 4),\r\n  /* 1101 */ V(5, 0, 4),\r\n  /* 1110 */ V(3, 4, 3),\r\n  /* 1111 */ V(3, 4, 3),\r\n\r\n  /* 0101 ... */\r\n  /* 000  */ V(4, 3, 3),\t/* 96 */\r\n  /* 001  */ V(2, 4, 3),\r\n  /* 010  */ V(4, 2, 3),\r\n  /* 011  */ V(3, 3, 3),\r\n  /* 100  */ V(4, 1, 2),\r\n  /* 101  */ V(4, 1, 2),\r\n  /* 110  */ V(1, 4, 3),\r\n  /* 111  */ V(0, 4, 3),\r\n\r\n  /* 0110 ... */\r\n  /* 000  */ V(2, 3, 2),\t/* 104 */\r\n  /* 001  */ V(2, 3, 2),\r\n  /* 010  */ V(3, 2, 2),\r\n  /* 011  */ V(3, 2, 2),\r\n  /* 100  */ V(4, 0, 3),\r\n  /* 101  */ V(0, 3, 3),\r\n  /* 110  */ V(1, 3, 2),\r\n  /* 111  */ V(1, 3, 2),\r\n\r\n  /* 0111 ... */\r\n  /* 00   */ V(3, 1, 2),\t/* 112 */\r\n  /* 01   */ V(3, 0, 2),\r\n  /* 10   */ V(2, 2, 1),\r\n  /* 11   */ V(2, 2, 1),\r\n\r\n  /* 1000 ... */\r\n  /* 0    */ V(1, 2, 1),\t/* 116 */\r\n  /* 1    */ V(2, 1, 1),\r\n\r\n  /* 1001 ... */\r\n  /* 0    */ V(0, 2, 1),\t/* 118 */\r\n  /* 1    */ V(2, 0, 1),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 0000 */ PTR(366, 1),\t/* 120 */\r\n  /* 0001 */ PTR(368, 1),\r\n  /* 0010 */ V(14, 14, 4),\r\n  /* 0011 */ PTR(370, 1),\r\n  /* 0100 */ PTR(372, 1),\r\n  /* 0101 */ PTR(374, 1),\r\n  /* 0110 */ V(15, 11, 4),\r\n  /* 0111 */ PTR(376, 1),\r\n  /* 1000 */ V(13, 13, 4),\r\n  /* 1001 */ V(10, 15, 4),\r\n  /* 1010 */ V(15, 10, 4),\r\n  /* 1011 */ V(11, 14, 4),\r\n  /* 1100 */ V(14, 11, 4),\r\n  /* 1101 */ V(12, 13, 4),\r\n  /* 1110 */ V(13, 12, 4),\r\n  /* 1111 */ V(9, 15, 4),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 0000 */ V(15, 9, 4),\t/* 136 */\r\n  /* 0001 */ V(14, 10, 4),\r\n  /* 0010 */ V(11, 13, 4),\r\n  /* 0011 */ V(13, 11, 4),\r\n  /* 0100 */ V(8, 15, 4),\r\n  /* 0101 */ V(15, 8, 4),\r\n  /* 0110 */ V(12, 12, 4),\r\n  /* 0111 */ V(9, 14, 4),\r\n  /* 1000 */ V(14, 9, 4),\r\n  /* 1001 */ V(7, 15, 4),\r\n  /* 1010 */ V(15, 7, 4),\r\n  /* 1011 */ V(10, 13, 4),\r\n  /* 1100 */ V(13, 10, 4),\r\n  /* 1101 */ V(11, 12, 4),\r\n  /* 1110 */ V(6, 15, 4),\r\n  /* 1111 */ PTR(378, 1),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 0000 */ V(12, 11, 3),\t/* 152 */\r\n  /* 0001 */ V(12, 11, 3),\r\n  /* 0010 */ V(15, 6, 3),\r\n  /* 0011 */ V(15, 6, 3),\r\n  /* 0100 */ V(8, 14, 4),\r\n  /* 0101 */ V(14, 8, 4),\r\n  /* 0110 */ V(5, 15, 4),\r\n  /* 0111 */ V(9, 13, 4),\r\n  /* 1000 */ V(15, 5, 3),\r\n  /* 1001 */ V(15, 5, 3),\r\n  /* 1010 */ V(7, 14, 3),\r\n  /* 1011 */ V(7, 14, 3),\r\n  /* 1100 */ V(14, 7, 3),\r\n  /* 1101 */ V(14, 7, 3),\r\n  /* 1110 */ V(10, 12, 3),\r\n  /* 1111 */ V(10, 12, 3),\r\n\r\n  /* 0000 0011 ... */\r\n  /* 0000 */ V(12, 10, 3),\t/* 168 */\r\n  /* 0001 */ V(12, 10, 3),\r\n  /* 0010 */ V(11, 11, 3),\r\n  /* 0011 */ V(11, 11, 3),\r\n  /* 0100 */ V(13, 9, 4),\r\n  /* 0101 */ V(8, 13, 4),\r\n  /* 0110 */ V(4, 15, 3),\r\n  /* 0111 */ V(4, 15, 3),\r\n  /* 1000 */ V(15, 4, 3),\r\n  /* 1001 */ V(15, 4, 3),\r\n  /* 1010 */ V(3, 15, 3),\r\n  /* 1011 */ V(3, 15, 3),\r\n  /* 1100 */ V(15, 3, 3),\r\n  /* 1101 */ V(15, 3, 3),\r\n  /* 1110 */ V(13, 8, 3),\r\n  /* 1111 */ V(13, 8, 3),\r\n\r\n  /* 0000 0100 ... */\r\n  /* 0000 */ V(14, 6, 3),\t/* 184 */\r\n  /* 0001 */ V(14, 6, 3),\r\n  /* 0010 */ V(2, 15, 3),\r\n  /* 0011 */ V(2, 15, 3),\r\n  /* 0100 */ V(15, 2, 3),\r\n  /* 0101 */ V(15, 2, 3),\r\n  /* 0110 */ V(6, 14, 4),\r\n  /* 0111 */ V(15, 0, 4),\r\n  /* 1000 */ V(1, 15, 3),\r\n  /* 1001 */ V(1, 15, 3),\r\n  /* 1010 */ V(15, 1, 3),\r\n  /* 1011 */ V(15, 1, 3),\r\n  /* 1100 */ V(9, 12, 3),\r\n  /* 1101 */ V(9, 12, 3),\r\n  /* 1110 */ V(12, 9, 3),\r\n  /* 1111 */ V(12, 9, 3),\r\n\r\n  /* 0000 0101 ... */\r\n  /* 000  */ V(5, 14, 3),\t/* 200 */\r\n  /* 001  */ V(10, 11, 3),\r\n  /* 010  */ V(11, 10, 3),\r\n  /* 011  */ V(14, 5, 3),\r\n  /* 100  */ V(7, 13, 3),\r\n  /* 101  */ V(13, 7, 3),\r\n  /* 110  */ V(4, 14, 3),\r\n  /* 111  */ V(14, 4, 3),\r\n\r\n  /* 0000 0110 ... */\r\n  /* 000  */ V(8, 12, 3),\t/* 208 */\r\n  /* 001  */ V(12, 8, 3),\r\n  /* 010  */ V(3, 14, 3),\r\n  /* 011  */ V(6, 13, 3),\r\n  /* 100  */ V(13, 6, 3),\r\n  /* 101  */ V(14, 3, 3),\r\n  /* 110  */ V(9, 11, 3),\r\n  /* 111  */ V(11, 9, 3),\r\n\r\n  /* 0000 0111 ... */\r\n  /* 0000 */ V(2, 14, 3),\t/* 216 */\r\n  /* 0001 */ V(2, 14, 3),\r\n  /* 0010 */ V(10, 10, 3),\r\n  /* 0011 */ V(10, 10, 3),\r\n  /* 0100 */ V(14, 2, 3),\r\n  /* 0101 */ V(14, 2, 3),\r\n  /* 0110 */ V(1, 14, 3),\r\n  /* 0111 */ V(1, 14, 3),\r\n  /* 1000 */ V(14, 1, 3),\r\n  /* 1001 */ V(14, 1, 3),\r\n  /* 1010 */ V(0, 14, 4),\r\n  /* 1011 */ V(14, 0, 4),\r\n  /* 1100 */ V(5, 13, 3),\r\n  /* 1101 */ V(5, 13, 3),\r\n  /* 1110 */ V(13, 5, 3),\r\n  /* 1111 */ V(13, 5, 3),\r\n\r\n  /* 0000 1000 ... */\r\n  /* 000  */ V(7, 12, 3),\t/* 232 */\r\n  /* 001  */ V(12, 7, 3),\r\n  /* 010  */ V(4, 13, 3),\r\n  /* 011  */ V(8, 11, 3),\r\n  /* 100  */ V(13, 4, 2),\r\n  /* 101  */ V(13, 4, 2),\r\n  /* 110  */ V(11, 8, 3),\r\n  /* 111  */ V(9, 10, 3),\r\n\r\n  /* 0000 1001 ... */\r\n  /* 000  */ V(10, 9, 3),\t/* 240 */\r\n  /* 001  */ V(6, 12, 3),\r\n  /* 010  */ V(12, 6, 3),\r\n  /* 011  */ V(3, 13, 3),\r\n  /* 100  */ V(13, 3, 2),\r\n  /* 101  */ V(13, 3, 2),\r\n  /* 110  */ V(13, 2, 2),\r\n  /* 111  */ V(13, 2, 2),\r\n\r\n  /* 0000 1010 ... */\r\n  /* 000  */ V(2, 13, 3),\t/* 248 */\r\n  /* 001  */ V(0, 13, 3),\r\n  /* 010  */ V(1, 13, 2),\r\n  /* 011  */ V(1, 13, 2),\r\n  /* 100  */ V(7, 11, 2),\r\n  /* 101  */ V(7, 11, 2),\r\n  /* 110  */ V(11, 7, 2),\r\n  /* 111  */ V(11, 7, 2),\r\n\r\n  /* 0000 1011 ... */\r\n  /* 000  */ V(13, 1, 2),\t/* 256 */\r\n  /* 001  */ V(13, 1, 2),\r\n  /* 010  */ V(5, 12, 3),\r\n  /* 011  */ V(13, 0, 3),\r\n  /* 100  */ V(12, 5, 2),\r\n  /* 101  */ V(12, 5, 2),\r\n  /* 110  */ V(8, 10, 2),\r\n  /* 111  */ V(8, 10, 2),\r\n\r\n  /* 0000 1100 ... */\r\n  /* 00   */ V(10, 8, 2),\t/* 264 */\r\n  /* 01   */ V(4, 12, 2),\r\n  /* 10   */ V(12, 4, 2),\r\n  /* 11   */ V(6, 11, 2),\r\n\r\n  /* 0000 1101 ... */\r\n  /* 000  */ V(11, 6, 2),\t/* 268 */\r\n  /* 001  */ V(11, 6, 2),\r\n  /* 010  */ V(9, 9, 3),\r\n  /* 011  */ V(0, 12, 3),\r\n  /* 100  */ V(3, 12, 2),\r\n  /* 101  */ V(3, 12, 2),\r\n  /* 110  */ V(12, 3, 2),\r\n  /* 111  */ V(12, 3, 2),\r\n\r\n  /* 0000 1110 ... */\r\n  /* 000  */ V(7, 10, 2),\t/* 276 */\r\n  /* 001  */ V(7, 10, 2),\r\n  /* 010  */ V(10, 7, 2),\r\n  /* 011  */ V(10, 7, 2),\r\n  /* 100  */ V(10, 6, 2),\r\n  /* 101  */ V(10, 6, 2),\r\n  /* 110  */ V(12, 0, 3),\r\n  /* 111  */ V(0, 11, 3),\r\n\r\n  /* 0000 1111 ... */\r\n  /* 00   */ V(12, 2, 1),\t/* 284 */\r\n  /* 01   */ V(12, 2, 1),\r\n  /* 10   */ V(2, 12, 2),\r\n  /* 11   */ V(5, 11, 2),\r\n\r\n  /* 0001 0000 ... */\r\n  /* 00   */ V(11, 5, 2),\t/* 288 */\r\n  /* 01   */ V(1, 12, 2),\r\n  /* 10   */ V(8, 9, 2),\r\n  /* 11   */ V(9, 8, 2),\r\n\r\n  /* 0001 0001 ... */\r\n  /* 00   */ V(12, 1, 2),\t/* 292 */\r\n  /* 01   */ V(4, 11, 2),\r\n  /* 10   */ V(11, 4, 2),\r\n  /* 11   */ V(6, 10, 2),\r\n\r\n  /* 0001 0010 ... */\r\n  /* 00   */ V(3, 11, 2),\t/* 296 */\r\n  /* 01   */ V(7, 9, 2),\r\n  /* 10   */ V(11, 3, 1),\r\n  /* 11   */ V(11, 3, 1),\r\n\r\n  /* 0001 0011 ... */\r\n  /* 00   */ V(9, 7, 2),\t/* 300 */\r\n  /* 01   */ V(8, 8, 2),\r\n  /* 10   */ V(2, 11, 2),\r\n  /* 11   */ V(5, 10, 2),\r\n\r\n  /* 0001 0100 ... */\r\n  /* 00   */ V(11, 2, 1),\t/* 304 */\r\n  /* 01   */ V(11, 2, 1),\r\n  /* 10   */ V(10, 5, 2),\r\n  /* 11   */ V(1, 11, 2),\r\n\r\n  /* 0001 0101 ... */\r\n  /* 00   */ V(11, 1, 1),\t/* 308 */\r\n  /* 01   */ V(11, 1, 1),\r\n  /* 10   */ V(11, 0, 2),\r\n  /* 11   */ V(6, 9, 2),\r\n\r\n  /* 0001 0110 ... */\r\n  /* 00   */ V(9, 6, 2),\t/* 312 */\r\n  /* 01   */ V(4, 10, 2),\r\n  /* 10   */ V(10, 4, 2),\r\n  /* 11   */ V(7, 8, 2),\r\n\r\n  /* 0001 0111 ... */\r\n  /* 00   */ V(8, 7, 2),\t/* 316 */\r\n  /* 01   */ V(3, 10, 2),\r\n  /* 10   */ V(10, 3, 1),\r\n  /* 11   */ V(10, 3, 1),\r\n\r\n  /* 0001 1000 ... */\r\n  /* 0    */ V(5, 9, 1),\t/* 320 */\r\n  /* 1    */ V(9, 5, 1),\r\n\r\n  /* 0001 1001 ... */\r\n  /* 0    */ V(2, 10, 1),\t/* 322 */\r\n  /* 1    */ V(10, 2, 1),\r\n\r\n  /* 0001 1010 ... */\r\n  /* 0    */ V(1, 10, 1),\t/* 324 */\r\n  /* 1    */ V(10, 1, 1),\r\n\r\n  /* 0001 1011 ... */\r\n  /* 00   */ V(0, 10, 2),\t/* 326 */\r\n  /* 01   */ V(10, 0, 2),\r\n  /* 10   */ V(6, 8, 1),\r\n  /* 11   */ V(6, 8, 1),\r\n\r\n  /* 0001 1100 ... */\r\n  /* 0    */ V(8, 6, 1),\t/* 330 */\r\n  /* 1    */ V(4, 9, 1),\r\n\r\n  /* 0001 1101 ... */\r\n  /* 0    */ V(9, 4, 1),\t/* 332 */\r\n  /* 1    */ V(3, 9, 1),\r\n\r\n  /* 0001 1110 ... */\r\n  /* 00   */ V(9, 3, 1),\t/* 334 */\r\n  /* 01   */ V(9, 3, 1),\r\n  /* 10   */ V(7, 7, 2),\r\n  /* 11   */ V(0, 9, 2),\r\n\r\n  /* 0001 1111 ... */\r\n  /* 0    */ V(5, 8, 1),\t/* 338 */\r\n  /* 1    */ V(8, 5, 1),\r\n\r\n  /* 0010 0000 ... */\r\n  /* 0    */ V(2, 9, 1),\t/* 340 */\r\n  /* 1    */ V(6, 7, 1),\r\n\r\n  /* 0010 0001 ... */\r\n  /* 0    */ V(7, 6, 1),\t/* 342 */\r\n  /* 1    */ V(9, 2, 1),\r\n\r\n  /* 0010 0011 ... */\r\n  /* 0    */ V(1, 9, 1),\t/* 344 */\r\n  /* 1    */ V(9, 0, 1),\r\n\r\n  /* 0010 0100 ... */\r\n  /* 0    */ V(4, 8, 1),\t/* 346 */\r\n  /* 1    */ V(8, 4, 1),\r\n\r\n  /* 0010 0101 ... */\r\n  /* 0    */ V(5, 7, 1),\t/* 348 */\r\n  /* 1    */ V(7, 5, 1),\r\n\r\n  /* 0010 0110 ... */\r\n  /* 0    */ V(3, 8, 1),\t/* 350 */\r\n  /* 1    */ V(8, 3, 1),\r\n\r\n  /* 0010 0111 ... */\r\n  /* 0    */ V(6, 6, 1),\t/* 352 */\r\n  /* 1    */ V(4, 7, 1),\r\n\r\n  /* 0010 1100 ... */\r\n  /* 0    */ V(7, 4, 1),\t/* 354 */\r\n  /* 1    */ V(0, 8, 1),\r\n\r\n  /* 0010 1101 ... */\r\n  /* 0    */ V(8, 0, 1),\t/* 356 */\r\n  /* 1    */ V(5, 6, 1),\r\n\r\n  /* 0010 1110 ... */\r\n  /* 0    */ V(6, 5, 1),\t/* 358 */\r\n  /* 1    */ V(3, 7, 1),\r\n\r\n  /* 0010 1111 ... */\r\n  /* 0    */ V(7, 3, 1),\t/* 360 */\r\n  /* 1    */ V(4, 6, 1),\r\n\r\n  /* 0011 0110 ... */\r\n  /* 0    */ V(0, 7, 1),\t/* 362 */\r\n  /* 1    */ V(7, 0, 1),\r\n\r\n  /* 0011 1110 ... */\r\n  /* 0    */ V(0, 6, 1),\t/* 364 */\r\n  /* 1    */ V(6, 0, 1),\r\n\r\n  /* 0000 0000 0000 ... */\r\n  /* 0    */ V(15, 15, 1),\t/* 366 */\r\n  /* 1    */ V(14, 15, 1),\r\n\r\n  /* 0000 0000 0001 ... */\r\n  /* 0    */ V(15, 14, 1),\t/* 368 */\r\n  /* 1    */ V(13, 15, 1),\r\n\r\n  /* 0000 0000 0011 ... */\r\n  /* 0    */ V(15, 13, 1),\t/* 370 */\r\n  /* 1    */ V(12, 15, 1),\r\n\r\n  /* 0000 0000 0100 ... */\r\n  /* 0    */ V(15, 12, 1),\t/* 372 */\r\n  /* 1    */ V(13, 14, 1),\r\n\r\n  /* 0000 0000 0101 ... */\r\n  /* 0    */ V(14, 13, 1),\t/* 374 */\r\n  /* 1    */ V(11, 15, 1),\r\n\r\n  /* 0000 0000 0111 ... */\r\n  /* 0    */ V(12, 14, 1),\t/* 376 */\r\n  /* 1    */ V(14, 12, 1),\r\n\r\n  /* 0000 0001 1111 ... */\r\n  /* 0    */ V(10, 14, 1),\t/* 378 */\r\n  /* 1    */ V(0, 15, 1)\r\n];\r\n\r\nvar hufftab16 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 4),\r\n  /* 0011 */ PTR(64, 2),\r\n  /* 0100 */ V(1, 1, 4),\r\n  /* 0101 */ V(0, 1, 4),\r\n  /* 0110 */ V(1, 0, 3),\r\n  /* 0111 */ V(1, 0, 3),\r\n  /* 1000 */ V(0, 0, 1),\r\n  /* 1001 */ V(0, 0, 1),\r\n  /* 1010 */ V(0, 0, 1),\r\n  /* 1011 */ V(0, 0, 1),\r\n  /* 1100 */ V(0, 0, 1),\r\n  /* 1101 */ V(0, 0, 1),\r\n  /* 1110 */ V(0, 0, 1),\r\n  /* 1111 */ V(0, 0, 1),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ PTR(68, 3),\t/* 16 */\r\n  /* 0001 */ PTR(76, 3),\r\n  /* 0010 */ PTR(84, 2),\r\n  /* 0011 */ V(15, 15, 4),\r\n  /* 0100 */ PTR(88, 2),\r\n  /* 0101 */ PTR(92, 1),\r\n  /* 0110 */ PTR(94, 4),\r\n  /* 0111 */ V(15, 2, 4),\r\n  /* 1000 */ PTR(110, 1),\r\n  /* 1001 */ V(1, 15, 4),\r\n  /* 1010 */ V(15, 1, 4),\r\n  /* 1011 */ PTR(112, 4),\r\n  /* 1100 */ PTR(128, 4),\r\n  /* 1101 */ PTR(144, 4),\r\n  /* 1110 */ PTR(160, 4),\r\n  /* 1111 */ PTR(176, 4),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ PTR(192, 4),\t/* 32 */\r\n  /* 0001 */ PTR(208, 3),\r\n  /* 0010 */ PTR(216, 3),\r\n  /* 0011 */ PTR(224, 3),\r\n  /* 0100 */ PTR(232, 3),\r\n  /* 0101 */ PTR(240, 3),\r\n  /* 0110 */ PTR(248, 3),\r\n  /* 0111 */ PTR(256, 3),\r\n  /* 1000 */ PTR(264, 2),\r\n  /* 1001 */ PTR(268, 2),\r\n  /* 1010 */ PTR(272, 1),\r\n  /* 1011 */ PTR(274, 2),\r\n  /* 1100 */ PTR(278, 2),\r\n  /* 1101 */ PTR(282, 1),\r\n  /* 1110 */ V(5, 1, 4),\r\n  /* 1111 */ PTR(284, 1),\r\n\r\n  /* 0010 ... */\r\n  /* 0000 */ PTR(286, 1),\t/* 48 */\r\n  /* 0001 */ PTR(288, 1),\r\n  /* 0010 */ PTR(290, 1),\r\n  /* 0011 */ V(1, 4, 4),\r\n  /* 0100 */ V(4, 1, 4),\r\n  /* 0101 */ PTR(292, 1),\r\n  /* 0110 */ V(2, 3, 4),\r\n  /* 0111 */ V(3, 2, 4),\r\n  /* 1000 */ V(1, 3, 3),\r\n  /* 1001 */ V(1, 3, 3),\r\n  /* 1010 */ V(3, 1, 3),\r\n  /* 1011 */ V(3, 1, 3),\r\n  /* 1100 */ V(0, 3, 4),\r\n  /* 1101 */ V(3, 0, 4),\r\n  /* 1110 */ V(2, 2, 3),\r\n  /* 1111 */ V(2, 2, 3),\r\n\r\n  /* 0011 ... */\r\n  /* 00   */ V(1, 2, 2),\t/* 64 */\r\n  /* 01   */ V(2, 1, 2),\r\n  /* 10   */ V(0, 2, 2),\r\n  /* 11   */ V(2, 0, 2),\r\n\r\n  /* 0000 0000 ... */\r\n  /* 000  */ V(14, 15, 3),\t/* 68 */\r\n  /* 001  */ V(15, 14, 3),\r\n  /* 010  */ V(13, 15, 3),\r\n  /* 011  */ V(15, 13, 3),\r\n  /* 100  */ V(12, 15, 3),\r\n  /* 101  */ V(15, 12, 3),\r\n  /* 110  */ V(11, 15, 3),\r\n  /* 111  */ V(15, 11, 3),\r\n\r\n  /* 0000 0001 ... */\r\n  /* 000  */ V(10, 15, 2),\t/* 76 */\r\n  /* 001  */ V(10, 15, 2),\r\n  /* 010  */ V(15, 10, 3),\r\n  /* 011  */ V(9, 15, 3),\r\n  /* 100  */ V(15, 9, 3),\r\n  /* 101  */ V(15, 8, 3),\r\n  /* 110  */ V(8, 15, 2),\r\n  /* 111  */ V(8, 15, 2),\r\n\r\n  /* 0000 0010 ... */\r\n  /* 00   */ V(7, 15, 2),\t/* 84 */\r\n  /* 01   */ V(15, 7, 2),\r\n  /* 10   */ V(6, 15, 2),\r\n  /* 11   */ V(15, 6, 2),\r\n\r\n  /* 0000 0100 ... */\r\n  /* 00   */ V(5, 15, 2),\t/* 88 */\r\n  /* 01   */ V(15, 5, 2),\r\n  /* 10   */ V(4, 15, 1),\r\n  /* 11   */ V(4, 15, 1),\r\n\r\n  /* 0000 0101 ... */\r\n  /* 0    */ V(15, 4, 1),\t/* 92 */\r\n  /* 1    */ V(15, 3, 1),\r\n\r\n  /* 0000 0110 ... */\r\n  /* 0000 */ V(15, 0, 1),\t/* 94 */\r\n  /* 0001 */ V(15, 0, 1),\r\n  /* 0010 */ V(15, 0, 1),\r\n  /* 0011 */ V(15, 0, 1),\r\n  /* 0100 */ V(15, 0, 1),\r\n  /* 0101 */ V(15, 0, 1),\r\n  /* 0110 */ V(15, 0, 1),\r\n  /* 0111 */ V(15, 0, 1),\r\n  /* 1000 */ V(3, 15, 2),\r\n  /* 1001 */ V(3, 15, 2),\r\n  /* 1010 */ V(3, 15, 2),\r\n  /* 1011 */ V(3, 15, 2),\r\n  /* 1100 */ PTR(294, 4),\r\n  /* 1101 */ PTR(310, 3),\r\n  /* 1110 */ PTR(318, 3),\r\n  /* 1111 */ PTR(326, 3),\r\n\r\n  /* 0000 1000 ... */\r\n  /* 0    */ V(2, 15, 1),\t/* 110 */\r\n  /* 1    */ V(0, 15, 1),\r\n\r\n  /* 0000 1011 ... */\r\n  /* 0000 */ PTR(334, 2),\t/* 112 */\r\n  /* 0001 */ PTR(338, 2),\r\n  /* 0010 */ PTR(342, 2),\r\n  /* 0011 */ PTR(346, 1),\r\n  /* 0100 */ PTR(348, 2),\r\n  /* 0101 */ PTR(352, 2),\r\n  /* 0110 */ PTR(356, 1),\r\n  /* 0111 */ PTR(358, 2),\r\n  /* 1000 */ PTR(362, 2),\r\n  /* 1001 */ PTR(366, 2),\r\n  /* 1010 */ PTR(370, 2),\r\n  /* 1011 */ V(14, 3, 4),\r\n  /* 1100 */ PTR(374, 1),\r\n  /* 1101 */ PTR(376, 1),\r\n  /* 1110 */ PTR(378, 1),\r\n  /* 1111 */ PTR(380, 1),\r\n\r\n  /* 0000 1100 ... */\r\n  /* 0000 */ PTR(382, 1),\t/* 128 */\r\n  /* 0001 */ PTR(384, 1),\r\n  /* 0010 */ PTR(386, 1),\r\n  /* 0011 */ V(0, 13, 4),\r\n  /* 0100 */ PTR(388, 1),\r\n  /* 0101 */ PTR(390, 1),\r\n  /* 0110 */ PTR(392, 1),\r\n  /* 0111 */ V(3, 12, 4),\r\n  /* 1000 */ PTR(394, 1),\r\n  /* 1001 */ V(1, 12, 4),\r\n  /* 1010 */ V(12, 0, 4),\r\n  /* 1011 */ PTR(396, 1),\r\n  /* 1100 */ V(14, 2, 3),\r\n  /* 1101 */ V(14, 2, 3),\r\n  /* 1110 */ V(2, 14, 4),\r\n  /* 1111 */ V(1, 14, 4),\r\n\r\n  /* 0000 1101 ... */\r\n  /* 0000 */ V(13, 3, 4),\t/* 144 */\r\n  /* 0001 */ V(2, 13, 4),\r\n  /* 0010 */ V(13, 2, 4),\r\n  /* 0011 */ V(13, 1, 4),\r\n  /* 0100 */ V(3, 11, 4),\r\n  /* 0101 */ PTR(398, 1),\r\n  /* 0110 */ V(1, 13, 3),\r\n  /* 0111 */ V(1, 13, 3),\r\n  /* 1000 */ V(12, 4, 4),\r\n  /* 1001 */ V(6, 11, 4),\r\n  /* 1010 */ V(12, 3, 4),\r\n  /* 1011 */ V(10, 7, 4),\r\n  /* 1100 */ V(2, 12, 3),\r\n  /* 1101 */ V(2, 12, 3),\r\n  /* 1110 */ V(12, 2, 4),\r\n  /* 1111 */ V(11, 5, 4),\r\n\r\n  /* 0000 1110 ... */\r\n  /* 0000 */ V(12, 1, 4),\t/* 160 */\r\n  /* 0001 */ V(0, 12, 4),\r\n  /* 0010 */ V(4, 11, 4),\r\n  /* 0011 */ V(11, 4, 4),\r\n  /* 0100 */ V(6, 10, 4),\r\n  /* 0101 */ V(10, 6, 4),\r\n  /* 0110 */ V(11, 3, 3),\r\n  /* 0111 */ V(11, 3, 3),\r\n  /* 1000 */ V(5, 10, 4),\r\n  /* 1001 */ V(10, 5, 4),\r\n  /* 1010 */ V(2, 11, 3),\r\n  /* 1011 */ V(2, 11, 3),\r\n  /* 1100 */ V(11, 2, 3),\r\n  /* 1101 */ V(11, 2, 3),\r\n  /* 1110 */ V(1, 11, 3),\r\n  /* 1111 */ V(1, 11, 3),\r\n\r\n  /* 0000 1111 ... */\r\n  /* 0000 */ V(11, 1, 3),\t/* 176 */\r\n  /* 0001 */ V(11, 1, 3),\r\n  /* 0010 */ V(0, 11, 4),\r\n  /* 0011 */ V(11, 0, 4),\r\n  /* 0100 */ V(6, 9, 4),\r\n  /* 0101 */ V(9, 6, 4),\r\n  /* 0110 */ V(4, 10, 4),\r\n  /* 0111 */ V(10, 4, 4),\r\n  /* 1000 */ V(7, 8, 4),\r\n  /* 1001 */ V(8, 7, 4),\r\n  /* 1010 */ V(10, 3, 3),\r\n  /* 1011 */ V(10, 3, 3),\r\n  /* 1100 */ V(3, 10, 4),\r\n  /* 1101 */ V(5, 9, 4),\r\n  /* 1110 */ V(2, 10, 3),\r\n  /* 1111 */ V(2, 10, 3),\r\n\r\n  /* 0001 0000 ... */\r\n  /* 0000 */ V(9, 5, 4),\t/* 192 */\r\n  /* 0001 */ V(6, 8, 4),\r\n  /* 0010 */ V(10, 1, 3),\r\n  /* 0011 */ V(10, 1, 3),\r\n  /* 0100 */ V(8, 6, 4),\r\n  /* 0101 */ V(7, 7, 4),\r\n  /* 0110 */ V(9, 4, 3),\r\n  /* 0111 */ V(9, 4, 3),\r\n  /* 1000 */ V(4, 9, 4),\r\n  /* 1001 */ V(5, 7, 4),\r\n  /* 1010 */ V(6, 7, 3),\r\n  /* 1011 */ V(6, 7, 3),\r\n  /* 1100 */ V(10, 2, 2),\r\n  /* 1101 */ V(10, 2, 2),\r\n  /* 1110 */ V(10, 2, 2),\r\n  /* 1111 */ V(10, 2, 2),\r\n\r\n  /* 0001 0001 ... */\r\n  /* 000  */ V(1, 10, 2),\t/* 208 */\r\n  /* 001  */ V(1, 10, 2),\r\n  /* 010  */ V(0, 10, 3),\r\n  /* 011  */ V(10, 0, 3),\r\n  /* 100  */ V(3, 9, 3),\r\n  /* 101  */ V(9, 3, 3),\r\n  /* 110  */ V(5, 8, 3),\r\n  /* 111  */ V(8, 5, 3),\r\n\r\n  /* 0001 0010 ... */\r\n  /* 000  */ V(2, 9, 2),\t/* 216 */\r\n  /* 001  */ V(2, 9, 2),\r\n  /* 010  */ V(9, 2, 2),\r\n  /* 011  */ V(9, 2, 2),\r\n  /* 100  */ V(7, 6, 3),\r\n  /* 101  */ V(0, 9, 3),\r\n  /* 110  */ V(1, 9, 2),\r\n  /* 111  */ V(1, 9, 2),\r\n\r\n  /* 0001 0011 ... */\r\n  /* 000  */ V(9, 1, 2),\t/* 224 */\r\n  /* 001  */ V(9, 1, 2),\r\n  /* 010  */ V(9, 0, 3),\r\n  /* 011  */ V(4, 8, 3),\r\n  /* 100  */ V(8, 4, 3),\r\n  /* 101  */ V(7, 5, 3),\r\n  /* 110  */ V(3, 8, 3),\r\n  /* 111  */ V(8, 3, 3),\r\n\r\n  /* 0001 0100 ... */\r\n  /* 000  */ V(6, 6, 3),\t/* 232 */\r\n  /* 001  */ V(2, 8, 3),\r\n  /* 010  */ V(8, 2, 2),\r\n  /* 011  */ V(8, 2, 2),\r\n  /* 100  */ V(4, 7, 3),\r\n  /* 101  */ V(7, 4, 3),\r\n  /* 110  */ V(1, 8, 2),\r\n  /* 111  */ V(1, 8, 2),\r\n\r\n  /* 0001 0101 ... */\r\n  /* 000  */ V(8, 1, 2),\t/* 240 */\r\n  /* 001  */ V(8, 1, 2),\r\n  /* 010  */ V(8, 0, 2),\r\n  /* 011  */ V(8, 0, 2),\r\n  /* 100  */ V(0, 8, 3),\r\n  /* 101  */ V(5, 6, 3),\r\n  /* 110  */ V(3, 7, 2),\r\n  /* 111  */ V(3, 7, 2),\r\n\r\n  /* 0001 0110 ... */\r\n  /* 000  */ V(7, 3, 2),\t/* 248 */\r\n  /* 001  */ V(7, 3, 2),\r\n  /* 010  */ V(6, 5, 3),\r\n  /* 011  */ V(4, 6, 3),\r\n  /* 100  */ V(2, 7, 2),\r\n  /* 101  */ V(2, 7, 2),\r\n  /* 110  */ V(7, 2, 2),\r\n  /* 111  */ V(7, 2, 2),\r\n\r\n  /* 0001 0111 ... */\r\n  /* 000  */ V(6, 4, 3),\t/* 256 */\r\n  /* 001  */ V(5, 5, 3),\r\n  /* 010  */ V(0, 7, 2),\r\n  /* 011  */ V(0, 7, 2),\r\n  /* 100  */ V(1, 7, 1),\r\n  /* 101  */ V(1, 7, 1),\r\n  /* 110  */ V(1, 7, 1),\r\n  /* 111  */ V(1, 7, 1),\r\n\r\n  /* 0001 1000 ... */\r\n  /* 00   */ V(7, 1, 1),\t/* 264  */\r\n  /* 01   */ V(7, 1, 1),\r\n  /* 10   */ V(7, 0, 2),\r\n  /* 11   */ V(3, 6, 2),\r\n\r\n  /* 0001 1001 ... */\r\n  /* 00   */ V(6, 3, 2),\t/* 268 */\r\n  /* 01   */ V(4, 5, 2),\r\n  /* 10   */ V(5, 4, 2),\r\n  /* 11   */ V(2, 6, 2),\r\n\r\n  /* 0001 1010 ... */\r\n  /* 0    */ V(6, 2, 1),\t/* 272 */\r\n  /* 1    */ V(1, 6, 1),\r\n\r\n  /* 0001 1011 ... */\r\n  /* 00   */ V(6, 1, 1),\t/* 274 */\r\n  /* 01   */ V(6, 1, 1),\r\n  /* 10   */ V(0, 6, 2),\r\n  /* 11   */ V(6, 0, 2),\r\n\r\n  /* 0001 1100 ... */\r\n  /* 00   */ V(5, 3, 1),\t/* 278 */\r\n  /* 01   */ V(5, 3, 1),\r\n  /* 10   */ V(3, 5, 2),\r\n  /* 11   */ V(4, 4, 2),\r\n\r\n  /* 0001 1101 ... */\r\n  /* 0    */ V(2, 5, 1),\t/* 282 */\r\n  /* 1    */ V(5, 2, 1),\r\n\r\n  /* 0001 1111 ... */\r\n  /* 0    */ V(1, 5, 1),\t/* 284 */\r\n  /* 1    */ V(0, 5, 1),\r\n\r\n  /* 0010 0000 ... */\r\n  /* 0    */ V(3, 4, 1),\t/* 286 */\r\n  /* 1    */ V(4, 3, 1),\r\n\r\n  /* 0010 0001 ... */\r\n  /* 0    */ V(5, 0, 1),\t/* 288 */\r\n  /* 1    */ V(2, 4, 1),\r\n\r\n  /* 0010 0010 ... */\r\n  /* 0    */ V(4, 2, 1),\t/* 290 */\r\n  /* 1    */ V(3, 3, 1),\r\n\r\n  /* 0010 0101 ... */\r\n  /* 0    */ V(0, 4, 1),\t/* 292 */\r\n  /* 1    */ V(4, 0, 1),\r\n\r\n  /* 0000 0110 1100 ... */\r\n  /* 0000 */ V(12, 14, 4),\t/* 294 */\r\n  /* 0001 */ PTR(400, 1),\r\n  /* 0010 */ V(13, 14, 3),\r\n  /* 0011 */ V(13, 14, 3),\r\n  /* 0100 */ V(14, 9, 3),\r\n  /* 0101 */ V(14, 9, 3),\r\n  /* 0110 */ V(14, 10, 4),\r\n  /* 0111 */ V(13, 9, 4),\r\n  /* 1000 */ V(14, 14, 2),\r\n  /* 1001 */ V(14, 14, 2),\r\n  /* 1010 */ V(14, 14, 2),\r\n  /* 1011 */ V(14, 14, 2),\r\n  /* 1100 */ V(14, 13, 3),\r\n  /* 1101 */ V(14, 13, 3),\r\n  /* 1110 */ V(14, 11, 3),\r\n  /* 1111 */ V(14, 11, 3),\r\n\r\n  /* 0000 0110 1101 ... */\r\n  /* 000  */ V(11, 14, 2),\t/* 310 */\r\n  /* 001  */ V(11, 14, 2),\r\n  /* 010  */ V(12, 13, 2),\r\n  /* 011  */ V(12, 13, 2),\r\n  /* 100  */ V(13, 12, 3),\r\n  /* 101  */ V(13, 11, 3),\r\n  /* 110  */ V(10, 14, 2),\r\n  /* 111  */ V(10, 14, 2),\r\n\r\n  /* 0000 0110 1110 ... */\r\n  /* 000  */ V(12, 12, 2),\t/* 318 */\r\n  /* 001  */ V(12, 12, 2),\r\n  /* 010  */ V(10, 13, 3),\r\n  /* 011  */ V(13, 10, 3),\r\n  /* 100  */ V(7, 14, 3),\r\n  /* 101  */ V(10, 12, 3),\r\n  /* 110  */ V(12, 10, 2),\r\n  /* 111  */ V(12, 10, 2),\r\n\r\n  /* 0000 0110 1111 ... */\r\n  /* 000  */ V(12, 9, 3),\t/* 326 */\r\n  /* 001  */ V(7, 13, 3),\r\n  /* 010  */ V(5, 14, 2),\r\n  /* 011  */ V(5, 14, 2),\r\n  /* 100  */ V(11, 13, 1),\r\n  /* 101  */ V(11, 13, 1),\r\n  /* 110  */ V(11, 13, 1),\r\n  /* 111  */ V(11, 13, 1),\r\n\r\n  /* 0000 1011 0000 ... */\r\n  /* 00   */ V(9, 14, 1),\t/* 334 */\r\n  /* 01   */ V(9, 14, 1),\r\n  /* 10   */ V(11, 12, 2),\r\n  /* 11   */ V(12, 11, 2),\r\n\r\n  /* 0000 1011 0001 ... */\r\n  /* 00   */ V(8, 14, 2),\t/* 338 */\r\n  /* 01   */ V(14, 8, 2),\r\n  /* 10   */ V(9, 13, 2),\r\n  /* 11   */ V(14, 7, 2),\r\n\r\n  /* 0000 1011 0010 ... */\r\n  /* 00   */ V(11, 11, 2),\t/* 342 */\r\n  /* 01   */ V(8, 13, 2),\r\n  /* 10   */ V(13, 8, 2),\r\n  /* 11   */ V(6, 14, 2),\r\n\r\n  /* 0000 1011 0011 ... */\r\n  /* 0    */ V(14, 6, 1),\t/* 346 */\r\n  /* 1    */ V(9, 12, 1),\r\n\r\n  /* 0000 1011 0100 ... */\r\n  /* 00   */ V(10, 11, 2),\t/* 348 */\r\n  /* 01   */ V(11, 10, 2),\r\n  /* 10   */ V(14, 5, 2),\r\n  /* 11   */ V(13, 7, 2),\r\n\r\n  /* 0000 1011 0101 ... */\r\n  /* 00   */ V(4, 14, 1),\t/* 352 */\r\n  /* 01   */ V(4, 14, 1),\r\n  /* 10   */ V(14, 4, 2),\r\n  /* 11   */ V(8, 12, 2),\r\n\r\n  /* 0000 1011 0110 ... */\r\n  /* 0    */ V(12, 8, 1),\t/* 356 */\r\n  /* 1    */ V(3, 14, 1),\r\n\r\n  /* 0000 1011 0111 ... */\r\n  /* 00   */ V(6, 13, 1),\t/* 358 */\r\n  /* 01   */ V(6, 13, 1),\r\n  /* 10   */ V(13, 6, 2),\r\n  /* 11   */ V(9, 11, 2),\r\n\r\n  /* 0000 1011 1000 ... */\r\n  /* 00   */ V(11, 9, 2),\t/* 362 */\r\n  /* 01   */ V(10, 10, 2),\r\n  /* 10   */ V(14, 1, 1),\r\n  /* 11   */ V(14, 1, 1),\r\n\r\n  /* 0000 1011 1001 ... */\r\n  /* 00   */ V(13, 4, 1),\t/* 366 */\r\n  /* 01   */ V(13, 4, 1),\r\n  /* 10   */ V(11, 8, 2),\r\n  /* 11   */ V(10, 9, 2),\r\n\r\n  /* 0000 1011 1010 ... */\r\n  /* 00   */ V(7, 11, 1),\t/* 370 */\r\n  /* 01   */ V(7, 11, 1),\r\n  /* 10   */ V(11, 7, 2),\r\n  /* 11   */ V(13, 0, 2),\r\n\r\n  /* 0000 1011 1100 ... */\r\n  /* 0    */ V(0, 14, 1),\t/* 374 */\r\n  /* 1    */ V(14, 0, 1),\r\n\r\n  /* 0000 1011 1101 ... */\r\n  /* 0    */ V(5, 13, 1),\t/* 376 */\r\n  /* 1    */ V(13, 5, 1),\r\n\r\n  /* 0000 1011 1110 ... */\r\n  /* 0    */ V(7, 12, 1),\t/* 378 */\r\n  /* 1    */ V(12, 7, 1),\r\n\r\n  /* 0000 1011 1111 ... */\r\n  /* 0    */ V(4, 13, 1),\t/* 380 */\r\n  /* 1    */ V(8, 11, 1),\r\n\r\n  /* 0000 1100 0000 ... */\r\n  /* 0    */ V(9, 10, 1),\t/* 382 */\r\n  /* 1    */ V(6, 12, 1),\r\n\r\n  /* 0000 1100 0001 ... */\r\n  /* 0    */ V(12, 6, 1),\t/* 384 */\r\n  /* 1    */ V(3, 13, 1),\r\n\r\n  /* 0000 1100 0010 ... */\r\n  /* 0    */ V(5, 12, 1),\t/* 386 */\r\n  /* 1    */ V(12, 5, 1),\r\n\r\n  /* 0000 1100 0100 ... */\r\n  /* 0    */ V(8, 10, 1),\t/* 388 */\r\n  /* 1    */ V(10, 8, 1),\r\n\r\n  /* 0000 1100 0101 ... */\r\n  /* 0    */ V(9, 9, 1),\t/* 390 */\r\n  /* 1    */ V(4, 12, 1),\r\n\r\n  /* 0000 1100 0110 ... */\r\n  /* 0    */ V(11, 6, 1),\t/* 392 */\r\n  /* 1    */ V(7, 10, 1),\r\n\r\n  /* 0000 1100 1000 ... */\r\n  /* 0    */ V(5, 11, 1),\t/* 394 */\r\n  /* 1    */ V(8, 9, 1),\r\n\r\n  /* 0000 1100 1011 ... */\r\n  /* 0    */ V(9, 8, 1),\t/* 396 */\r\n  /* 1    */ V(7, 9, 1),\r\n\r\n  /* 0000 1101 0101 ... */\r\n  /* 0    */ V(9, 7, 1),\t/* 398 */\r\n  /* 1    */ V(8, 8, 1),\r\n\r\n  /* 0000 0110 1100 0001 ... */\r\n  /* 0    */ V(14, 12, 1),\t/* 400 */\r\n  /* 1    */ V(13, 13, 1)\r\n];\r\n\r\nvar hufftab24 = [\r\n  /* 0000 */ PTR(16, 4),\r\n  /* 0001 */ PTR(32, 4),\r\n  /* 0010 */ PTR(48, 4),\r\n  /* 0011 */ V(15, 15, 4),\r\n  /* 0100 */ PTR(64, 4),\r\n  /* 0101 */ PTR(80, 4),\r\n  /* 0110 */ PTR(96, 4),\r\n  /* 0111 */ PTR(112, 4),\r\n  /* 1000 */ PTR(128, 4),\r\n  /* 1001 */ PTR(144, 4),\r\n  /* 1010 */ PTR(160, 3),\r\n  /* 1011 */ PTR(168, 2),\r\n  /* 1100 */ V(1, 1, 4),\r\n  /* 1101 */ V(0, 1, 4),\r\n  /* 1110 */ V(1, 0, 4),\r\n  /* 1111 */ V(0, 0, 4),\r\n\r\n  /* 0000 ... */\r\n  /* 0000 */ V(14, 15, 4),\t/* 16 */\r\n  /* 0001 */ V(15, 14, 4),\r\n  /* 0010 */ V(13, 15, 4),\r\n  /* 0011 */ V(15, 13, 4),\r\n  /* 0100 */ V(12, 15, 4),\r\n  /* 0101 */ V(15, 12, 4),\r\n  /* 0110 */ V(11, 15, 4),\r\n  /* 0111 */ V(15, 11, 4),\r\n  /* 1000 */ V(15, 10, 3),\r\n  /* 1001 */ V(15, 10, 3),\r\n  /* 1010 */ V(10, 15, 4),\r\n  /* 1011 */ V(9, 15, 4),\r\n  /* 1100 */ V(15, 9, 3),\r\n  /* 1101 */ V(15, 9, 3),\r\n  /* 1110 */ V(15, 8, 3),\r\n  /* 1111 */ V(15, 8, 3),\r\n\r\n  /* 0001 ... */\r\n  /* 0000 */ V(8, 15, 4),\t/* 32 */\r\n  /* 0001 */ V(7, 15, 4),\r\n  /* 0010 */ V(15, 7, 3),\r\n  /* 0011 */ V(15, 7, 3),\r\n  /* 0100 */ V(6, 15, 3),\r\n  /* 0101 */ V(6, 15, 3),\r\n  /* 0110 */ V(15, 6, 3),\r\n  /* 0111 */ V(15, 6, 3),\r\n  /* 1000 */ V(5, 15, 3),\r\n  /* 1001 */ V(5, 15, 3),\r\n  /* 1010 */ V(15, 5, 3),\r\n  /* 1011 */ V(15, 5, 3),\r\n  /* 1100 */ V(4, 15, 3),\r\n  /* 1101 */ V(4, 15, 3),\r\n  /* 1110 */ V(15, 4, 3),\r\n  /* 1111 */ V(15, 4, 3),\r\n\r\n  /* 0010 ... */\r\n  /* 0000 */ V(3, 15, 3),\t/* 48 */\r\n  /* 0001 */ V(3, 15, 3),\r\n  /* 0010 */ V(15, 3, 3),\r\n  /* 0011 */ V(15, 3, 3),\r\n  /* 0100 */ V(2, 15, 3),\r\n  /* 0101 */ V(2, 15, 3),\r\n  /* 0110 */ V(15, 2, 3),\r\n  /* 0111 */ V(15, 2, 3),\r\n  /* 1000 */ V(15, 1, 3),\r\n  /* 1001 */ V(15, 1, 3),\r\n  /* 1010 */ V(1, 15, 4),\r\n  /* 1011 */ V(15, 0, 4),\r\n  /* 1100 */ PTR(172, 3),\r\n  /* 1101 */ PTR(180, 3),\r\n  /* 1110 */ PTR(188, 3),\r\n  /* 1111 */ PTR(196, 3),\r\n\r\n  /* 0100 ... */\r\n  /* 0000 */ PTR(204, 4),\t/* 64 */\r\n  /* 0001 */ PTR(220, 3),\r\n  /* 0010 */ PTR(228, 3),\r\n  /* 0011 */ PTR(236, 3),\r\n  /* 0100 */ PTR(244, 2),\r\n  /* 0101 */ PTR(248, 2),\r\n  /* 0110 */ PTR(252, 2),\r\n  /* 0111 */ PTR(256, 2),\r\n  /* 1000 */ PTR(260, 2),\r\n  /* 1001 */ PTR(264, 2),\r\n  /* 1010 */ PTR(268, 2),\r\n  /* 1011 */ PTR(272, 2),\r\n  /* 1100 */ PTR(276, 2),\r\n  /* 1101 */ PTR(280, 3),\r\n  /* 1110 */ PTR(288, 2),\r\n  /* 1111 */ PTR(292, 2),\r\n\r\n  /* 0101 ... */\r\n  /* 0000 */ PTR(296, 2),\t/* 80 */\r\n  /* 0001 */ PTR(300, 3),\r\n  /* 0010 */ PTR(308, 2),\r\n  /* 0011 */ PTR(312, 3),\r\n  /* 0100 */ PTR(320, 1),\r\n  /* 0101 */ PTR(322, 2),\r\n  /* 0110 */ PTR(326, 2),\r\n  /* 0111 */ PTR(330, 1),\r\n  /* 1000 */ PTR(332, 2),\r\n  /* 1001 */ PTR(336, 1),\r\n  /* 1010 */ PTR(338, 1),\r\n  /* 1011 */ PTR(340, 1),\r\n  /* 1100 */ PTR(342, 1),\r\n  /* 1101 */ PTR(344, 1),\r\n  /* 1110 */ PTR(346, 1),\r\n  /* 1111 */ PTR(348, 1),\r\n\r\n  /* 0110 ... */\r\n  /* 0000 */ PTR(350, 1),\t/* 96 */\r\n  /* 0001 */ PTR(352, 1),\r\n  /* 0010 */ PTR(354, 1),\r\n  /* 0011 */ PTR(356, 1),\r\n  /* 0100 */ PTR(358, 1),\r\n  /* 0101 */ PTR(360, 1),\r\n  /* 0110 */ PTR(362, 1),\r\n  /* 0111 */ PTR(364, 1),\r\n  /* 1000 */ PTR(366, 1),\r\n  /* 1001 */ PTR(368, 1),\r\n  /* 1010 */ PTR(370, 2),\r\n  /* 1011 */ PTR(374, 1),\r\n  /* 1100 */ PTR(376, 2),\r\n  /* 1101 */ V(7, 3, 4),\r\n  /* 1110 */ PTR(380, 1),\r\n  /* 1111 */ V(7, 2, 4),\r\n\r\n  /* 0111 ... */\r\n  /* 0000 */ V(4, 6, 4),\t/* 112 */\r\n  /* 0001 */ V(6, 4, 4),\r\n  /* 0010 */ V(5, 5, 4),\r\n  /* 0011 */ V(7, 1, 4),\r\n  /* 0100 */ V(3, 6, 4),\r\n  /* 0101 */ V(6, 3, 4),\r\n  /* 0110 */ V(4, 5, 4),\r\n  /* 0111 */ V(5, 4, 4),\r\n  /* 1000 */ V(2, 6, 4),\r\n  /* 1001 */ V(6, 2, 4),\r\n  /* 1010 */ V(1, 6, 4),\r\n  /* 1011 */ V(6, 1, 4),\r\n  /* 1100 */ PTR(382, 1),\r\n  /* 1101 */ V(3, 5, 4),\r\n  /* 1110 */ V(5, 3, 4),\r\n  /* 1111 */ V(4, 4, 4),\r\n\r\n  /* 1000 ... */\r\n  /* 0000 */ V(2, 5, 4),\t/* 128 */\r\n  /* 0001 */ V(5, 2, 4),\r\n  /* 0010 */ V(1, 5, 4),\r\n  /* 0011 */ PTR(384, 1),\r\n  /* 0100 */ V(5, 1, 3),\r\n  /* 0101 */ V(5, 1, 3),\r\n  /* 0110 */ V(3, 4, 4),\r\n  /* 0111 */ V(4, 3, 4),\r\n  /* 1000 */ V(2, 4, 3),\r\n  /* 1001 */ V(2, 4, 3),\r\n  /* 1010 */ V(4, 2, 3),\r\n  /* 1011 */ V(4, 2, 3),\r\n  /* 1100 */ V(3, 3, 3),\r\n  /* 1101 */ V(3, 3, 3),\r\n  /* 1110 */ V(1, 4, 3),\r\n  /* 1111 */ V(1, 4, 3),\r\n\r\n  /* 1001 ... */\r\n  /* 0000 */ V(4, 1, 3),\t/* 144 */\r\n  /* 0001 */ V(4, 1, 3),\r\n  /* 0010 */ V(0, 4, 4),\r\n  /* 0011 */ V(4, 0, 4),\r\n  /* 0100 */ V(2, 3, 3),\r\n  /* 0101 */ V(2, 3, 3),\r\n  /* 0110 */ V(3, 2, 3),\r\n  /* 0111 */ V(3, 2, 3),\r\n  /* 1000 */ V(1, 3, 2),\r\n  /* 1001 */ V(1, 3, 2),\r\n  /* 1010 */ V(1, 3, 2),\r\n  /* 1011 */ V(1, 3, 2),\r\n  /* 1100 */ V(3, 1, 2),\r\n  /* 1101 */ V(3, 1, 2),\r\n  /* 1110 */ V(3, 1, 2),\r\n  /* 1111 */ V(3, 1, 2),\r\n\r\n  /* 1010 ... */\r\n  /* 000  */ V(0, 3, 3),\t/* 160 */\r\n  /* 001  */ V(3, 0, 3),\r\n  /* 010  */ V(2, 2, 2),\r\n  /* 011  */ V(2, 2, 2),\r\n  /* 100  */ V(1, 2, 1),\r\n  /* 101  */ V(1, 2, 1),\r\n  /* 110  */ V(1, 2, 1),\r\n  /* 111  */ V(1, 2, 1),\r\n\r\n  /* 1011 ... */\r\n  /* 00   */ V(2, 1, 1),\t/* 168 */\r\n  /* 01   */ V(2, 1, 1),\r\n  /* 10   */ V(0, 2, 2),\r\n  /* 11   */ V(2, 0, 2),\r\n\r\n  /* 0010 1100 ... */\r\n  /* 000  */ V(0, 15, 1),\t/* 172 */\r\n  /* 001  */ V(0, 15, 1),\r\n  /* 010  */ V(0, 15, 1),\r\n  /* 011  */ V(0, 15, 1),\r\n  /* 100  */ V(14, 14, 3),\r\n  /* 101  */ V(13, 14, 3),\r\n  /* 110  */ V(14, 13, 3),\r\n  /* 111  */ V(12, 14, 3),\r\n\r\n  /* 0010 1101 ... */\r\n  /* 000  */ V(14, 12, 3),\t/* 180 */\r\n  /* 001  */ V(13, 13, 3),\r\n  /* 010  */ V(11, 14, 3),\r\n  /* 011  */ V(14, 11, 3),\r\n  /* 100  */ V(12, 13, 3),\r\n  /* 101  */ V(13, 12, 3),\r\n  /* 110  */ V(10, 14, 3),\r\n  /* 111  */ V(14, 10, 3),\r\n\r\n  /* 0010 1110 ... */\r\n  /* 000  */ V(11, 13, 3),\t/* 188 */\r\n  /* 001  */ V(13, 11, 3),\r\n  /* 010  */ V(12, 12, 3),\r\n  /* 011  */ V(9, 14, 3),\r\n  /* 100  */ V(14, 9, 3),\r\n  /* 101  */ V(10, 13, 3),\r\n  /* 110  */ V(13, 10, 3),\r\n  /* 111  */ V(11, 12, 3),\r\n\r\n  /* 0010 1111 ... */\r\n  /* 000  */ V(12, 11, 3),\t/* 196 */\r\n  /* 001  */ V(8, 14, 3),\r\n  /* 010  */ V(14, 8, 3),\r\n  /* 011  */ V(9, 13, 3),\r\n  /* 100  */ V(13, 9, 3),\r\n  /* 101  */ V(7, 14, 3),\r\n  /* 110  */ V(14, 7, 3),\r\n  /* 111  */ V(10, 12, 3),\r\n\r\n  /* 0100 0000 ... */\r\n  /* 0000 */ V(12, 10, 3),\t/* 204 */\r\n  /* 0001 */ V(12, 10, 3),\r\n  /* 0010 */ V(11, 11, 3),\r\n  /* 0011 */ V(11, 11, 3),\r\n  /* 0100 */ V(8, 13, 3),\r\n  /* 0101 */ V(8, 13, 3),\r\n  /* 0110 */ V(13, 8, 3),\r\n  /* 0111 */ V(13, 8, 3),\r\n  /* 1000 */ V(0, 14, 4),\r\n  /* 1001 */ V(14, 0, 4),\r\n  /* 1010 */ V(0, 13, 3),\r\n  /* 1011 */ V(0, 13, 3),\r\n  /* 1100 */ V(14, 6, 2),\r\n  /* 1101 */ V(14, 6, 2),\r\n  /* 1110 */ V(14, 6, 2),\r\n  /* 1111 */ V(14, 6, 2),\r\n\r\n  /* 0100 0001 ... */\r\n  /* 000  */ V(6, 14, 3),\t/* 220 */\r\n  /* 001  */ V(9, 12, 3),\r\n  /* 010  */ V(12, 9, 2),\r\n  /* 011  */ V(12, 9, 2),\r\n  /* 100  */ V(5, 14, 2),\r\n  /* 101  */ V(5, 14, 2),\r\n  /* 110  */ V(11, 10, 2),\r\n  /* 111  */ V(11, 10, 2),\r\n\r\n  /* 0100 0010 ... */\r\n  /* 000  */ V(14, 5, 2),\t/* 228 */\r\n  /* 001  */ V(14, 5, 2),\r\n  /* 010  */ V(10, 11, 3),\r\n  /* 011  */ V(7, 13, 3),\r\n  /* 100  */ V(13, 7, 2),\r\n  /* 101  */ V(13, 7, 2),\r\n  /* 110  */ V(14, 4, 2),\r\n  /* 111  */ V(14, 4, 2),\r\n\r\n  /* 0100 0011 ... */\r\n  /* 000  */ V(8, 12, 2),\t/* 236 */\r\n  /* 001  */ V(8, 12, 2),\r\n  /* 010  */ V(12, 8, 2),\r\n  /* 011  */ V(12, 8, 2),\r\n  /* 100  */ V(4, 14, 3),\r\n  /* 101  */ V(2, 14, 3),\r\n  /* 110  */ V(3, 14, 2),\r\n  /* 111  */ V(3, 14, 2),\r\n\r\n  /* 0100 0100 ... */\r\n  /* 00   */ V(6, 13, 2),\t/* 244 */\r\n  /* 01   */ V(13, 6, 2),\r\n  /* 10   */ V(14, 3, 2),\r\n  /* 11   */ V(9, 11, 2),\r\n\r\n  /* 0100 0101 ... */\r\n  /* 00   */ V(11, 9, 2),\t/* 248 */\r\n  /* 01   */ V(10, 10, 2),\r\n  /* 10   */ V(14, 2, 2),\r\n  /* 11   */ V(1, 14, 2),\r\n\r\n  /* 0100 0110 ... */\r\n  /* 00   */ V(14, 1, 2),\t/* 252 */\r\n  /* 01   */ V(5, 13, 2),\r\n  /* 10   */ V(13, 5, 2),\r\n  /* 11   */ V(7, 12, 2),\r\n\r\n  /* 0100 0111 ... */\r\n  /* 00   */ V(12, 7, 2),\t/* 256 */\r\n  /* 01   */ V(4, 13, 2),\r\n  /* 10   */ V(8, 11, 2),\r\n  /* 11   */ V(11, 8, 2),\r\n\r\n  /* 0100 1000 ... */\r\n  /* 00   */ V(13, 4, 2),\t/* 260 */\r\n  /* 01   */ V(9, 10, 2),\r\n  /* 10   */ V(10, 9, 2),\r\n  /* 11   */ V(6, 12, 2),\r\n\r\n  /* 0100 1001 ... */\r\n  /* 00   */ V(12, 6, 2),\t/* 264 */\r\n  /* 01   */ V(3, 13, 2),\r\n  /* 10   */ V(13, 3, 2),\r\n  /* 11   */ V(2, 13, 2),\r\n\r\n  /* 0100 1010 ... */\r\n  /* 00   */ V(13, 2, 2),\t/* 268 */\r\n  /* 01   */ V(1, 13, 2),\r\n  /* 10   */ V(7, 11, 2),\r\n  /* 11   */ V(11, 7, 2),\r\n\r\n  /* 0100 1011 ... */\r\n  /* 00   */ V(13, 1, 2),\t/* 272 */\r\n  /* 01   */ V(5, 12, 2),\r\n  /* 10   */ V(12, 5, 2),\r\n  /* 11   */ V(8, 10, 2),\r\n\r\n  /* 0100 1100 ... */\r\n  /* 00   */ V(10, 8, 2),\t/* 276 */\r\n  /* 01   */ V(9, 9, 2),\r\n  /* 10   */ V(4, 12, 2),\r\n  /* 11   */ V(12, 4, 2),\r\n\r\n  /* 0100 1101 ... */\r\n  /* 000  */ V(6, 11, 2),\t/* 280 */\r\n  /* 001  */ V(6, 11, 2),\r\n  /* 010  */ V(11, 6, 2),\r\n  /* 011  */ V(11, 6, 2),\r\n  /* 100  */ V(13, 0, 3),\r\n  /* 101  */ V(0, 12, 3),\r\n  /* 110  */ V(3, 12, 2),\r\n  /* 111  */ V(3, 12, 2),\r\n\r\n  /* 0100 1110 ... */\r\n  /* 00   */ V(12, 3, 2),\t/* 288 */\r\n  /* 01   */ V(7, 10, 2),\r\n  /* 10   */ V(10, 7, 2),\r\n  /* 11   */ V(2, 12, 2),\r\n\r\n  /* 0100 1111 ... */\r\n  /* 00   */ V(12, 2, 2),\t/* 292 */\r\n  /* 01   */ V(5, 11, 2),\r\n  /* 10   */ V(11, 5, 2),\r\n  /* 11   */ V(1, 12, 2),\r\n\r\n  /* 0101 0000 ... */\r\n  /* 00   */ V(8, 9, 2),\t/* 296 */\r\n  /* 01   */ V(9, 8, 2),\r\n  /* 10   */ V(12, 1, 2),\r\n  /* 11   */ V(4, 11, 2),\r\n\r\n  /* 0101 0001 ... */\r\n  /* 000  */ V(12, 0, 3),\t/* 300 */\r\n  /* 001  */ V(0, 11, 3),\r\n  /* 010  */ V(3, 11, 2),\r\n  /* 011  */ V(3, 11, 2),\r\n  /* 100  */ V(11, 0, 3),\r\n  /* 101  */ V(0, 10, 3),\r\n  /* 110  */ V(1, 10, 2),\r\n  /* 111  */ V(1, 10, 2),\r\n\r\n  /* 0101 0010 ... */\r\n  /* 00   */ V(11, 4, 1),\t/* 308 */\r\n  /* 01   */ V(11, 4, 1),\r\n  /* 10   */ V(6, 10, 2),\r\n  /* 11   */ V(10, 6, 2),\r\n\r\n  /* 0101 0011 ... */\r\n  /* 000  */ V(7, 9, 2),\t/* 312 */\r\n  /* 001  */ V(7, 9, 2),\r\n  /* 010  */ V(9, 7, 2),\r\n  /* 011  */ V(9, 7, 2),\r\n  /* 100  */ V(10, 0, 3),\r\n  /* 101  */ V(0, 9, 3),\r\n  /* 110  */ V(9, 0, 2),\r\n  /* 111  */ V(9, 0, 2),\r\n\r\n  /* 0101 0100 ... */\r\n  /* 0    */ V(11, 3, 1),\t/* 320 */\r\n  /* 1    */ V(8, 8, 1),\r\n\r\n  /* 0101 0101 ... */\r\n  /* 00   */ V(2, 11, 2),\t/* 322 */\r\n  /* 01   */ V(5, 10, 2),\r\n  /* 10   */ V(11, 2, 1),\r\n  /* 11   */ V(11, 2, 1),\r\n\r\n  /* 0101 0110 ... */\r\n  /* 00   */ V(10, 5, 2),\t/* 326 */\r\n  /* 01   */ V(1, 11, 2),\r\n  /* 10   */ V(11, 1, 2),\r\n  /* 11   */ V(6, 9, 2),\r\n\r\n  /* 0101 0111 ... */\r\n  /* 0    */ V(9, 6, 1),\t/* 330 */\r\n  /* 1    */ V(10, 4, 1),\r\n\r\n  /* 0101 1000 ... */\r\n  /* 00   */ V(4, 10, 2),\t/* 332 */\r\n  /* 01   */ V(7, 8, 2),\r\n  /* 10   */ V(8, 7, 1),\r\n  /* 11   */ V(8, 7, 1),\r\n\r\n  /* 0101 1001 ... */\r\n  /* 0    */ V(3, 10, 1),\t/* 336 */\r\n  /* 1    */ V(10, 3, 1),\r\n\r\n  /* 0101 1010 ... */\r\n  /* 0    */ V(5, 9, 1),\t/* 338 */\r\n  /* 1    */ V(9, 5, 1),\r\n\r\n  /* 0101 1011 ... */\r\n  /* 0    */ V(2, 10, 1),\t/* 340 */\r\n  /* 1    */ V(10, 2, 1),\r\n\r\n  /* 0101 1100 ... */\r\n  /* 0    */ V(10, 1, 1),\t/* 342 */\r\n  /* 1    */ V(6, 8, 1),\r\n\r\n  /* 0101 1101 ... */\r\n  /* 0    */ V(8, 6, 1),\t/* 344 */\r\n  /* 1    */ V(7, 7, 1),\r\n\r\n  /* 0101 1110 ... */\r\n  /* 0    */ V(4, 9, 1),\t/* 346 */\r\n  /* 1    */ V(9, 4, 1),\r\n\r\n  /* 0101 1111 ... */\r\n  /* 0    */ V(3, 9, 1),\t/* 348 */\r\n  /* 1    */ V(9, 3, 1),\r\n\r\n  /* 0110 0000 ... */\r\n  /* 0    */ V(5, 8, 1),\t/* 350 */\r\n  /* 1    */ V(8, 5, 1),\r\n\r\n  /* 0110 0001 ... */\r\n  /* 0    */ V(2, 9, 1),\t/* 352 */\r\n  /* 1    */ V(6, 7, 1),\r\n\r\n  /* 0110 0010 ... */\r\n  /* 0    */ V(7, 6, 1),\t/* 354 */\r\n  /* 1    */ V(9, 2, 1),\r\n\r\n  /* 0110 0011 ... */\r\n  /* 0    */ V(1, 9, 1),\t/* 356 */\r\n  /* 1    */ V(9, 1, 1),\r\n\r\n  /* 0110 0100 ... */\r\n  /* 0    */ V(4, 8, 1),\t/* 358 */\r\n  /* 1    */ V(8, 4, 1),\r\n\r\n  /* 0110 0101 ... */\r\n  /* 0    */ V(5, 7, 1),\t/* 360 */\r\n  /* 1    */ V(7, 5, 1),\r\n\r\n  /* 0110 0110 ... */\r\n  /* 0    */ V(3, 8, 1),\t/* 362 */\r\n  /* 1    */ V(8, 3, 1),\r\n\r\n  /* 0110 0111 ... */\r\n  /* 0    */ V(6, 6, 1),\t/* 364 */\r\n  /* 1    */ V(2, 8, 1),\r\n\r\n  /* 0110 1000 ... */\r\n  /* 0    */ V(8, 2, 1),\t/* 366 */\r\n  /* 1    */ V(1, 8, 1),\r\n\r\n  /* 0110 1001 ... */\r\n  /* 0    */ V(4, 7, 1),\t/* 368 */\r\n  /* 1    */ V(7, 4, 1),\r\n\r\n  /* 0110 1010 ... */\r\n  /* 00   */ V(8, 1, 1),\t/* 370 */\r\n  /* 01   */ V(8, 1, 1),\r\n  /* 10   */ V(0, 8, 2),\r\n  /* 11   */ V(8, 0, 2),\r\n\r\n  /* 0110 1011 ... */\r\n  /* 0    */ V(5, 6, 1),\t/* 374 */\r\n  /* 1    */ V(6, 5, 1),\r\n\r\n  /* 0110 1100 ... */\r\n  /* 00   */ V(1, 7, 1),\t/* 376 */\r\n  /* 01   */ V(1, 7, 1),\r\n  /* 10   */ V(0, 7, 2),\r\n  /* 11   */ V(7, 0, 2),\r\n\r\n  /* 0110 1110 ... */\r\n  /* 0    */ V(3, 7, 1),\t/* 380  */\r\n  /* 1    */ V(2, 7, 1),\r\n\r\n  /* 0111 1100 ... */\r\n  /* 0    */ V(0, 6, 1),\t/* 382 */\r\n  /* 1    */ V(6, 0, 1),\r\n\r\n  /* 1000 0011 ... */\r\n  /* 0    */ V(0, 5, 1),\t/* 384 */\r\n  /* 1    */ V(5, 0, 1)\r\n];\r\n\r\n/* hufftable constructor */\r\nvar Hufftable = function(table, linbits, startbits) {\r\n    this.table = table;\r\n    this.linbits = linbits;\r\n    this.startbits = startbits;\r\n};\r\n\r\n/* external tables */\r\nexport const huff_quad_table = [ hufftabA, hufftabB ];\r\n\r\nexport const huff_pair_table = [\r\n  /*  0 */ new Hufftable(hufftab0,   0, 0),\r\n  /*  1 */ new Hufftable(hufftab1,   0, 3),\r\n  /*  2 */ new Hufftable(hufftab2,   0, 3),\r\n  /*  3 */ new Hufftable(hufftab3,   0, 3),\r\n  /*  4 */ null, //new Hufftable(0 /* not used */),\r\n  /*  5 */ new Hufftable(hufftab5,   0, 3),\r\n  /*  6 */ new Hufftable(hufftab6,   0, 4),\r\n  /*  7 */ new Hufftable(hufftab7,   0, 4),\r\n  /*  8 */ new Hufftable(hufftab8,   0, 4),\r\n  /*  9 */ new Hufftable(hufftab9,   0, 4),\r\n  /* 10 */ new Hufftable(hufftab10,  0, 4),\r\n  /* 11 */ new Hufftable(hufftab11,  0, 4),\r\n  /* 12 */ new Hufftable(hufftab12,  0, 4),\r\n  /* 13 */ new Hufftable(hufftab13,  0, 4),\r\n  /* 14 */ null, //new Hufftable(0 /* not used */),\r\n  /* 15 */ new Hufftable(hufftab15,  0, 4),\r\n  /* 16 */ new Hufftable(hufftab16,  1, 4),\r\n  /* 17 */ new Hufftable(hufftab16,  2, 4),\r\n  /* 18 */ new Hufftable(hufftab16,  3, 4),\r\n  /* 19 */ new Hufftable(hufftab16,  4, 4),\r\n  /* 20 */ new Hufftable(hufftab16,  6, 4),\r\n  /* 21 */ new Hufftable(hufftab16,  8, 4),\r\n  /* 22 */ new Hufftable(hufftab16, 10, 4),\r\n  /* 23 */ new Hufftable(hufftab16, 13, 4),\r\n  /* 24 */ new Hufftable(hufftab24,  4, 4),\r\n  /* 25 */ new Hufftable(hufftab24,  5, 4),\r\n  /* 26 */ new Hufftable(hufftab24,  6, 4),\r\n  /* 27 */ new Hufftable(hufftab24,  7, 4),\r\n  /* 28 */ new Hufftable(hufftab24,  8, 4),\r\n  /* 29 */ new Hufftable(hufftab24,  9, 4),\r\n  /* 30 */ new Hufftable(hufftab24, 11, 4),\r\n  /* 31 */ new Hufftable(hufftab24, 13, 4)\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/huffman.js","var imdct_s = [\r\n  /*  0 */  [ 0.608761429,\r\n              -0.923879533,\r\n              -0.130526192,\r\n               0.991444861,\r\n              -0.382683432,\r\n              -0.793353340 ],\r\n\r\n  /*  6 */  [ -0.793353340,\r\n               0.382683432,\r\n               0.991444861,\r\n               0.130526192,\r\n              -0.923879533,\r\n              -0.608761429 ],\r\n\r\n  /*  1 */  [  0.382683432,\r\n              -0.923879533,\r\n               0.923879533,\r\n              -0.382683432,\r\n              -0.382683432,\r\n               0.923879533 ],\r\n\r\n  /*  7 */  [ -0.923879533,\r\n              -0.382683432,\r\n               0.382683432,\r\n               0.923879533,\r\n               0.923879533,\r\n               0.382683432 ],\r\n\r\n  /*  2 */  [  0.130526192,\r\n              -0.382683432,\r\n               0.608761429,\r\n              -0.793353340,\r\n               0.923879533,\r\n              -0.991444861 ],\r\n\r\n  /*  8 */  [ -0.991444861,\r\n              -0.923879533,\r\n              -0.793353340,\r\n              -0.608761429,\r\n              -0.382683432,\r\n              -0.130526192 ]\r\n]\r\n\r\nexport default imdct_s;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/imdct_s.js","/*\r\n * NAME:    synth.init()\r\n * DESCRIPTION: initialize synth struct\r\n */\r\nvar Synth = function () {\r\n    this.filter = [];\r\n    this.mute();\r\n    this.phase = 0;\r\n    \r\n    this.pcm = {\r\n        samplerate: 0,\r\n        channels: 0,\r\n        length: 0,\r\n        samples: [\r\n            // new Float64Array(new ArrayBuffer(8 * 1152)),\r\n            // new Float64Array(new ArrayBuffer(8 * 1152))\r\n            [],\r\n            []\r\n        ]\r\n    };\r\n    \r\n    // this.pcm.clone = function() {\r\n    //     var copy = {};\r\n    //     copy.samplerate = this.samplerate;\r\n    //     copy.channels = this.channels;\r\n    //     copy.length = this.length;\r\n    //     copy.samples = [\r\n    //         // new Float64Array(new ArrayBuffer(8 * 1152)),\r\n    //         // new Float64Array(new ArrayBuffer(8 * 1152))\r\n    //         [],\r\n    //         []\r\n    //     ];\r\n    //     copy.samples[0].set(this.samples[0]);\r\n    //     copy.samples[1].set(this.samples[1]);\r\n    //     return copy;\r\n    // }; \r\n}\r\n\r\n/*\r\n * NAME:    synth.mute()\r\n * DESCRIPTION: zero all polyphase filterbank values, resetting synthesis\r\n */\r\nSynth.prototype.mute = function () {\r\n    for (var ch = 0; ch < 2; ++ch) {\r\n        this.filter[ch] = [ [ [], [] ], [ [], [] ] ];\r\n        \r\n        for (var s = 0; s < 16; ++s) {\r\n            this.filter[ch][0][0][s] = [];\r\n            this.filter[ch][0][1][s] = [];\r\n            this.filter[ch][1][0][s] = [];\r\n            this.filter[ch][1][1][s] = [];\r\n            \r\n            for (var v = 0; v < 8; ++v) {\r\n                this.filter[ch][0][0][s][v] = 0;\r\n                this.filter[ch][0][1][s][v] = 0;\r\n                this.filter[ch][1][0][s][v] = 0;\r\n                this.filter[ch][1][1][s][v] = 0;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/* costab[i] = cos(PI / (2 * 32) * i) */\r\nvar costab1  =  0.998795456;\r\nvar costab2  =  0.995184727;\r\nvar costab3  =  0.989176510;\r\nvar costab4  =  0.980785280;\r\nvar costab5  =  0.970031253;\r\nvar costab6  =  0.956940336;\r\nvar costab7  =  0.941544065;\r\nvar costab8  =  0.923879533;\r\nvar costab9  =  0.903989293;\r\nvar costab10 =  0.881921264;\r\nvar costab11 =  0.857728610;\r\nvar costab12 =  0.831469612;\r\nvar costab13 =  0.803207531;\r\nvar costab14 =  0.773010453;\r\nvar costab15 =  0.740951125;\r\nvar costab16 =  0.707106781;\r\nvar costab17 =  0.671558955;\r\nvar costab18 =  0.634393284;\r\nvar costab19 =  0.595699304;\r\nvar costab20 =  0.555570233;\r\nvar costab21 =  0.514102744;\r\nvar costab22 =  0.471396737;\r\nvar costab23 =  0.427555093;\r\nvar costab24 =  0.382683432;\r\nvar costab25 =  0.336889853;\r\nvar costab26 =  0.290284677;\r\nvar costab27 =  0.242980180;\r\nvar costab28 =  0.195090322;\r\nvar costab29 =  0.146730474;\r\nvar costab30 =  0.098017140;\r\nvar costab31 =  0.049067674;\r\n\r\n/*\r\n * NAME:    dct32()\r\n * DESCRIPTION: perform fast in[32].out[32] DCT\r\n */\r\nSynth.dct32 = function (_in /* [32] */, slot, lo /* [16][8] */, hi /* [16][8] */) {\r\n    var t0,   t1,   t2,   t3,   t4,   t5,   t6,   t7;\r\n    var t8,   t9,   t10,  t11,  t12,  t13,  t14,  t15;\r\n    var t16,  t17,  t18,  t19,  t20,  t21,  t22,  t23;\r\n    var t24,  t25,  t26,  t27,  t28,  t29,  t30,  t31;\r\n    var t32,  t33,  t34,  t35,  t36,  t37,  t38,  t39;\r\n    var t40,  t41,  t42,  t43,  t44,  t45,  t46,  t47;\r\n    var t48,  t49,  t50,  t51,  t52,  t53,  t54,  t55;\r\n    var t56,  t57,  t58,  t59,  t60,  t61,  t62,  t63;\r\n    var t64,  t65,  t66,  t67,  t68,  t69,  t70,  t71;\r\n    var t72,  t73,  t74,  t75,  t76,  t77,  t78,  t79;\r\n    var t80,  t81,  t82,  t83,  t84,  t85,  t86,  t87;\r\n    var t88,  t89,  t90,  t91,  t92,  t93,  t94,  t95;\r\n    var t96,  t97,  t98,  t99,  t100, t101, t102, t103;\r\n    var t104, t105, t106, t107, t108, t109, t110, t111;\r\n    var t112, t113, t114, t115, t116, t117, t118, t119;\r\n    var t120, t121, t122, t123, t124, t125, t126, t127;\r\n    var t128, t129, t130, t131, t132, t133, t134, t135;\r\n    var t136, t137, t138, t139, t140, t141, t142, t143;\r\n    var t144, t145, t146, t147, t148, t149, t150, t151;\r\n    var t152, t153, t154, t155, t156, t157, t158, t159;\r\n    var t160, t161, t162, t163, t164, t165, t166, t167;\r\n    var t168, t169, t170, t171, t172, t173, t174, t175;\r\n    var t176;\r\n\r\n\r\n    // var sys = require('sys');\r\n    // for (i = 0; i < 32; i++) {\r\n    //     sys.print(_in[i].toFixed(8) + \"\\t\");\r\n    //     if (i % 8 == 7) sys.print(\"\\n\");\r\n    // }\r\n\r\n    t0   = _in[0]  + _in[31];  t16  = ((_in[0]  - _in[31]) * (costab1));\r\n    t1   = _in[15] + _in[16];  t17  = ((_in[15] - _in[16]) * (costab31));\r\n\r\n    t41  = t16 + t17;\r\n    t59  = ((t16 - t17) * (costab2));\r\n    t33  = t0  + t1;\r\n    t50  = ((t0  - t1) * ( costab2));\r\n\r\n    t2   = _in[7]  + _in[24];  t18  = ((_in[7]  - _in[24]) * (costab15));\r\n    t3   = _in[8]  + _in[23];  t19  = ((_in[8]  - _in[23]) * (costab17));\r\n\r\n    t42  = t18 + t19;\r\n    t60  = ((t18 - t19) * (costab30));\r\n    t34  = t2  + t3;\r\n    t51  = ((t2  - t3) * ( costab30));\r\n\r\n    t4   = _in[3]  + _in[28];  t20  = ((_in[3]  - _in[28]) * (costab7));\r\n    t5   = _in[12] + _in[19];  t21  = ((_in[12] - _in[19]) * (costab25));\r\n\r\n    t43  = t20 + t21;\r\n    t61  = ((t20 - t21) * (costab14));\r\n    t35  = t4  + t5;\r\n    t52  = ((t4  - t5) * ( costab14));\r\n\r\n    t6   = _in[4]  + _in[27];  t22  = ((_in[4]  - _in[27]) * (costab9));\r\n    t7   = _in[11] + _in[20];  t23  = ((_in[11] - _in[20]) * (costab23));\r\n\r\n    t44  = t22 + t23;\r\n    t62  = ((t22 - t23) * (costab18));\r\n    t36  = t6  + t7;\r\n    t53  = ((t6  - t7) * ( costab18));\r\n\r\n    t8   = _in[1]  + _in[30];  t24  = ((_in[1]  - _in[30]) * (costab3));\r\n    t9   = _in[14] + _in[17];  t25  = ((_in[14] - _in[17]) * (costab29));\r\n\r\n    t45  = t24 + t25;\r\n    t63  = ((t24 - t25) * (costab6));\r\n    t37  = t8  + t9;\r\n    t54  = ((t8  - t9) * ( costab6));\r\n\r\n    t10  = _in[6]  + _in[25];  t26  = ((_in[6]  - _in[25]) * (costab13));\r\n    t11  = _in[9]  + _in[22];  t27  = ((_in[9]  - _in[22]) * (costab19));\r\n\r\n    t46  = t26 + t27;\r\n    t64  = ((t26 - t27) * (costab26));\r\n    t38  = t10 + t11;\r\n    t55  = ((t10 - t11) * (costab26));\r\n\r\n    t12  = _in[2]  + _in[29];  t28  = ((_in[2]  - _in[29]) * (costab5));\r\n    t13  = _in[13] + _in[18];  t29  = ((_in[13] - _in[18]) * (costab27));\r\n\r\n    t47  = t28 + t29;\r\n    t65  = ((t28 - t29) * (costab10));\r\n    t39  = t12 + t13;\r\n    t56  = ((t12 - t13) * (costab10));\r\n\r\n    t14  = _in[5]  + _in[26];  t30  = ((_in[5]  - _in[26]) * (costab11));\r\n    t15  = _in[10] + _in[21];  t31  = ((_in[10] - _in[21]) * (costab21));\r\n\r\n    t48  = t30 + t31;\r\n    t66  = ((t30 - t31) * (costab22));\r\n    t40  = t14 + t15;\r\n    t57  = ((t14 - t15) * (costab22));\r\n\r\n    t69  = t33 + t34;  t89  = ((t33 - t34) * (costab4));\r\n    t70  = t35 + t36;  t90  = ((t35 - t36) * (costab28));\r\n    t71  = t37 + t38;  t91  = ((t37 - t38) * (costab12));\r\n    t72  = t39 + t40;  t92  = ((t39 - t40) * (costab20));\r\n    t73  = t41 + t42;  t94  = ((t41 - t42) * (costab4));\r\n    t74  = t43 + t44;  t95  = ((t43 - t44) * (costab28));\r\n    t75  = t45 + t46;  t96  = ((t45 - t46) * (costab12));\r\n    t76  = t47 + t48;  t97  = ((t47 - t48) * (costab20));\r\n\r\n    t78  = t50 + t51;  t100 = ((t50 - t51) * (costab4));\r\n    t79  = t52 + t53;  t101 = ((t52 - t53) * (costab28));\r\n    t80  = t54 + t55;  t102 = ((t54 - t55) * (costab12));\r\n    t81  = t56 + t57;  t103 = ((t56 - t57) * (costab20));\r\n\r\n    t83  = t59 + t60;  t106 = ((t59 - t60) * (costab4));\r\n    t84  = t61 + t62;  t107 = ((t61 - t62) * (costab28));\r\n    t85  = t63 + t64;  t108 = ((t63 - t64) * (costab12));\r\n    t86  = t65 + t66;  t109 = ((t65 - t66) * (costab20));\r\n\r\n    t113 = t69  + t70;\r\n    t114 = t71  + t72;\r\n\r\n    /*  0 */ hi[15][slot] = t113 + t114;\r\n    /* 16 */ lo[ 0][slot] = ((t113 - t114) * (costab16));\r\n\r\n    t115 = t73  + t74;\r\n    t116 = t75  + t76;\r\n\r\n    t32  = t115 + t116;\r\n\r\n    /*  1 */ hi[14][slot] = t32;\r\n\r\n    t118 = t78  + t79;\r\n    t119 = t80  + t81;\r\n\r\n    t58  = t118 + t119;\r\n\r\n    /*  2 */ hi[13][slot] = t58;\r\n\r\n    t121 = t83  + t84;\r\n    t122 = t85  + t86;\r\n\r\n    t67  = t121 + t122;\r\n\r\n    t49  = (t67 * 2) - t32;\r\n\r\n    /*  3 */ hi[12][slot] = t49;\r\n\r\n    t125 = t89  + t90;\r\n    t126 = t91  + t92;\r\n\r\n    t93  = t125 + t126;\r\n\r\n    /*  4 */ hi[11][slot] = t93;\r\n\r\n    t128 = t94  + t95;\r\n    t129 = t96  + t97;\r\n\r\n    t98  = t128 + t129;\r\n\r\n    t68  = (t98 * 2) - t49;\r\n\r\n    /*  5 */ hi[10][slot] = t68;\r\n\r\n    t132 = t100 + t101;\r\n    t133 = t102 + t103;\r\n\r\n    t104 = t132 + t133;\r\n\r\n    t82  = (t104 * 2) - t58;\r\n\r\n    /*  6 */ hi[ 9][slot] = t82;\r\n\r\n    t136 = t106 + t107;\r\n    t137 = t108 + t109;\r\n\r\n    t110 = t136 + t137;\r\n\r\n    t87  = (t110 * 2) - t67;\r\n\r\n    t77  = (t87 * 2) - t68;\r\n\r\n    /*  7 */ hi[ 8][slot] = t77;\r\n\r\n    t141 = ((t69 - t70) * (costab8));\r\n    t142 = ((t71 - t72) * (costab24));\r\n    t143 = t141 + t142;\r\n\r\n    /*  8 */ hi[ 7][slot] = t143;\r\n    /* 24 */ lo[ 8][slot] =\r\n        (((t141 - t142) * (costab16) * 2)) - t143;\r\n\r\n    t144 = ((t73 - t74) * (costab8));\r\n    t145 = ((t75 - t76) * (costab24));\r\n    t146 = t144 + t145;\r\n\r\n    t88  = (t146 * 2) - t77;\r\n\r\n    /*  9 */ hi[ 6][slot] = t88;\r\n\r\n    t148 = ((t78 - t79) * (costab8));\r\n    t149 = ((t80 - t81) * (costab24));\r\n    t150 = t148 + t149;\r\n\r\n    t105 = (t150 * 2) - t82;\r\n\r\n    /* 10 */ hi[ 5][slot] = t105;\r\n\r\n    t152 = ((t83 - t84) * (costab8));\r\n    t153 = ((t85 - t86) * (costab24));\r\n    t154 = t152 + t153;\r\n\r\n    t111 = (t154 * 2) - t87;\r\n\r\n    t99  = (t111 * 2) - t88;\r\n\r\n    /* 11 */ hi[ 4][slot] = t99;\r\n\r\n    t157 = ((t89 - t90) * (costab8));\r\n    t158 = ((t91 - t92) * (costab24));\r\n    t159 = t157 + t158;\r\n\r\n    t127 = (t159 * 2) - t93;\r\n\r\n    /* 12 */ hi[ 3][slot] = t127;\r\n\r\n    t160 = (((t125 - t126) * (costab16) * 2)) - t127;\r\n\r\n    /* 20 */ lo[ 4][slot] = t160;\r\n    /* 28 */ lo[12][slot] =\r\n        (((((t157 - t158) * (costab16) * 2) - t159) * 2)) - t160;\r\n\r\n    t161 = ((t94 - t95) * (costab8));\r\n    t162 = ((t96 - t97) * (costab24));\r\n    t163 = t161 + t162;\r\n\r\n    t130 = (t163 * 2) - t98;\r\n\r\n    t112 = (t130 * 2) - t99;\r\n\r\n    /* 13 */ hi[ 2][slot] = t112;\r\n\r\n    t164 = (((t128 - t129) * (costab16) * 2)) - t130;\r\n\r\n    t166 = ((t100 - t101) * (costab8));\r\n    t167 = ((t102 - t103) * (costab24));\r\n    t168 = t166 + t167;\r\n\r\n    t134 = (t168 * 2) - t104;\r\n\r\n    t120 = (t134 * 2) - t105;\r\n\r\n    /* 14 */ hi[ 1][slot] = t120;\r\n\r\n    t135 = (((t118 - t119) * (costab16) * 2)) - t120;\r\n\r\n    /* 18 */ lo[ 2][slot] = t135;\r\n\r\n    t169 = (((t132 - t133) * (costab16) * 2)) - t134;\r\n\r\n    t151 = (t169 * 2) - t135;\r\n\r\n    /* 22 */ lo[ 6][slot] = t151;\r\n\r\n    t170 = (((((t148 - t149) * (costab16) * 2) - t150) * 2)) - t151;\r\n\r\n    /* 26 */ lo[10][slot] = t170;\r\n    /* 30 */ lo[14][slot] =\r\n        (((((((t166 - t167) * (costab16)) * 2 -\r\n             t168) * 2) - t169) * 2) - t170);\r\n\r\n    t171 = ((t106 - t107) * (costab8));\r\n    t172 = ((t108 - t109) * (costab24));\r\n    t173 = t171 + t172;\r\n\r\n    t138 = (t173 * 2) - t110;\r\n\r\n    t123 = (t138 * 2) - t111;\r\n\r\n    t139 = (((t121 - t122) * (costab16) * 2)) - t123;\r\n\r\n    t117 = (t123 * 2) - t112;\r\n\r\n    /* 15 */ hi[ 0][slot] = t117;\r\n\r\n    t124 = (((t115 - t116) * (costab16) * 2)) - t117;\r\n\r\n    /* 17 */ lo[ 1][slot] = t124;\r\n\r\n    t131 = (t139 * 2) - t124;\r\n\r\n    /* 19 */ lo[ 3][slot] = t131;\r\n\r\n    t140 = (t164 * 2) - t131;\r\n\r\n    /* 21 */ lo[ 5][slot] = t140;\r\n\r\n    t174 = (((t136 - t137) * (costab16) * 2)) - t138;\r\n\r\n    t155 = (t174 * 2) - t139;\r\n\r\n    t147 = (t155 * 2) - t140;\r\n\r\n    /* 23 */ lo[ 7][slot] = t147;\r\n\r\n    t156 = (((((t144 - t145) * (costab16) * 2) - t146) * 2)) - t147;\r\n\r\n    /* 25 */ lo[ 9][slot] = t156;\r\n\r\n    t175 = (((((t152 - t153) * (costab16) * 2) - t154) * 2)) - t155;\r\n\r\n    t165 = (t175 * 2) - t156;\r\n\r\n    /* 27 */ lo[11][slot] = t165;\r\n\r\n    t176 = (((((((t161 - t162) * (costab16) * 2)) -\r\n               t163) * 2) - t164) * 2) - t165;\r\n\r\n    /* 29 */ lo[13][slot] = t176;\r\n    /* 31 */ lo[15][slot] =\r\n        (((((((((t171 - t172) * (costab16)) * 2 -\r\n               t173) * 2) - t174) * 2) - t175) * 2) - t176);\r\n\r\n    /*\r\n     * Totals:\r\n     *  80 multiplies\r\n     *  80 additions\r\n     * 119 subtractions\r\n     *  49 shifts (not counting SSO)\r\n     */\r\n}\r\n\r\nvar D /* [17][32] */ = [\r\n    /*\r\n     * These are the coefficients for the subband synthesis window. This is a\r\n     * reordered version of Table B.3 from ISO/IEC 11172-3.\r\n     */\r\n    [  0.000000000,   /*  0 */\r\n       -0.000442505,\r\n       0.003250122,\r\n       -0.007003784,\r\n       0.031082153,\r\n       -0.078628540,\r\n       0.100311279,\r\n       -0.572036743,\r\n       1.144989014,\r\n       0.572036743,\r\n       0.100311279,\r\n       0.078628540,\r\n       0.031082153,\r\n       0.007003784,\r\n       0.003250122,\r\n       0.000442505,\r\n\r\n       0.000000000,\r\n       -0.000442505,\r\n       0.003250122,\r\n       -0.007003784,\r\n       0.031082153,\r\n       -0.078628540,\r\n       0.100311279,\r\n       -0.572036743,\r\n       1.144989014,\r\n       0.572036743,\r\n       0.100311279,\r\n       0.078628540,\r\n       0.031082153,\r\n       0.007003784,\r\n       0.003250122,\r\n       0.000442505 ],\r\n\r\n    [ -0.000015259,   /*  1 */\r\n      -0.000473022,\r\n      0.003326416,\r\n      -0.007919312,\r\n      0.030517578,\r\n      -0.084182739,\r\n      0.090927124,\r\n      -0.600219727,\r\n      1.144287109,\r\n      0.543823242,\r\n      0.108856201,\r\n      0.073059082,\r\n      0.031478882,\r\n      0.006118774,\r\n      0.003173828,\r\n      0.000396729,\r\n\r\n      -0.000015259,\r\n      -0.000473022,\r\n      0.003326416,\r\n      -0.007919312,\r\n      0.030517578,\r\n      -0.084182739,\r\n      0.090927124,\r\n      -0.600219727,\r\n      1.144287109,\r\n      0.543823242,\r\n      0.108856201,\r\n      0.073059082,\r\n      0.031478882,\r\n      0.006118774,\r\n      0.003173828,\r\n      0.000396729 ],\r\n\r\n    [ -0.000015259,   /*  2 */\r\n      -0.000534058,\r\n      0.003387451,\r\n      -0.008865356,\r\n      0.029785156,\r\n      -0.089706421,\r\n      0.080688477,\r\n      -0.628295898,\r\n      1.142211914,\r\n      0.515609741,\r\n      0.116577148,\r\n      0.067520142,\r\n      0.031738281,\r\n      0.005294800,\r\n      0.003082275,\r\n      0.000366211,\r\n\r\n      -0.000015259,\r\n      -0.000534058,\r\n      0.003387451,\r\n      -0.008865356,\r\n      0.029785156,\r\n      -0.089706421,\r\n      0.080688477,\r\n      -0.628295898,\r\n      1.142211914,\r\n      0.515609741,\r\n      0.116577148,\r\n      0.067520142,\r\n      0.031738281,\r\n      0.005294800,\r\n      0.003082275,\r\n      0.000366211 ],\r\n\r\n    [ -0.000015259,   /*  3 */\r\n      -0.000579834,\r\n      0.003433228,\r\n      -0.009841919,\r\n      0.028884888,\r\n      -0.095169067,\r\n      0.069595337,\r\n      -0.656219482,\r\n      1.138763428,\r\n      0.487472534,\r\n      0.123474121,\r\n      0.061996460,\r\n      0.031845093,\r\n      0.004486084,\r\n      0.002990723,\r\n      0.000320435,\r\n\r\n      -0.000015259,\r\n      -0.000579834,\r\n      0.003433228,\r\n      -0.009841919,\r\n      0.028884888,\r\n      -0.095169067,\r\n      0.069595337,\r\n      -0.656219482,\r\n      1.138763428,\r\n      0.487472534,\r\n      0.123474121,\r\n      0.061996460,\r\n      0.031845093,\r\n      0.004486084,\r\n      0.002990723,\r\n      0.000320435 ],\r\n\r\n    [ -0.000015259,   /*  4 */\r\n      -0.000625610,\r\n      0.003463745,\r\n      -0.010848999,\r\n      0.027801514,\r\n      -0.100540161,\r\n      0.057617187,\r\n      -0.683914185,\r\n      1.133926392,\r\n      0.459472656,\r\n      0.129577637,\r\n      0.056533813,\r\n      0.031814575,\r\n      0.003723145,\r\n      0.002899170,\r\n      0.000289917,\r\n\r\n      -0.000015259,\r\n      -0.000625610,\r\n      0.003463745,\r\n      -0.010848999,\r\n      0.027801514,\r\n      -0.100540161,\r\n      0.057617187,\r\n      -0.683914185,\r\n      1.133926392,\r\n      0.459472656,\r\n      0.129577637,\r\n      0.056533813,\r\n      0.031814575,\r\n      0.003723145,\r\n      0.002899170,\r\n      0.000289917 ],\r\n\r\n    [ -0.000015259,   /*  5 */\r\n      -0.000686646,\r\n      0.003479004,\r\n      -0.011886597,\r\n      0.026535034,\r\n      -0.105819702,\r\n      0.044784546,\r\n      -0.711318970,\r\n      1.127746582,\r\n      0.431655884,\r\n      0.134887695,\r\n      0.051132202,\r\n      0.031661987,\r\n      0.003005981,\r\n      0.002792358,\r\n      0.000259399,\r\n\r\n      -0.000015259,\r\n      -0.000686646,\r\n      0.003479004,\r\n      -0.011886597,\r\n      0.026535034,\r\n      -0.105819702,\r\n      0.044784546,\r\n      -0.711318970,\r\n      1.127746582,\r\n      0.431655884,\r\n      0.134887695,\r\n      0.051132202,\r\n      0.031661987,\r\n      0.003005981,\r\n      0.002792358,\r\n      0.000259399 ],\r\n\r\n    [ -0.000015259,   /*  6 */\r\n      -0.000747681,\r\n      0.003479004,\r\n      -0.012939453,\r\n      0.025085449,\r\n      -0.110946655,\r\n      0.031082153,\r\n      -0.738372803,\r\n      1.120223999,\r\n      0.404083252,\r\n      0.139450073,\r\n      0.045837402,\r\n      0.031387329,\r\n      0.002334595,\r\n      0.002685547,\r\n      0.000244141,\r\n\r\n      -0.000015259,\r\n      -0.000747681,\r\n      0.003479004,\r\n      -0.012939453,\r\n      0.025085449,\r\n      -0.110946655,\r\n      0.031082153,\r\n      -0.738372803,\r\n      1.120223999,\r\n      0.404083252,\r\n      0.139450073,\r\n      0.045837402,\r\n      0.031387329,\r\n      0.002334595,\r\n      0.002685547,\r\n      0.000244141 ],\r\n\r\n    [ -0.000030518,   /*  7 */\r\n      -0.000808716,\r\n      0.003463745,\r\n      -0.014022827,\r\n      0.023422241,\r\n      -0.115921021,\r\n      0.016510010,\r\n      -0.765029907,\r\n      1.111373901,\r\n      0.376800537,\r\n      0.143264771,\r\n      0.040634155,\r\n      0.031005859,\r\n      0.001693726,\r\n      0.002578735,\r\n      0.000213623,\r\n\r\n      -0.000030518,\r\n      -0.000808716,\r\n      0.003463745,\r\n      -0.014022827,\r\n      0.023422241,\r\n      -0.115921021,\r\n      0.016510010,\r\n      -0.765029907,\r\n      1.111373901,\r\n      0.376800537,\r\n      0.143264771,\r\n      0.040634155,\r\n      0.031005859,\r\n      0.001693726,\r\n      0.002578735,\r\n      0.000213623 ],\r\n\r\n    [ -0.000030518,   /*  8 */\r\n      -0.000885010,\r\n      0.003417969,\r\n      -0.015121460,\r\n      0.021575928,\r\n      -0.120697021,\r\n      0.001068115,\r\n      -0.791213989,\r\n      1.101211548,\r\n      0.349868774,\r\n      0.146362305,\r\n      0.035552979,\r\n      0.030532837,\r\n      0.001098633,\r\n      0.002456665,\r\n      0.000198364,\r\n\r\n      -0.000030518,\r\n      -0.000885010,\r\n      0.003417969,\r\n      -0.015121460,\r\n      0.021575928,\r\n      -0.120697021,\r\n      0.001068115,\r\n      -0.791213989,\r\n      1.101211548,\r\n      0.349868774,\r\n      0.146362305,\r\n      0.035552979,\r\n      0.030532837,\r\n      0.001098633,\r\n      0.002456665,\r\n      0.000198364 ],\r\n\r\n    [ -0.000030518,   /*  9 */\r\n      -0.000961304,\r\n      0.003372192,\r\n      -0.016235352,\r\n      0.019531250,\r\n      -0.125259399,\r\n      -0.015228271,\r\n      -0.816864014,\r\n      1.089782715,\r\n      0.323318481,\r\n      0.148773193,\r\n      0.030609131,\r\n      0.029937744,\r\n      0.000549316,\r\n      0.002349854,\r\n      0.000167847,\r\n\r\n      -0.000030518,\r\n      -0.000961304,\r\n      0.003372192,\r\n      -0.016235352,\r\n      0.019531250,\r\n      -0.125259399,\r\n      -0.015228271,\r\n      -0.816864014,\r\n      1.089782715,\r\n      0.323318481,\r\n      0.148773193,\r\n      0.030609131,\r\n      0.029937744,\r\n      0.000549316,\r\n      0.002349854,\r\n      0.000167847 ],\r\n\r\n    [ -0.000030518,   /* 10 */\r\n      -0.001037598,\r\n      0.003280640,\r\n      -0.017349243,\r\n      0.017257690,\r\n      -0.129562378,\r\n      -0.032379150,\r\n      -0.841949463,\r\n      1.077117920,\r\n      0.297210693,\r\n      0.150497437,\r\n      0.025817871,\r\n      0.029281616,\r\n      0.000030518,\r\n      0.002243042,\r\n      0.000152588,\r\n\r\n      -0.000030518,\r\n      -0.001037598,\r\n      0.003280640,\r\n      -0.017349243,\r\n      0.017257690,\r\n      -0.129562378,\r\n      -0.032379150,\r\n      -0.841949463,\r\n      1.077117920,\r\n      0.297210693,\r\n      0.150497437,\r\n      0.025817871,\r\n      0.029281616,\r\n      0.000030518,\r\n      0.002243042,\r\n      0.000152588 ],\r\n\r\n    [ -0.000045776,   /* 11 */\r\n      -0.001113892,\r\n      0.003173828,\r\n      -0.018463135,\r\n      0.014801025,\r\n      -0.133590698,\r\n      -0.050354004,\r\n      -0.866363525,\r\n      1.063217163,\r\n      0.271591187,\r\n      0.151596069,\r\n      0.021179199,\r\n      0.028533936,\r\n      -0.000442505,\r\n      0.002120972,\r\n      0.000137329,\r\n\r\n      -0.000045776,\r\n      -0.001113892,\r\n      0.003173828,\r\n      -0.018463135,\r\n      0.014801025,\r\n      -0.133590698,\r\n      -0.050354004,\r\n      -0.866363525,\r\n      1.063217163,\r\n      0.271591187,\r\n      0.151596069,\r\n      0.021179199,\r\n      0.028533936,\r\n      -0.000442505,\r\n      0.002120972,\r\n      0.000137329 ],\r\n\r\n    [ -0.000045776,   /* 12 */\r\n      -0.001205444,\r\n      0.003051758,\r\n      -0.019577026,\r\n      0.012115479,\r\n      -0.137298584,\r\n      -0.069168091,\r\n      -0.890090942,\r\n      1.048156738,\r\n      0.246505737,\r\n      0.152069092,\r\n      0.016708374,\r\n      0.027725220,\r\n      -0.000869751,\r\n      0.002014160,\r\n      0.000122070,\r\n\r\n      -0.000045776,\r\n      -0.001205444,\r\n      0.003051758,\r\n      -0.019577026,\r\n      0.012115479,\r\n      -0.137298584,\r\n      -0.069168091,\r\n      -0.890090942,\r\n      1.048156738,\r\n      0.246505737,\r\n      0.152069092,\r\n      0.016708374,\r\n      0.027725220,\r\n      -0.000869751,\r\n      0.002014160,\r\n      0.000122070 ],\r\n\r\n    [ -0.000061035,   /* 13 */\r\n      -0.001296997,\r\n      0.002883911,\r\n      -0.020690918,\r\n      0.009231567,\r\n      -0.140670776,\r\n      -0.088775635,\r\n      -0.913055420,\r\n      1.031936646,\r\n      0.221984863,\r\n      0.151962280,\r\n      0.012420654,\r\n      0.026840210,\r\n      -0.001266479,\r\n      0.001907349,\r\n      0.000106812,\r\n\r\n      -0.000061035,\r\n      -0.001296997,\r\n      0.002883911,\r\n      -0.020690918,\r\n      0.009231567,\r\n      -0.140670776,\r\n      -0.088775635,\r\n      -0.913055420,\r\n      1.031936646,\r\n      0.221984863,\r\n      0.151962280,\r\n      0.012420654,\r\n      0.026840210,\r\n      -0.001266479,\r\n      0.001907349,\r\n      0.000106812 ],\r\n\r\n    [ -0.000061035,   /* 14 */\r\n      -0.001388550,\r\n      0.002700806,\r\n      -0.021789551,\r\n      0.006134033,\r\n      -0.143676758,\r\n      -0.109161377,\r\n      -0.935195923,\r\n      1.014617920,\r\n      0.198059082,\r\n      0.151306152,\r\n      0.008316040,\r\n      0.025909424,\r\n      -0.001617432,\r\n      0.001785278,\r\n      0.000106812,\r\n\r\n      -0.000061035,\r\n      -0.001388550,\r\n      0.002700806,\r\n      -0.021789551,\r\n      0.006134033,\r\n      -0.143676758,\r\n      -0.109161377,\r\n      -0.935195923,\r\n      1.014617920,\r\n      0.198059082,\r\n      0.151306152,\r\n      0.008316040,\r\n      0.025909424,\r\n      -0.001617432,\r\n      0.001785278,\r\n      0.000106812 ],\r\n\r\n    [ -0.000076294,   /* 15 */\r\n      -0.001480103,\r\n      0.002487183,\r\n      -0.022857666,\r\n      0.002822876,\r\n      -0.146255493,\r\n      -0.130310059,\r\n      -0.956481934,\r\n      0.996246338,\r\n      0.174789429,\r\n      0.150115967,\r\n      0.004394531,\r\n      0.024932861,\r\n      -0.001937866,\r\n      0.001693726,\r\n      0.000091553,\r\n\r\n      -0.000076294,\r\n      -0.001480103,\r\n      0.002487183,\r\n      -0.022857666,\r\n      0.002822876,\r\n      -0.146255493,\r\n      -0.130310059,\r\n      -0.956481934,\r\n      0.996246338,\r\n      0.174789429,\r\n      0.150115967,\r\n      0.004394531,\r\n      0.024932861,\r\n      -0.001937866,\r\n      0.001693726,\r\n      0.000091553 ],\r\n\r\n    [ -0.000076294,   /* 16 */\r\n      -0.001586914,\r\n      0.002227783,\r\n      -0.023910522,\r\n      -0.000686646,\r\n      -0.148422241,\r\n      -0.152206421,\r\n      -0.976852417,\r\n      0.976852417,\r\n      0.152206421,\r\n      0.148422241,\r\n      0.000686646,\r\n      0.023910522,\r\n      -0.002227783,\r\n      0.001586914,\r\n      0.000076294,\r\n\r\n      -0.000076294,\r\n      -0.001586914,\r\n      0.002227783,\r\n      -0.023910522,\r\n      -0.000686646,\r\n      -0.148422241,\r\n      -0.152206421,\r\n      -0.976852417,\r\n      0.976852417,\r\n      0.152206421,\r\n      0.148422241,\r\n      0.000686646,\r\n      0.023910522,\r\n      -0.002227783,\r\n      0.001586914,\r\n      0.000076294 ]\r\n];\r\n\r\n/*\r\n * NAME:    synth.full()\r\n * DESCRIPTION: perform full frequency PCM synthesis\r\n */\r\nSynth.prototype.full = function(frame, nch, ns) {\r\n    var Dptr, hi, lo, ptr, _fx, _fe, _fo;\r\n    \r\n    for (var ch = 0; ch < nch; ++ch) {\r\n        var sbsample /* [36][32] */ = frame.sbsample[ch];\r\n        var filter = this.filter[ch]  /* [2][2][16][8] */;\r\n        var phase    = this.phase;\r\n        var pcm      = this.pcm.samples[ch];\r\n        var pcm1Ptr  = 0;\r\n        var pcm2Ptr  = 0;\r\n\r\n        for (var s = 0; s < ns; ++s) {\r\n            Synth.dct32(sbsample[s], phase >> 1, filter[0][phase & 1], filter[1][phase & 1]);\r\n\r\n            var pe = phase & ~1;\r\n            var po = ((phase - 1) & 0xf) | 1;\r\n\r\n            /* calculate 32 samples */\r\n            var fe = filter[0][ phase & 1];\r\n            var fx = filter[0][~phase & 1];\r\n            var fo = filter[1][~phase & 1];\r\n\r\n            var fePtr = 0;\r\n            var fxPtr = 0;\r\n            var foPtr = 0;\r\n            \r\n            Dptr = 0;\r\n\r\n            ptr = D[Dptr];\r\n            _fx = fx[fxPtr];\r\n            _fe = fe[fePtr];\r\n\r\n            lo =  _fx[0] * ptr[po +  0];\r\n            lo += _fx[1] * ptr[po + 14];\r\n            lo += _fx[2] * ptr[po + 12];\r\n            lo += _fx[3] * ptr[po + 10];\r\n            lo += _fx[4] * ptr[po +  8];\r\n            lo += _fx[5] * ptr[po +  6];\r\n            lo += _fx[6] * ptr[po +  4];\r\n            lo += _fx[7] * ptr[po +  2];\r\n            lo = -lo;                      \r\n            \r\n            lo += _fe[0] * ptr[pe +  0];\r\n            lo += _fe[1] * ptr[pe + 14];\r\n            lo += _fe[2] * ptr[pe + 12];\r\n            lo += _fe[3] * ptr[pe + 10];\r\n            lo += _fe[4] * ptr[pe +  8];\r\n            lo += _fe[5] * ptr[pe +  6];\r\n            lo += _fe[6] * ptr[pe +  4];\r\n            lo += _fe[7] * ptr[pe +  2];\r\n\r\n            pcm[pcm1Ptr++] = lo;\r\n            pcm2Ptr = pcm1Ptr + 30;\r\n\r\n            for (var sb = 1; sb < 16; ++sb) {\r\n                ++fePtr;\r\n                ++Dptr;\r\n\r\n                /* D[32 - sb][i] == -D[sb][31 - i] */\r\n\r\n                ptr = D[Dptr];\r\n                _fo = fo[foPtr];\r\n                _fe = fe[fePtr];\r\n\r\n                lo  = _fo[0] * ptr[po +  0];\r\n                lo += _fo[1] * ptr[po + 14];\r\n                lo += _fo[2] * ptr[po + 12];\r\n                lo += _fo[3] * ptr[po + 10];\r\n                lo += _fo[4] * ptr[po +  8];\r\n                lo += _fo[5] * ptr[po +  6];\r\n                lo += _fo[6] * ptr[po +  4];\r\n                lo += _fo[7] * ptr[po +  2];\r\n                lo = -lo;\r\n\r\n                lo += _fe[7] * ptr[pe + 2];\r\n                lo += _fe[6] * ptr[pe + 4];\r\n                lo += _fe[5] * ptr[pe + 6];\r\n                lo += _fe[4] * ptr[pe + 8];\r\n                lo += _fe[3] * ptr[pe + 10];\r\n                lo += _fe[2] * ptr[pe + 12];\r\n                lo += _fe[1] * ptr[pe + 14];\r\n                lo += _fe[0] * ptr[pe + 0];\r\n\r\n                pcm[pcm1Ptr++] = lo;\r\n\r\n                lo =  _fe[0] * ptr[-pe + 31 - 16];\r\n                lo += _fe[1] * ptr[-pe + 31 - 14];\r\n                lo += _fe[2] * ptr[-pe + 31 - 12];\r\n                lo += _fe[3] * ptr[-pe + 31 - 10];\r\n                lo += _fe[4] * ptr[-pe + 31 -  8];\r\n                lo += _fe[5] * ptr[-pe + 31 -  6];\r\n                lo += _fe[6] * ptr[-pe + 31 -  4];\r\n                lo += _fe[7] * ptr[-pe + 31 -  2];\r\n\r\n                lo += _fo[7] * ptr[-po + 31 -  2];\r\n                lo += _fo[6] * ptr[-po + 31 -  4];\r\n                lo += _fo[5] * ptr[-po + 31 -  6];\r\n                lo += _fo[4] * ptr[-po + 31 -  8];\r\n                lo += _fo[3] * ptr[-po + 31 - 10];\r\n                lo += _fo[2] * ptr[-po + 31 - 12];\r\n                lo += _fo[1] * ptr[-po + 31 - 14];\r\n                lo += _fo[0] * ptr[-po + 31 - 16];\r\n\r\n                pcm[pcm2Ptr--] = lo;\r\n                ++foPtr;\r\n            }\r\n\r\n            ++Dptr;\r\n\r\n            ptr = D[Dptr];\r\n            _fo = fo[foPtr];\r\n\r\n            lo  = _fo[0] * ptr[po +  0];\r\n            lo += _fo[1] * ptr[po + 14];\r\n            lo += _fo[2] * ptr[po + 12];\r\n            lo += _fo[3] * ptr[po + 10];\r\n            lo += _fo[4] * ptr[po +  8];\r\n            lo += _fo[5] * ptr[po +  6];\r\n            lo += _fo[6] * ptr[po +  4];\r\n            lo += _fo[7] * ptr[po +  2];\r\n\r\n            pcm[pcm1Ptr] = -lo;\r\n            pcm1Ptr += 16;\r\n            phase = (phase + 1) % 16;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*\r\n * NAME:    synth.half()\r\n * DESCRIPTION: perform half frequency PCM synthesis\r\n */\r\n\r\n// Yeah, I don't think so\r\n\r\n//static\r\n//void synth_half(struct mad_synth *synth, struct mad_frame const *frame,\r\n//      unsigned int nch, unsigned int ns)\r\n//{\r\n//  unsigned int phase, ch, s, sb, pe, po;\r\n//  mad_fixed_t *pcm1, *pcm2, filter[2][2][16][8];\r\n//  mad_fixed_t const (*sbsample)[36][32];\r\n//  register mad_fixed_t (*fe)[8], (*fx)[8], (*fo)[8];\r\n//  register mad_fixed_t const (*Dptr)[32], *ptr;\r\n//  register mad_fixed64hi_t hi;\r\n//  register mad_fixed64lo_t lo;\r\n//\r\n//  for (ch = 0; ch < nch; ++ch) {\r\n//    sbsample = &frame.sbsample[ch];\r\n//    filter   = &synth.filter[ch];\r\n//    phase    = synth.phase;\r\n//    pcm1     = synth.pcm.samples[ch];\r\n//\r\n//    for (s = 0; s < ns; ++s) {\r\n//      dct32((*sbsample)[s], phase >> 1,\r\n//      filter[0][phase & 1], filter[1][phase & 1]);\r\n//\r\n//      pe = phase & ~1;\r\n//      po = ((phase - 1) & 0xf) | 1;\r\n//\r\n//      /* calculate 16 samples */\r\n//\r\n//      fe = &filter[0][ phase & 1][0];\r\n//      fx = &filter[0][~phase & 1][0];\r\n//      fo = &filter[1][~phase & 1][0];\r\n//\r\n//      Dptr = &D[0];\r\n//\r\n//      ptr = *Dptr + po;\r\n//      ML0(hi, lo, (*fx)[0], ptr[ 0]);\r\n//      MLA(hi, lo, (*fx)[1], ptr[14]);\r\n//      MLA(hi, lo, (*fx)[2], ptr[12]);\r\n//      MLA(hi, lo, (*fx)[3], ptr[10]);\r\n//      MLA(hi, lo, (*fx)[4], ptr[ 8]);\r\n//      MLA(hi, lo, (*fx)[5], ptr[ 6]);\r\n//      MLA(hi, lo, (*fx)[6], ptr[ 4]);\r\n//      MLA(hi, lo, (*fx)[7], ptr[ 2]);\r\n//      MLN(hi, lo);\r\n//\r\n//      ptr = *Dptr + pe;\r\n//      MLA(hi, lo, (*fe)[0], ptr[ 0]);\r\n//      MLA(hi, lo, (*fe)[1], ptr[14]);\r\n//      MLA(hi, lo, (*fe)[2], ptr[12]);\r\n//      MLA(hi, lo, (*fe)[3], ptr[10]);\r\n//      MLA(hi, lo, (*fe)[4], ptr[ 8]);\r\n//      MLA(hi, lo, (*fe)[5], ptr[ 6]);\r\n//      MLA(hi, lo, (*fe)[6], ptr[ 4]);\r\n//      MLA(hi, lo, (*fe)[7], ptr[ 2]);\r\n//\r\n//      *pcm1++ = MLZ(hi, lo);\r\n//\r\n//      pcm2 = pcm1 + 14;\r\n//\r\n//      for (sb = 1; sb < 16; ++sb) {\r\n//  ++fe;\r\n//  ++Dptr;\r\n//\r\n//  /* D[32 - sb][i] == -D[sb][31 - i] */\r\n//\r\n//  if (!(sb & 1)) {\r\n//    ptr = *Dptr + po;\r\n//    ML0(hi, lo, (*fo)[0], ptr[ 0]);\r\n//    MLA(hi, lo, (*fo)[1], ptr[14]);\r\n//    MLA(hi, lo, (*fo)[2], ptr[12]);\r\n//    MLA(hi, lo, (*fo)[3], ptr[10]);\r\n//    MLA(hi, lo, (*fo)[4], ptr[ 8]);\r\n//    MLA(hi, lo, (*fo)[5], ptr[ 6]);\r\n//    MLA(hi, lo, (*fo)[6], ptr[ 4]);\r\n//    MLA(hi, lo, (*fo)[7], ptr[ 2]);\r\n//    MLN(hi, lo);\r\n//\r\n//    ptr = *Dptr + pe;\r\n//    MLA(hi, lo, (*fe)[7], ptr[ 2]);\r\n//    MLA(hi, lo, (*fe)[6], ptr[ 4]);\r\n//    MLA(hi, lo, (*fe)[5], ptr[ 6]);\r\n//    MLA(hi, lo, (*fe)[4], ptr[ 8]);\r\n//    MLA(hi, lo, (*fe)[3], ptr[10]);\r\n//    MLA(hi, lo, (*fe)[2], ptr[12]);\r\n//    MLA(hi, lo, (*fe)[1], ptr[14]);\r\n//    MLA(hi, lo, (*fe)[0], ptr[ 0]);\r\n//\r\n//    *pcm1++ = MLZ(hi, lo);\r\n//\r\n//    ptr = *Dptr - po;\r\n//    ML0(hi, lo, (*fo)[7], ptr[31 -  2]);\r\n//    MLA(hi, lo, (*fo)[6], ptr[31 -  4]);\r\n//    MLA(hi, lo, (*fo)[5], ptr[31 -  6]);\r\n//    MLA(hi, lo, (*fo)[4], ptr[31 -  8]);\r\n//    MLA(hi, lo, (*fo)[3], ptr[31 - 10]);\r\n//    MLA(hi, lo, (*fo)[2], ptr[31 - 12]);\r\n//    MLA(hi, lo, (*fo)[1], ptr[31 - 14]);\r\n//    MLA(hi, lo, (*fo)[0], ptr[31 - 16]);\r\n//\r\n//    ptr = *Dptr - pe;\r\n//    MLA(hi, lo, (*fe)[0], ptr[31 - 16]);\r\n//    MLA(hi, lo, (*fe)[1], ptr[31 - 14]);\r\n//    MLA(hi, lo, (*fe)[2], ptr[31 - 12]);\r\n//    MLA(hi, lo, (*fe)[3], ptr[31 - 10]);\r\n//    MLA(hi, lo, (*fe)[4], ptr[31 -  8]);\r\n//    MLA(hi, lo, (*fe)[5], ptr[31 -  6]);\r\n//    MLA(hi, lo, (*fe)[6], ptr[31 -  4]);\r\n//    MLA(hi, lo, (*fe)[7], ptr[31 -  2]);\r\n//\r\n//    *pcm2-- = MLZ(hi, lo);\r\n//  }\r\n//\r\n//  ++fo;\r\n//      }\r\n//\r\n//      ++Dptr;\r\n//\r\n//      ptr = *Dptr + po;\r\n//      ML0(hi, lo, (*fo)[0], ptr[ 0]);\r\n//      MLA(hi, lo, (*fo)[1], ptr[14]);\r\n//      MLA(hi, lo, (*fo)[2], ptr[12]);\r\n//      MLA(hi, lo, (*fo)[3], ptr[10]);\r\n//      MLA(hi, lo, (*fo)[4], ptr[ 8]);\r\n//      MLA(hi, lo, (*fo)[5], ptr[ 6]);\r\n//      MLA(hi, lo, (*fo)[6], ptr[ 4]);\r\n//      MLA(hi, lo, (*fo)[7], ptr[ 2]);\r\n//\r\n//      *pcm1 = -MLZ(hi, lo);\r\n//      pcm1 += 8;\r\n//\r\n//      phase = (phase + 1) % 16;\r\n//    }\r\n//  }\r\n//}\r\n\r\n/*\r\n * NAME:    synth.frame()\r\n * DESCRIPTION: perform PCM synthesis of frame subband samples\r\n */\r\nSynth.prototype.frame = function (frame) {\r\n    var nch = frame.header.nchannels();\r\n    var ns  = frame.header.nbsamples();\r\n\r\n    this.pcm.samplerate = frame.header.samplerate;\r\n    this.pcm.channels   = nch;\r\n    this.pcm.length     = 32 * ns;\r\n\r\n    // console.log(\"ns: \" + ns);\r\n\r\n    /*\r\n     if (frame.options & Mad.Option.HALFSAMPLERATE) {\r\n     this.pcm.samplerate /= 2;\r\n     this.pcm.length     /= 2;\r\n\r\n     throw new Error(\"HALFSAMPLERATE is not supported. What do you think? As if I have the time for this\");\r\n     }\r\n     */\r\n\r\n    this.full(frame, nch, ns);\r\n    this.phase = (this.phase + ns) % 16;\r\n}\r\n\r\nexport default Synth;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/synth.js","import Bit from './bit';\r\nimport Mad from './global';\r\n\r\nvar Stream = function (stream) {\r\n    this.stream = stream;                           /* actual buffer (js doesn't have pointers!) */\r\n    this.buffer = 0;                                /* input bitstream buffer */\r\n    this.bufend = stream.length;                    /* input bitstream buffer */\r\n    this.skiplen = 0;                               /* bytes to skip before next frame */\r\n\r\n    this.sync = 0;                                  /* stream sync found */\r\n    this.freerate = 0;                              /* free bitrate (fixed) */\r\n\r\n    this.this_frame = 0;                            /* start of current frame */\r\n    this.next_frame = 0;                            /* start of next frame */\r\n    \r\n    this.ptr = new Bit(this.stream, this.buffer); /* current processing bit pointer */\r\n    \r\n    this.anc_ptr = /* MadBit */ null;               /* ancillary bits pointer */\r\n    this.anc_bitlen = 0;                            /* number of ancillary bits */\r\n\r\n    this.main_data = /* string */ Mad.mul(\"\\0\", Mad.BUFFER_MDLEN); /* Layer III main_data() */\r\n    this.md_len = 0; /* bytes in main_data */\r\n\r\n    var options = 0;                                /* decoding options (see below) */\r\n    var error = Mad.Error.NONE;                     /* error code (see above) */\r\n};\r\n\r\nStream.fromFile = function(file, callback) {\r\n    var reader = new FileReader();\r\n    reader.onloadend = function (evt) {\r\n        callback(new Stream(evt.target.result));\r\n    };\r\n    reader.readAsBinaryString(file);\r\n};\r\n\r\nStream.prototype.readShort = function(bBigEndian) {\r\n    return this.stream.readU16(bBigEndian);\r\n};\r\n    \r\nStream.prototype.readSShort = function(bBigEndian) {\r\n    return this.stream.readI16(bBigEndian);\r\n};\r\n\r\nStream.prototype.getU8 = function(index) {\r\n    return this.stream.getU8(index);\r\n};\r\n\r\n\r\nStream.prototype.readU8 = function() {\r\n    return this.stream.readU8(index);\r\n};\r\n\r\nStream.prototype.readChars = function(length) {\r\n    return this.stream.read(length);\r\n};\r\n\r\nStream.prototype.peekChars = function(length) {\r\n    return this.stream.peek(length);\r\n}\r\n\r\n/*\r\n * NAME:        stream->sync()\r\n * DESCRIPTION: locate the next stream sync word\r\n */\r\nStream.prototype.doSync = function() {\r\n    var ptr = this.ptr.nextbyte();\r\n    var end = this.bufend;\r\n\r\n    while (ptr < end - 1 && !(this.getU8(ptr) == 0xff && (this.getU8(ptr + 1) & 0xe0) == 0xe0)) {\r\n        ++ptr;\r\n    }\r\n\r\n    if (end - ptr < Mad.BUFFER_GUARD) {\r\n        return -1;\r\n    }\r\n\r\n    this.ptr = new Bit(this.stream, ptr);\r\n    \r\n    return 0;\r\n}\r\n\r\nexport default Stream;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/stream.js","import ByteStream from './bytestream';\r\n\r\nvar BufferStream = function(arrayBuffer) {\r\n    this.state = {};\r\n    this.state['arrayBuffer'] = arrayBuffer;\r\n    this.state['byteBuffer'] = new Uint8Array(arrayBuffer);\r\n    this.state['amountRead'] = arrayBuffer.byteLength;\r\n}\r\n\r\nBufferStream.prototype = new ByteStream();\r\n\r\n\r\nBufferStream.prototype.absoluteAvailable = function(n) {\r\n    if (n > this.state['amountRead']) {\r\n        throw new Error(\"buffer underflow with absoluteAvailable!\");\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nBufferStream.prototype.seek = function(n) {\r\n    this.state['offset'] += n;\r\n}\r\n\r\nBufferStream.prototype.read = function(n) {\r\n    var result = this.peek(n);\r\n\r\n    this.seek(n);\r\n\r\n    return result;\r\n}\r\n\r\nBufferStream.prototype.peek = function(n) {\r\n    if (this.available(n)) {\r\n        var offset = this.state['offset'];\r\n\r\n        var result = this.get(offset, n);\r\n\r\n        return result;\r\n    } else {\r\n        throw new Error(\"buffer underflow with peek!\");\r\n    }\r\n}\r\n\r\nBufferStream.prototype.get = function(offset, length) {\r\n    if (this.absoluteAvailable(offset + length)) {\r\n        var tmpbuffer = \"\";\r\n        for (var i = offset; i < offset + length; i += 1) {\r\n            tmpbuffer = tmpbuffer + String.fromCharCode(this.state['byteBuffer'][i]);\r\n        }\r\n        return tmpbuffer;\r\n    } else {\r\n        throw new Error(\"buffer underflow with get!\");\r\n    }\r\n}\r\n\r\nByteStream.prototype.getU8 = function(offset, bigEndian) {\r\n    if (this.state['byteBuffer']) {\r\n        return this.state['byteBuffer'][offset];\r\n    }\r\n\r\n    return this.get(offset, 1).charCodeAt(0);\r\n}\r\n\r\nBufferStream.prototype.requestAbsolute = function(n, callback) {\r\n    if (n < this.state['amountRead']) {\r\n        callback();\r\n    } else {\r\n        this.state['callbacks'].push([n, callback]);\r\n    }\r\n}\r\n\r\nBufferStream.prototype.request = function(n, callback) {\r\n    this.requestAbsolute(this.state['offset'] + n, callback);\r\n}\r\n\r\nexport default BufferStream;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/bufferStream.js","import ByteStream from './bytestream';\r\n\r\nvar SubStream = function(stream, offset, length) {\r\n    this.state = { 'offset': 0 };\r\n    \r\n    this.state['start'] = offset;\r\n    \r\n    this.parentStream = stream;\r\n    \r\n    this.length = length;\r\n}\r\n\r\nSubStream.prototype = new ByteStream();\r\n\r\nSubStream.prototype.absoluteAvailable = function(n) {\r\n    return this.parentStream.absoluteAvailable(this.state['start'] + n);\r\n}\r\n\r\nSubStream.prototype.seek = function(n) {\r\n    this.state['offset'] += n;\r\n}\r\n\r\nSubStream.prototype.read = function(n) {\r\n    var result = this.peek(n);\r\n    \r\n    this.seek(n);\r\n    \r\n    return result;\r\n}\r\n\r\nSubStream.prototype.peek = function(n) {\r\n    return this.get(this.state['offset'], n);\r\n}\r\n\r\nSubStream.prototype.get = function(offset, length) {\r\n    return this.parentStream.get(this.state['start'] + offset, length);\r\n}\r\n\r\nSubStream.prototype.slice = function(start, end) {\r\n    return this.parentStream.get(this.state['start'] + start, end - start);\r\n}\r\n\r\nSubStream.prototype.requestAbsolute = function(n, callback) {\r\n    this.parentStream.requestAbsolute(this.state['start'] + n)\r\n}\r\n\r\nSubStream.prototype.request = function(n, callback) {\r\n    this.parentStream.requestAbsolute(this.state['start'] + this.state['offset'] + n)\r\n}\r\n\r\nexport default SubStream;\n\n\n// WEBPACK FOOTER //\n// ./src/audiocontext/decoder/substream.js","/**\r\n * MP3音频帧头信息模块\r\n * http://www.docin.com/p-1261649617.html\r\n * https://www.codeproject.com/Articles/8295/MPEG-Audio-Frame-Header\r\n */\r\n\r\n\r\nimport BitStream from '../common/bitstream';\r\n\r\n//比特率对应表(bit/s) MEPG1.0 LayerIII\r\nvar bitRateMap = {\r\n    '1': 32000,\r\n    '10': 40000,\r\n    '11': 48000,\r\n    '100': 56000,\r\n    '101': 64000,\r\n    '110': 80000,\r\n    '111': 96000,\r\n    '1000': 112000,\r\n    '1001': 128000,\r\n    '1010': 160000,\r\n    '1011': 192000,\r\n    '1100': 224000,\r\n    '1101': 256000,\r\n    '1110': 320000\r\n}\r\n//采样率对应表(Hz) MEPG1.0 LayerIII\r\nvar sampleRateMap = {\r\n    '0': 44100,\r\n    '1': 48000,\r\n    '10': 32000\r\n}\r\n\r\nvar HEADER_MASK = 0xffe0 >> 5; //同步头\r\nvar MPEG1 = 3;\r\nvar LAYER3 = 1;\r\nvar MAX_TAG_OFF = 10 * 1024; //查找帧头，最多查找10K\r\n\r\nvar hasParseVbr = false;\r\n\r\nfunction Header(_bitStream) {\r\n    this.init(_bitStream);\r\n}\r\n\r\nvar _proto_ = Header.prototype;\r\n\r\n/**\r\n * 初始化\r\n * @param  {object} arrayBuffer 二进制数组\r\n */\r\n_proto_.init = function(_bitStream) {\r\n    this.bitStream = _bitStream;\r\n}\r\n/**\r\n * 解析帧头信息\r\n * @return object 比特流\r\n */\r\n_proto_.parseHeader = function() {\r\n    var mask = 0;\r\n    var beginPos = this.bitStream.getBytePos();\r\n    do {\r\n        mask = this.bitStream.getBits(11); //获取11位同步头\r\n        if (mask != HEADER_MASK) {\r\n            if (this.bitStream.isEnd()) {\r\n                break;\r\n            }\r\n            this.bitStream.rewindBits(3);\r\n            continue;\r\n        }\r\n        this.verID = this.bitStream.getBits(2); //MPEG版本\r\n        this.layer = this.bitStream.getBits(2); //MPEG层数\r\n        this.protectionBit = this.bitStream.getBits(1); //保护位\r\n        if (!this.frameSync) {\r\n            this.bitStream.rewindBytes(2);\r\n            this.frameSync = this.bitStream.getBits(8).toString(16) + ',' + this.bitStream.getBits(8).toString(16);\r\n            this.frameSync = this.frameSync.toUpperCase(); //同步头\r\n        }\r\n        this.bitrateIndex = this.bitStream.getBitsStr(4);\r\n        this.bitRate = bitRateMap[this.bitrateIndex]; //比特率\r\n        this.sampleRateIndex = this.bitStream.getBitsStr(2);\r\n        this.sampleRate = sampleRateMap[this.sampleRateIndex]; //采样路索引\r\n        this.paddingBit = this.bitStream.getBits(1); //填充位\r\n        this.privateBit = this.bitStream.getBits(1); //私有位\r\n        this.channelMode = this.bitStream.getBits(2); //声道模式\r\n        this.channelModeExtension = this.bitStream.getBits(2); //声道扩展模式\r\n        this.copyright = this.bitStream.getBits(1); //版权\r\n        this.original = this.bitStream.getBits(1); //填充位\r\n        this.emphasis = this.bitStream.getBits(2); //强调\r\n\r\n        if (this.verID != MPEG1 || this.layer != LAYER3) {\r\n            return false;\r\n        }\r\n\r\n        this.frameSize = bitRateMap[this.bitrateIndex] * 1152 / 8;\r\n        this.frameSize /= sampleRateMap[this.sampleRateIndex];\r\n        this.frameSize += this.paddingBit; //帧长度\r\n        this.sideInfoSize = (this.channelMode == 3) ? 17 : 32; //帧边信息长度\r\n        this.duration = 1152 / sampleRateMap[this.sampleRateIndex]; //本帧时长\r\n\r\n        //计算主数据长度\r\n        this.mainDataSize = (this.frameSize - 4 - this.sideInfoSize) >> 0; //主数据长度\r\n        if (this.protectionBit == 0)\r\n            this.mainDataSize -= 2; //CRC\r\n        break;\r\n\r\n    } while (this.bitStream.getBytePos() - beginPos < MAX_TAG_OFF);\r\n\r\n    if (this.bitStream.getBytePos() - beginPos >= MAX_TAG_OFF || this.bitStream.isEnd()) {\r\n        return false;\r\n    }\r\n\r\n    this.endBytePos = this.bitStream.getBytePos();\r\n    if (!hasParseVbr) {\r\n        hasParseVbr = true;\r\n        this.parseVbr();\r\n        if (this.toc) {\r\n            this.totalDuration = this.totalFrames * 1152 / sampleRateMap[this.sampleRateIndex]; //总时长\r\n        }\r\n    }\r\n    return this.bitStream;\r\n}\r\n/**\r\n * 解析vbr信息\r\n */\r\n_proto_.parseVbr = function() {\r\n    var flags = 0;\r\n    var tag = '';\r\n\r\n    do {\r\n        tag = String.fromCharCode(this.bitStream.getByte(), this.bitStream.getByte(), this.bitStream.getByte(), this.bitStream.getByte());\r\n        if (tag == 'Xing' || tag == 'Info') { //Xing，Info头\r\n            this.tocSize = 100; //vbr索引表长度\r\n            flags = this.bitStream.getBits(32);\r\n            if (flags & 1) {\r\n                this.totalFrames = this.bitStream.getBits(32); //总帧数\r\n            }\r\n            if (flags & 2) {\r\n                this.totalBytes = this.bitStream.getBits(32); //总长度\r\n            }\r\n            if (flags & 4) {\r\n                this.toc = []; //vbr索引表\r\n                for (var i = 0; i < this.tocSize; i++) {\r\n                    this.toc[i] = this.bitStream.getByte();\r\n                }\r\n            }\r\n            this.bitStream.setBytePos(this.endBytePos);\r\n            return this.bitStream;\r\n        } else if (tag == 'VBRI') { //VBRI头\r\n            this.bitStream.skipBytes(6);\r\n            this.totalBytes = this.bitStream.getBits(32);\r\n            this.totalFrames = this.bitStream.getBits(32);\r\n            this.tocSize = this.bitStream.getBits(16);\r\n            this.bitStream.skipBytes(6);\r\n            this.toc = [];\r\n            for (var i = 0; i < tocSize; i++) {\r\n                this.toc[i] = this.bitStream.getByte();\r\n            }\r\n            this.bitStream.setBytePos(this.endBytePos);\r\n            return this.bitStream;\r\n        } else {\r\n            if (this.bitStream.isEnd()) {\r\n                break;\r\n            }\r\n            this.bitStream.rewindBytes(3);\r\n        }\r\n    } while (tag != 'Xing' && tag != 'Info' && tag != 'VBRI' && this.bitStream.getBytePos() < MAX_TAG_OFF)\r\n\r\n    this.bitStream.setBytePos(this.endBytePos);\r\n\r\n    return false;\r\n}\r\n\r\nexport default Header;\n\n\n// WEBPACK FOOTER //\n// ./src/mp3info/header.js","/**\r\n * MP3音频ID3标签信息模块\r\n * http://wiki.hydrogenaud.io/index.php?this.title=Ape_Tags_Flags\r\n */\r\n\r\nimport BitStream from '../common/bitstream';\r\n\r\nvar MAX_TAG_OFF = 10 * 1024; //查找标签头时，最多查找10K\r\nvar TEXT_ENCODING = []; //字符解码器\r\nTEXT_ENCODING[0] = new TextDecoder('GBK');\r\nTEXT_ENCODING[1] = new TextDecoder('UTF-16');\r\nTEXT_ENCODING[2] = new TextDecoder('UTF-16BE');\r\nTEXT_ENCODING[3] = new TextDecoder('UTF-8');\r\n\r\nvar gbkDecoder = TEXT_ENCODING[0];\r\nvar utf8Decoder = TEXT_ENCODING[3];\r\n\r\nfunction Id3Tag(arrayBuffer) {\r\n    this.bitStream = new BitStream(arrayBuffer);\r\n}\r\n\r\nvar _proto_ = Id3Tag.prototype;\r\n\r\n/**\r\n * 判断是否为ID3V1标签\r\n */\r\n_proto_.checkId3V1 = function() {\r\n    if (this.bitStream.getSize() < 128) {\r\n        return false;\r\n    }\r\n    var tag = '';\r\n    do {\r\n        tag = String.fromCharCode(this.bitStream.getByte(), this.bitStream.getByte(), this.bitStream.getByte());\r\n        if (this.bitStream.isEnd()) {\r\n            break;\r\n        }\r\n        if (tag != 'TAG') {\r\n            this.bitStream.rewindBytes(2);\r\n        }\r\n    } while (tag != 'TAG' && this.bitStream.getBytePos() < MAX_TAG_OFF);\r\n\r\n    if (tag != 'TAG') {\r\n        return false;\r\n    }\r\n\r\n    this.tagSize = 128; //标签长度\r\n    return true;\r\n}\r\n/**\r\n * 判断是否为ID3V2标签\r\n */\r\n_proto_.checkId3V2 = function() {\r\n    var tag = '';\r\n    do {\r\n        tag = String.fromCharCode(this.bitStream.getByte(), this.bitStream.getByte(), this.bitStream.getByte());\r\n        if (this.bitStream.isEnd()) {\r\n            break;\r\n        }\r\n        if (tag != 'ID3') {\r\n            this.bitStream.rewindBytes(2);\r\n        }\r\n    } while (tag != 'ID3' && this.bitStream.getBytePos() < MAX_TAG_OFF);\r\n\r\n    if (tag != 'ID3') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * 判断是否为APE标签\r\n */\r\n_proto_.checkApe = function() {\r\n    var bytes = [];\r\n    var tag = '';\r\n    do {\r\n        for (var i = 0; i < 8; i++) {\r\n            bytes[i] = this.bitStream.getByte();\r\n        }\r\n        tag = String.fromCharCode.apply(null, bytes);\r\n        if (this.bitStream.isEnd()) {\r\n            break;\r\n        }\r\n        if (tag != 'APETAGEX') {\r\n            this.bitStream.rewindBytes(7);\r\n        }\r\n    } while (tag != 'APETAGEX' && this.bitStream.getBytePos() < MAX_TAG_OFF);\r\n\r\n    if (tag != 'APETAGEX') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * 解析ID3V1标签\r\n * @return number this.tagSize\r\n */\r\n_proto_.parseId3V1 = function() {\r\n    this.bitStream.reset();\r\n    if (this.checkId3V1() == false)\r\n        return 0;\r\n    var i = 0;\r\n    var bytes = new Uint8Array(30);\r\n    if (this.bitStream.getSize() < 128) {\r\n        return this.tagSize;\r\n    }\r\n    for (i = 0; i < 30; i++) {\r\n        bytes[i] = this.bitStream.getByte();\r\n    }\r\n    this.title = gbkDecoder.decode(bytes); //标题\r\n\r\n    for (i = 0; i < 30; i++) {\r\n        bytes[i] = this.bitStream.getByte();\r\n    }\r\n    this.artist = gbkDecoder.decode(bytes); //艺术家\r\n\r\n    for (i = 0; i < 30; i++) {\r\n        bytes[i] = this.bitStream.getByte();\r\n    }\r\n    this.album = gbkDecoder.decode(bytes); //专辑\r\n\r\n    for (i = 0; i < 4; i++) {\r\n        bytes[i] = this.bitStream.getByte();\r\n    }\r\n    this.year = gbkDecoder.decode(bytes); //年份\r\n\r\n    for (i = 0; i < 30; i++) {\r\n        bytes[i] = this.bitStream.getByte();\r\n    }\r\n    this.comment = gbkDecoder.decode(bytes); //注释\r\n\r\n    this.genre = this.bitStream.getByte(); //风格\r\n\r\n    return this.tagSize;\r\n}\r\n/**\r\n * 解析ID3V2标签\r\n * @return number this.tagSize\r\n */\r\n_proto_.parseId3V2 = function() {\r\n    var self = this;\r\n    this.bitStream.reset();\r\n    if (this.checkId3V2() == false)\r\n        return 0;\r\n    this.bitStream.skipBytes(3);\r\n    this.tagSize = (((this.bitStream.getByte() & 0x7F) << 21) |\r\n        ((this.bitStream.getByte() & 0x7F) << 14) |\r\n        ((this.bitStream.getByte() & 0x7F) << 7) |\r\n        (this.bitStream.getByte() & 0x7F)) + 10;\r\n\r\n    if (this.bitStream.getSize() < this.tagSize) {\r\n        return this.tagSize;\r\n    }\r\n\r\n    while (this.bitStream.getBytePos() < this.tagSize && !this.bitStream.isEnd()) {\r\n        _getItem();\r\n    }\r\n\r\n    function _getItem() {\r\n        var key = String.fromCharCode(self.bitStream.getByte(), self.bitStream.getByte(), self.bitStream.getByte(), self.bitStream.getByte());\r\n        var len = self.bitStream.getBits(32);\r\n        var cont = '';\r\n        var bytes = new Uint8Array(len);\r\n        var strCode = 0; //字符编码索引\r\n\r\n        if (!(key.charAt(0) <= 'z' && key.charAt(0) >= 'a') && !(key.charAt(0) <= 'Z' && key.charAt(0) >= 'A')) { //信息已读取完毕，后面为垃圾数据\r\n            self.bitStream.setBytePos(self.tagSize);\r\n            self.bitStream.setBitPos(0);\r\n            return;\r\n        }\r\n\r\n        self.bitStream.skipBytes(2);\r\n        strCode = self.bitStream.getByte();\r\n        if (strCode > 3) {\r\n            strCode = 3;\r\n        }\r\n        for (var i = 0; i < len - 1; i++) {\r\n            bytes[i] = self.bitStream.getByte();\r\n        }\r\n\r\n        cont = TEXT_ENCODING[strCode].decode(bytes);\r\n\r\n        // if(strCode>0){\r\n        //  cont = cont.replace(/[^\\u4e00-\\u9fa5]/g, \"\");\r\n        // }\r\n\r\n        switch (key) {\r\n            case 'TIT2':\r\n                self.title = cont;\r\n                break;\r\n            case 'TPE1':\r\n                self.artist = cont;\r\n                break;\r\n            case 'TALB':\r\n                self.album = cont;\r\n                break;\r\n            case 'TYER':\r\n                self.year = cont;\r\n                break;\r\n            case 'COMM':\r\n                self.comment = cont;\r\n                break;\r\n            case 'TCON':\r\n                self.genre = cont;\r\n                break;\r\n        }\r\n    }\r\n    return this.tagSize;\r\n}\r\n/**\r\n * 解析APE标签\r\n */\r\n_proto_.parseApe = function() {\r\n    var self = this;\r\n    var itemSize = 0;\r\n    var isApeHeader = 0;\r\n    var isHeader = 0;\r\n    this.bitStream.reset();\r\n    if (this.checkApe() == false)\r\n        return 0;\r\n    this.bitStream.skipBytes(4);\r\n    //低位在前\r\n    this.tagSize = this.bitStream.getByte() | (this.bitStream.getByte() << 8) | (this.bitStream.getByte() << 16) | (this.bitStream.getByte() << 24);\r\n    itemSize = this.bitStream.getByte() | (this.bitStream.getByte() << 8) | (this.bitStream.getByte() << 16) | (this.bitStream.getByte() << 24);\r\n    this.bitStream.skipBits(2);\r\n    if (this.bitStream.getBits1()) { //是ApeHeader\r\n        this.tagSize += 32;\r\n        isHeader = 1;\r\n    }\r\n    this.bitStream.skipBits(32 - 3);\r\n    this.bitStream.skipBytes(8);\r\n    if (this.bitStream.getBytePos() < this.tagSize || this.bitStream.getSize() < this.tagSize) {\r\n        return this.tagSize;\r\n    }\r\n    if (!isHeader) {\r\n        this.bitStream.rewindBytes(this.tagSize);\r\n    }\r\n    for (var i = 0; i < itemSize && this.bitStream.getBytePos() < this.tagSize && !this.bitStream.isEnd(); i++) {\r\n        _getItem();\r\n    }\r\n\r\n    function _getItem() {\r\n        var key = '';\r\n        var cont = '';\r\n        var byte = 0;\r\n        //低位在前\r\n        var len = self.bitStream.getByte() | (self.bitStream.getByte() << 8) | (self.bitStream.getByte() << 16) | (self.bitStream.getByte() << 24);\r\n        var bytes = new Uint8Array(len);\r\n        self.bitStream.skipBytes(4);\r\n        byte = self.bitStream.getByte();\r\n\r\n        while (byte != 0 && self.bitStream.getBytePos() < self.tagSize) {\r\n            key += String.fromCharCode(byte);\r\n            byte = self.bitStream.getByte();\r\n        }\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            bytes[i] = self.bitStream.getByte();\r\n        }\r\n        cont = utf8Decoder.decode(bytes);\r\n        switch (key) {\r\n            case 'Title':\r\n                self.title = cont;\r\n                break;\r\n            case 'Artist':\r\n                self.artist = cont;\r\n                break;\r\n            case 'Album':\r\n                self.album = cont;\r\n                break;\r\n            case 'Year':\r\n                self.year = cont;\r\n                break;\r\n            case 'Comment':\r\n                self.comment = cont;\r\n                break;\r\n            case 'Genre':\r\n                self.genre = cont;\r\n                break;\r\n        }\r\n    }\r\n    return this.tagSize;\r\n}\r\n\r\nexport default Id3Tag;\n\n\n// WEBPACK FOOTER //\n// ./src/mp3info/id3tag.js","import Audio from '../audio/index';\r\nimport requestRange from '../common/range';\r\nimport MP3Info from '../mp3info/mp3info';\r\n\r\nvar player = {\r\n    /**\r\n     * 初始化播放器\r\n     * @param  {Object} opt 参数对象\r\n     * @param  {String} opt.url 音频文件地址\r\n     * @param  {Object} opt.audioInfo 音频信息对象\r\n     * @param  {Audio} opt.audio audio文档对象\r\n     */\r\n    _init: function(opt) {\r\n        this.url = opt.url; //mp3文件地址\r\n        this.audioInfo = opt.audioInfo; //mp3文件信息\r\n        this.audio = opt.audio;\r\n        this.onbeforedecode = opt.onbeforedecode || function(){}; //解密函数\r\n        this.fileSize = this.audioInfo.fileSize; //文件总大小\r\n        this.blockSize = 1024 * 1024; //每次加载1M\r\n        this.end = -1; //上个片段的末尾偏移量\r\n        this.mimeCodec = 'audio/mpeg';\r\n        this._generateBlob();\r\n    },\r\n    //生成blob对象\r\n    _generateBlob: function() {\r\n        var self = this;\r\n        this.mediaSource = new MediaSource();\r\n        this.audio.src = URL.createObjectURL(this.mediaSource);\r\n        this.mediaSource.addEventListener('sourceopen', function() {\r\n            if (self.mediaSource.readyState == 'open') {\r\n                self.sourceBuffer = self.mediaSource.addSourceBuffer(self.mimeCodec);\r\n                self.sourceBuffer.addEventListener('updateend', function() {\r\n                    if (self.end >= self.fileSize - 1) {\r\n                        self.mediaSource.endOfStream();\r\n                    } else {\r\n                        self._loadNext();\r\n                    }\r\n                })\r\n                self._loadNext();\r\n            }\r\n        });\r\n    },\r\n    //下载下一个音频片段数据\r\n    _loadNext: function() {\r\n        var self = this;\r\n        this.begin = this.end+1;\r\n        this.end = this.begin + this.blockSize;\r\n        if (this.begin == 0) {\r\n            this.end += this.audioInfo.audioDataOffset;\r\n        }\r\n        if (this.end >= this.fileSize) {\r\n            this.end = this.fileSize - 1;\r\n        }\r\n        requestRange(this.url, this.begin, this.end, {\r\n            onsuccess: function(request) {\r\n                var buffer = request.response;\r\n                //数据解密\r\n                self.onbeforedecode(buffer);\r\n                self.sourceBuffer.appendBuffer(buffer);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction Mp3Player(url, opt) {\r\n    this.url = url;\r\n    opt.audio = new window.Audio();\r\n    this._init(opt);\r\n    return new Audio(opt);\r\n}\r\n\r\nMp3Player.prototype._init = function(opt) {\r\n    var onloadedmetadata = opt.onloadedmetadata;\r\n    var self = this;\r\n    //on使用mediasource方式，Aduio对象的loadedmetadata事件可能获取不到时长，因此使用AudioInfo去回调loadedmetadata\r\n    opt.onloadedmetadata = null;\r\n    MP3Info.init(this.url, {\r\n        onloadedmetadata: onloadedmetadata,\r\n        onbeforedecode: opt.onbeforedecode\r\n    }).then(function(audioInfo) {\r\n        player._init({\r\n            url: self.url,\r\n            audioInfo: audioInfo,\r\n            audio: opt.audio,\r\n            onbeforedecode: opt.onbeforedecode\r\n        });\r\n        if (!audioInfo) {\r\n            opt.errorCb && errorCb('parse audioInfo failed');\r\n        }\r\n    }).catch(function(e) {\r\n        console.log(e);\r\n        opt.errorCb && errorCb('load audioInfo failed');\r\n    });\r\n}\r\n\r\nexport default Mp3Player;\n\n\n// WEBPACK FOOTER //\n// ./src/mediasource/player.js","function Audio(options) {\r\n    var emptyFn = function() {};\r\n    var onloadstart = null;\r\n    var onloadedmetadata = null; //更新总时长回调\r\n    var ontimeupdate = null; //更新时间回调\r\n    var onupdateBar = null; // 更新进度条回调\r\n    var onwaiting = null; //开始播放或播放过程中由于缓冲暂停时回调\r\n    var onplaying = null; //开始播放或播放过程中缓冲完成回调\r\n    var oncanplay = null; //当前位置可播放时回调\r\n    var onseeking = null; //寻址中回调\r\n    var onplay = null; //播放回调\r\n    var onended = null; //播放完成\r\n    var onpause = null; //暂停回调\r\n    var onerror = null; //错误回调\r\n    var audio = null; //音频对象\r\n    var playBtn = null; //播放按钮\r\n    var pauseBtn = null; //暂停按钮\r\n    var forceSeek = false; //是否强制移动播放位置\r\n    var currentTime = 0; //当前播放位置\r\n    var seekTimeoutId = null; //寻址超时计时器\r\n    var seekMaxTime = 30000; //最大寻址时长\r\n    var seeking = false; //是否正在寻址中\r\n    var canplay = false; //是否就绪\r\n    var canUpdateTime = true; //是否可更新时长\r\n    var allListener = [];\r\n    var AudioObj = {\r\n        init: function(options) {\r\n            ontimeupdate = options.ontimeupdate || emptyFn;\r\n            onseeking = options.onseeking || emptyFn;\r\n            onwaiting = options.onwaiting || emptyFn;\r\n            onplaying = options.onplaying || emptyFn;\r\n            oncanplay = options.oncanplay || emptyFn;\r\n            onloadstart = options.onloadstart || emptyFn;\r\n            onplay = options.onplay || emptyFn;\r\n            onended = options.onended || emptyFn;\r\n            onpause = options.onpause || emptyFn;\r\n            onupdateBar = options.onupdateBar || emptyFn;\r\n            onloadedmetadata = options.onloadedmetadata || emptyFn;\r\n            onerror = options.onerror || emptyFn;\r\n            audio = options.audio;\r\n            forceSeek = options.forceSeek || false;\r\n            playBtn = options.playBtn;\r\n            pauseBtn = options.pauseBtn;\r\n            if (!audio) {\r\n                return;\r\n            }\r\n            this.audio = audio;\r\n            this._bindAudioEvent();\r\n            this._bindClickEvent();\r\n        },\r\n        destroy: function() {\r\n            this._removeAllEvent();\r\n        },\r\n        /**\r\n         * [seek 设置播放位置,对外接口]\r\n         * @param  {Number}  percent [百分比或时间]\r\n         * @param  {Boolean} isTime  [是否是时间]\r\n         * @param  {Boolean} ifStop  [是否停止]\r\n         */\r\n        seek: function(percent, isTime, ifStop) {\r\n            if (!audio.duration) {\r\n                if (!isTime)\r\n                    onupdateBar(percent);\r\n                return;\r\n            }\r\n            var self = this;\r\n            if (!ifStop) {\r\n                this.play();\r\n            } else {\r\n                this.pause()\r\n            }\r\n            if (!isTime) {\r\n                percent = percent > 100 ? 100 : percent;\r\n                percent = percent < 0 ? 0 : percent;\r\n                currentTime = percent * audio.duration / 100;\r\n            } else {\r\n                currentTime = percent;\r\n                percent = currentTime / audio.duration * 100;\r\n            }\r\n            if (!this._ifSeekable(currentTime)) {\r\n                console.log('can not seek');\r\n                onupdateBar(percent);\r\n                return;\r\n            }\r\n            ontimeupdate(currentTime);\r\n            onupdateBar(percent);\r\n            audio.currentTime = currentTime;\r\n            if (forceSeek) {\r\n                seeking = true;\r\n                self.pause();\r\n                seekTimeoutId = setTimeout(function() {\r\n                    seeking = false;\r\n                    self._setNearCurrentTime();\r\n                    if (!ifStop) {\r\n                        self.play(audio);\r\n                    }\r\n                }, seekMaxTime);\r\n            }\r\n        },\r\n        /**\r\n         * @todo [更新时间，对外接口]\r\n         * @param    {[Number]}   percent [百分比或时长]\r\n         * @param    {Boolean}  isTime  [是否是时长]\r\n         */\r\n        updateTime: function(percent, isTime) {\r\n            if (isTime) {\r\n                ontimeupdate(percent);\r\n                return;\r\n            } else if (!audio.duration || !audio.seekable.length) {\r\n                return;\r\n            } else {\r\n                percent = percent > 100 ? 100 : percent;\r\n                percent = percent < 0 ? 0 : percent;\r\n                ontimeupdate(percent * audio.duration / 100);\r\n            }\r\n        },\r\n        /**\r\n         * [play 播放，对外接口]\r\n         */\r\n        play: function() {\r\n            if (audio.paused) {\r\n                audio.play();\r\n            }\r\n        },\r\n        /**\r\n         * [play 暂停播放，对外接口]\r\n         */\r\n        pause: function() {\r\n            if (!audio.paused) {\r\n                audio.pause();\r\n            }\r\n        },\r\n        /**\r\n         * [stopUpdateTime 停止内部更新时间，对外接口]\r\n         */\r\n        stopUpdateTime: function() {\r\n            canUpdateTime = false;\r\n        },\r\n        /**\r\n         * [startUpdateTime 开始内部更新时间，对外接口]\r\n         */\r\n        startUpdateTime: function() {\r\n            canUpdateTime = true;\r\n        },\r\n        removeAllEvent: function() {\r\n            this._removeAllEvent();\r\n\r\n        },\r\n        getSource: function() {\r\n            return audio;\r\n        },\r\n        _bindAudioEvent: function() {\r\n            var self = this;\r\n            this._addEvent(audio, 'loadstart', function() {\r\n                onloadstart();\r\n                console.log('loadstart');\r\n            });\r\n            this._addEvent(audio, 'play', function() {\r\n                onplay();\r\n                console.log('play');\r\n            });\r\n            this._addEvent(audio, 'ended', function() {\r\n                onended();\r\n                console.log('ended');\r\n            });\r\n            this._addEvent(audio, 'pause', function() {\r\n                onpause();\r\n                console.log('puase');\r\n            });\r\n            this._addEvent(audio, 'waiting', function() {\r\n                onwaiting();\r\n                console.log('waiting');\r\n            });\r\n            this._addEvent(audio, 'playing', function() {\r\n                if (this.readyState == 4) {\r\n                    onplaying();\r\n                }\r\n                console.log('playing');\r\n            });\r\n            this._addEvent(audio, 'seeking', function() {\r\n                onseeking();\r\n                console.log('seeking');\r\n            });\r\n            if (forceSeek) {\r\n                this._addEvent(audio, 'seeked', function() {\r\n                    if (seeking) {\r\n                        seeking = false;\r\n                        clearTimeout(seekTimeoutId);\r\n                        self.play();\r\n                    }\r\n                    console.log('seeked');\r\n                });\r\n            }\r\n            this._addEvent(audio, 'loadedmetadata', function() {\r\n                onloadedmetadata(audio.duration);\r\n                //兼容ios首次必须交互触发canplay事件\r\n                oncanplay();\r\n                canplay = true;\r\n                console.log('loadedmetadata');\r\n            })\r\n            this._addEvent(audio, 'canplay', function() {\r\n                oncanplay();\r\n                canplay = true;\r\n                console.log('canplay');\r\n            });\r\n            this._addEvent(audio, 'timeupdate', function() {\r\n                if (!canUpdateTime)\r\n                    return;\r\n                var percent = 0;\r\n                var time = audio.currentTime;\r\n                if (Math.abs(time - currentTime) > 0.05 && !audio.seeking) {\r\n                    ontimeupdate(time, true);\r\n                } else {\r\n                    ontimeupdate(time);\r\n                }\r\n                if (audio.duration) {\r\n                    percent = time / audio.duration * 100;\r\n                }\r\n                onupdateBar(percent);\r\n            });\r\n            this._addEvent(audio, 'stalled', function(e) {\r\n                console.log('stalled');\r\n            });\r\n            this._addEvent(audio, 'error', function(e) {\r\n                onerror();\r\n                console.log('error');\r\n            });\r\n            this._addEvent(audio, 'abort', function(e) {\r\n                console.log('abort');\r\n            });\r\n\r\n        },\r\n        _bindClickEvent: function() {\r\n            var self = this;\r\n            if (playBtn) {\r\n                this._addEvent(playBtn, 'click', function(event) {\r\n                    self._stopPropagation(event);\r\n                    self.play();\r\n                })\r\n            }\r\n            if (pauseBtn) {\r\n                this._addEvent(pauseBtn, 'click', function(event) {\r\n                    self._stopPropagation(event);\r\n                    self.pause();\r\n                })\r\n            }\r\n        },\r\n        /**\r\n         * @todo [播放位置是否可寻址]\r\n         * @param    {[Number]}   time [时长]\r\n         * @return   {[Boolean]}       [结果]\r\n         */\r\n        _ifSeekable: function(time) {\r\n            var seekable = audio.seekable;\r\n            var canSeek = false;\r\n            for (var i = 0; i < seekable.length; i++) {\r\n                var start = seekable.start(i);\r\n                var end = seekable.end(i);\r\n                if (time >= start && time <= end) {\r\n                    canSeek = true;\r\n                    break;\r\n                }\r\n            }\r\n            return canSeek;\r\n        },\r\n        /**\r\n         * [_setNearCurrentTime 设置最接近的播放位置]\r\n         */\r\n        _setNearCurrentTime: function() {\r\n            var bufferd = audio.bufferd;\r\n            var distance = 0;\r\n            var preTime = 0;\r\n            for (var i = 0; i < bufferd.length; i++) {\r\n                var start = bufferd.start(i);\r\n                var end = bufferd.end(i);\r\n                if (Math.abs(start - currentTime) < distance || distance == 0) {\r\n                    distance = Math.abs(start - currentTime);\r\n                    preTime = start;\r\n                }\r\n                if (Math.abs(end - currentTime) < distance || distance == 0) {\r\n                    distance = Math.abs(end - currentTime);\r\n                    preTime = end;\r\n                }\r\n            }\r\n            currentTime = preTime;\r\n            audio.currentTime = currentTime;\r\n        },\r\n        _addEvent: function(ele, event_name, func) {\r\n            if (window.attachEvent) {\r\n                ele.attachEvent('on' + event_name, func);\r\n            } else {\r\n                ele.addEventListener(event_name, func, false); //默认事件是冒泡\r\n            }\r\n            allListener[allListener.length] = {\r\n                ele: ele,\r\n                func: func,\r\n                event: event_name\r\n            }\r\n        },\r\n        _removeEvent: function(ele, event_name, func) {\r\n            if (window.attachEvent) {\r\n                ele.detachEvent('on' + event_name, func);\r\n            } else {\r\n                ele.removeEventListener(event_name, func, false);\r\n            }\r\n        },\r\n        _removeAllEvent: function() {\r\n            for (var i = 0; i < allListener.length; i++) {\r\n                var listener = allListener[i];\r\n                this._removeEvent(listener.ele, listener.event, listener.func);\r\n            }\r\n        },\r\n        _stopPropagation: function(e) {\r\n            if (e && e.stopPropagation) { //非IE   \r\n                e.stopPropagation();\r\n            } else { //IE   \r\n                window.event.cancelBubble = true;\r\n            }\r\n        },\r\n        _preventDefault: function(e) {\r\n            e.preventDefault ? e.preventDefault() : (e.returnValue = false);\r\n        }\r\n    }\r\n    if (options) {\r\n        AudioObj.init(options);\r\n    }\r\n    return AudioObj;\r\n}\r\n\r\nexport default Audio;\n\n\n// WEBPACK FOOTER //\n// ./src/audio/index.js"],"sourceRoot":""}